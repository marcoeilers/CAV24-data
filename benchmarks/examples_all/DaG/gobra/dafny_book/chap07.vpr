domain ADT$Unary_9949492a_T  {
  
  function ADT$Unary_9949492a_T_Suc_9949492a_F(preA: ADT$Unary_9949492a_T): ADT$Unary_9949492a_T 
  
  unique function ADT$Unary_9949492a_T_Suc_9949492a_F_tag(): Int 
  
  function ADT$Unary_9949492a_T_Zero_9949492a_F(): ADT$Unary_9949492a_T 
  
  unique function ADT$Unary_9949492a_T_Zero_9949492a_F_tag(): Int 
  
  function ADT$Unary_9949492a_T_dflt(): ADT$Unary_9949492a_T 
  
  function ADT$Unary_9949492a_T_preA(t: ADT$Unary_9949492a_T): ADT$Unary_9949492a_T 
  
  function ADT$Unary_9949492a_T_tag(t: ADT$Unary_9949492a_T): Int 
  
  function rank$ADT$Unary_9949492a_T(x: ADT$Unary_9949492a_T): Int 
  
  axiom {
    (forall preA: ADT$Unary_9949492a_T ::
      { ADT$Unary_9949492a_T_Suc_9949492a_F(preA) }
      ADT$Unary_9949492a_T_tag(ADT$Unary_9949492a_T_Suc_9949492a_F(preA)) ==
      ADT$Unary_9949492a_T_Suc_9949492a_F_tag() &&
      ADT$Unary_9949492a_T_preA(ADT$Unary_9949492a_T_Suc_9949492a_F(preA)) ==
      preA)
  }
  
  axiom {
    (forall preA: ADT$Unary_9949492a_T ::
      { rank$ADT$Unary_9949492a_T(ADT$Unary_9949492a_T_Suc_9949492a_F(preA)) }
      rank$ADT$Unary_9949492a_T(preA) <
      rank$ADT$Unary_9949492a_T(ADT$Unary_9949492a_T_Suc_9949492a_F(preA)))
  }
  
  axiom {
    (forall t: ADT$Unary_9949492a_T ::
      { ADT$Unary_9949492a_T_preA(t) }
      ADT$Unary_9949492a_T_tag(t) ==
      ADT$Unary_9949492a_T_Suc_9949492a_F_tag() ==>
      t ==
      ADT$Unary_9949492a_T_Suc_9949492a_F(ADT$Unary_9949492a_T_preA(t)))
  }
  
  axiom {
    (forall t: ADT$Unary_9949492a_T ::
      { ADT$Unary_9949492a_T_tag(t) }
      t == ADT$Unary_9949492a_T_Zero_9949492a_F() ||
      t ==
      ADT$Unary_9949492a_T_Suc_9949492a_F(ADT$Unary_9949492a_T_preA(t)))
  }
  
  axiom {
    (forall x: ADT$Unary_9949492a_T ::
      { rank$ADT$Unary_9949492a_T(x) }
      0 <= rank$ADT$Unary_9949492a_T(x))
  }
  
  axiom {
    ADT$Unary_9949492a_T_tag(ADT$Unary_9949492a_T_Zero_9949492a_F()) ==
    ADT$Unary_9949492a_T_Zero_9949492a_F_tag()
  }
}

domain IntWellFoundedOrder  {
  
  axiom integer_ax_bound {
    (forall int1: Int ::
      { (bounded(int1): Bool) }
      int1 >= 0 ==> (bounded(int1): Bool))
  }
  
  axiom integer_ax_dec {
    (forall int1: Int, int2: Int ::
      { (decreasing(int1, int2): Bool) }
      int1 < int2 ==> (decreasing(int1, int2): Bool))
  }
}

domain PredicateInstance  {
  
  
}

domain PredicateInstancesNestedRelation  {
  
  function nestedPredicates(l1: PredicateInstance, l2: PredicateInstance): Bool 
  
  axiom nestedReflex {
    (forall l1: PredicateInstance ::!nestedPredicates(l1, l1))
  }
  
  axiom nestedTrans {
    (forall l1: PredicateInstance, l2: PredicateInstance, l3: PredicateInstance ::
      { nestedPredicates(l1, l2), nestedPredicates(l2, l3) }
      nestedPredicates(l1, l2) && nestedPredicates(l2, l3) ==>
      nestedPredicates(l1, l3))
  }
}

domain PredicateInstancesWellFoundedOrder  {
  
  axiom predicate_instances_ax_bound {
    (forall l1: PredicateInstance ::
      { (bounded(l1): Bool) }
      (bounded(l1): Bool))
  }
  
  axiom predicate_instances_ax_dec {
    (forall l1: PredicateInstance, l2: PredicateInstance ::
      { nestedPredicates(l1, l2) }
      (decreasing(l1, l2): Bool) == nestedPredicates(l1, l2))
  }
}

domain String  {
  
  function strConcat(l: Int, r: Int): Int 
  
  function strLen(id: Int): Int 
  
  unique function stringLit(): Int 
  
  axiom {
    (forall l: Int, r: Int ::
      { strLen(strConcat(l, r)) }
      strLen(strConcat(l, r)) == strLen(l) + strLen(r))
  }
  
  axiom {
    (forall str: Int :: { strLen(str) } 0 <= strLen(str))
  }
  
  axiom {
    strLen(stringLit()) == 0
  }
}

domain Tuple0  {
  
  function tuple0(): Tuple0 
}

domain Tuple2[T0, T1]  {
  
  function get0of2(p: Tuple2[T0, T1]): T0 
  
  function get1of2(p: Tuple2[T0, T1]): T1 
  
  function tuple2(t0: T0, t1: T1): Tuple2[T0, T1] 
  
  axiom getter_over_tuple2 {
    (forall t0: T0, t1: T1 ::
      { (tuple2(t0, t1): Tuple2[T0, T1]) }
      (get0of2((tuple2(t0, t1): Tuple2[T0, T1])): T0) == t0 &&
      (get1of2((tuple2(t0, t1): Tuple2[T0, T1])): T1) == t1)
  }
  
  axiom tuple2_over_getter {
    (forall p: Tuple2[T0, T1] ::
      { (get0of2(p): T0) }
      { (get1of2(p): T1) }
      (tuple2((get0of2(p): T0), (get1of2(p): T1)): Tuple2[T0, T1]) == p)
  }
}

domain Types  {
  
  function behavioral_subtype_Types(l: Types, r: Types): Bool 
  
  function comparableType_Types(t: Types): Bool 
  
  function empty_interface_Types(): Types 
  
  unique function empty_interface_Types_tag(): Int 
  
  function nil_Types(): Types 
  
  unique function nil_Types_tag(): Int 
  
  function tag_Types(t: Types): Int 
  
  axiom {
    (forall a: Types ::
      { behavioral_subtype_Types(a, a) }
      behavioral_subtype_Types(a, a))
  }
  
  axiom {
    (forall a: Types ::
      { behavioral_subtype_Types(a, empty_interface_Types()) }
      behavioral_subtype_Types(a, empty_interface_Types()))
  }
  
  axiom {
    (forall a: Types, b: Types, c: Types ::
      { behavioral_subtype_Types(a, b), behavioral_subtype_Types(b, c) }
      behavioral_subtype_Types(a, b) && behavioral_subtype_Types(b, c) ==>
      behavioral_subtype_Types(a, c))
  }
  
  axiom {
    comparableType_Types(empty_interface_Types()) == false
  }
  
  axiom {
    comparableType_Types(nil_Types()) == true
  }
  
  axiom {
    tag_Types(empty_interface_Types()) == empty_interface_Types_tag()
  }
  
  axiom {
    tag_Types(nil_Types()) == nil_Types_tag()
  }
}

domain WellFoundedOrder[T]  {
  
  function bounded(arg1: T): Bool 
  
  function decreasing(arg1: T, arg2: T): Bool 
}

// decreases rank$ADT$Unary_9949492a_T(y_V0)
function Add_9949492a_MUnary(x_V0: ADT$Unary_9949492a_T, y_V0: ADT$Unary_9949492a_T): ADT$Unary_9949492a_T
{
  assertArg2_ADT$Unary_9949492a_T(ADT$Unary_9949492a_T_tag(y_V0) ==
  ADT$Unary_9949492a_T_Zero_9949492a_F_tag() ||
  ADT$Unary_9949492a_T_tag(y_V0) ==
  ADT$Unary_9949492a_T_Suc_9949492a_F_tag() &&
  true, (ADT$Unary_9949492a_T_tag(y_V0) ==
  ADT$Unary_9949492a_T_Zero_9949492a_F_tag() ?
    x_V0 :
    (ADT$Unary_9949492a_T_tag(y_V0) ==
    ADT$Unary_9949492a_T_Suc_9949492a_F_tag() &&
    true ?
      (let pre_V1 ==
        (ADT$Unary_9949492a_T_preA(y_V0)) in
        ADT$Unary_9949492a_T_Suc_9949492a_F(Add_9949492a_MUnary(x_V0, pre_V1))) :
      ADT$Unary_9949492a_T_dflt())))
}

// decreases rank$ADT$Unary_9949492a_T(x_V0)
function Below_9949492a_MUnary(x_V0: ADT$Unary_9949492a_T, y_V0: ADT$Unary_9949492a_T): Bool
{
  Less_9949492a_MUnary(x_V0, y_V0) || x_V0 == y_V0
}

// decreases UnaryToNat_9949492a_MUnary(x_V0)
function DivMod_v2_9949492a_MUnary(x_V0: ADT$Unary_9949492a_T, y_V0: ADT$Unary_9949492a_T): Tuple2[ADT$Unary_9949492a_T, ADT$Unary_9949492a_T]
  requires !(y_V0 == ADT$Unary_9949492a_T_Zero_9949492a_F())
{
  (Less_9949492a_MUnary(x_V0, y_V0) ?
    (tuple2(ADT$Unary_9949492a_T_Zero_9949492a_F(), x_V0): Tuple2[ADT$Unary_9949492a_T, ADT$Unary_9949492a_T]) :
    (let __V1 ==
      (SubCorrect_9949492a_MUnary(x_V0, y_V0)) in
      (tuple2(ADT$Unary_9949492a_T_Suc_9949492a_F((get0of2(DivMod_v2_9949492a_MUnary(Sub_9949492a_MUnary(x_V0,
      y_V0), y_V0)): ADT$Unary_9949492a_T)), (get1of2(DivMod_v2_9949492a_MUnary(Sub_9949492a_MUnary(x_V0,
      y_V0), y_V0)): ADT$Unary_9949492a_T)): Tuple2[ADT$Unary_9949492a_T, ADT$Unary_9949492a_T])))
}

// decreases rank$ADT$Unary_9949492a_T(x_V0)
function DivMod_v3_9949492a_MUnary(x_V0: ADT$Unary_9949492a_T, y_V0: ADT$Unary_9949492a_T): Tuple2[ADT$Unary_9949492a_T, ADT$Unary_9949492a_T]
  requires !(y_V0 == ADT$Unary_9949492a_T_Zero_9949492a_F())
{
  (Less_9949492a_MUnary(x_V0, y_V0) ?
    (tuple2(ADT$Unary_9949492a_T_Zero_9949492a_F(), x_V0): Tuple2[ADT$Unary_9949492a_T, ADT$Unary_9949492a_T]) :
    (let __V2 ==
      (SubStructurallySmaller_9949492a_F(x_V0, y_V0)) in
      (let __V1 ==
        (asserting_9949492a_F(rank$ADT$Unary_9949492a_T(Sub_9949492a_MUnary(x_V0,
        y_V0)) <=
        rank$ADT$Unary_9949492a_T(x_V0))) in
        (tuple2(ADT$Unary_9949492a_T_Suc_9949492a_F((get0of2(DivMod_v3_9949492a_MUnary(Sub_9949492a_MUnary(x_V0,
        y_V0), y_V0)): ADT$Unary_9949492a_T)), (get1of2(DivMod_v3_9949492a_MUnary(Sub_9949492a_MUnary(x_V0,
        y_V0), y_V0)): ADT$Unary_9949492a_T)): Tuple2[ADT$Unary_9949492a_T, ADT$Unary_9949492a_T]))))
}

// decreases @ErrorMem_a4af0e5e_SY$db8f20c_a4af0e5e_(thisItf)
function IsDuplicableMem_a4af0e5e_SY$db8f20c_a4af0e5e_(thisItf: Tuple2[Ref, Types]): Bool
  requires !(thisItf == (tuple2(null, nil_Types()): Tuple2[Ref, Types]))
  requires acc(ErrorMem_a4af0e5e_SY$db8f20c_a4af0e5e_(thisItf), wildcard)


// decreases rank$ADT$Unary_9949492a_T(y_V0)
function Less2_9949492a_MUnary(x_V0: ADT$Unary_9949492a_T, y_V0: ADT$Unary_9949492a_T): Bool
{
  !(y_V0 == ADT$Unary_9949492a_T_Zero_9949492a_F()) &&
  (x_V0 == ADT$Unary_9949492a_T_Zero_9949492a_F() ||
  Less_9949492a_MUnary(ADT$Unary_9949492a_T_preA(x_V0), ADT$Unary_9949492a_T_preA(y_V0)))
}

// decreases rank$ADT$Unary_9949492a_T(x_V0)
function LessEqualsLessPrime_9949492a_MUnary(x_V0: ADT$Unary_9949492a_T, y_V0: ADT$Unary_9949492a_T): Tuple0
  ensures Less_9949492a_MUnary(x_V0, y_V0) ==
    LessPrime_9949492a_MUnary(x_V0, y_V0)
{
  tuple0()
}

// decreases rank$ADT$Unary_9949492a_T(y_V0)
function LessPrime_9949492a_MUnary(x_V0: ADT$Unary_9949492a_T, y_V0: ADT$Unary_9949492a_T): Bool
{
  assertArg2_Bool(ADT$Unary_9949492a_T_tag(y_V0) ==
  ADT$Unary_9949492a_T_Zero_9949492a_F_tag() ||
  ADT$Unary_9949492a_T_tag(y_V0) ==
  ADT$Unary_9949492a_T_Suc_9949492a_F_tag() &&
  true, (ADT$Unary_9949492a_T_tag(y_V0) ==
  ADT$Unary_9949492a_T_Zero_9949492a_F_tag() ?
    false :
    (ADT$Unary_9949492a_T_tag(y_V0) ==
    ADT$Unary_9949492a_T_Suc_9949492a_F_tag() &&
    true ?
      (let pre_V1 ==
        (ADT$Unary_9949492a_T_preA(y_V0)) in
        (ADT$Unary_9949492a_T_tag(x_V0) ==
        ADT$Unary_9949492a_T_Suc_9949492a_F_tag() ?
          Less_9949492a_MUnary(ADT$Unary_9949492a_T_preA(x_V0), pre_V1) :
          true)) :
      false)))
}

// decreases rank$ADT$Unary_9949492a_T(x_V0)
function LessTrichotomous_9949492a_MUnary(x_V0: ADT$Unary_9949492a_T, y_V0: ADT$Unary_9949492a_T): Tuple0
  ensures Less_9949492a_MUnary(x_V0, y_V0) && !(x_V0 == y_V0) &&
    !Less_9949492a_MUnary(y_V0, x_V0) ||
    Less_9949492a_MUnary(y_V0, x_V0) && !(x_V0 == y_V0) &&
    !Less_9949492a_MUnary(x_V0, y_V0) ||
    x_V0 == y_V0 && !Less_9949492a_MUnary(x_V0, y_V0) &&
    !Less_9949492a_MUnary(y_V0, x_V0)
{
  assertArg2_Tuple0(ADT$Unary_9949492a_T_tag(y_V0) ==
  ADT$Unary_9949492a_T_Zero_9949492a_F_tag() ||
  ADT$Unary_9949492a_T_tag(y_V0) ==
  ADT$Unary_9949492a_T_Suc_9949492a_F_tag() &&
  true, (ADT$Unary_9949492a_T_tag(y_V0) ==
  ADT$Unary_9949492a_T_Zero_9949492a_F_tag() ?
    tuple0() :
    (ADT$Unary_9949492a_T_tag(y_V0) ==
    ADT$Unary_9949492a_T_Suc_9949492a_F_tag() &&
    true ?
      (let preY_V1 ==
        (ADT$Unary_9949492a_T_preA(y_V0)) in
        assertArg2_Tuple0(ADT$Unary_9949492a_T_tag(x_V0) ==
        ADT$Unary_9949492a_T_Zero_9949492a_F_tag() ||
        ADT$Unary_9949492a_T_tag(x_V0) ==
        ADT$Unary_9949492a_T_Suc_9949492a_F_tag() &&
        true, (ADT$Unary_9949492a_T_tag(x_V0) ==
        ADT$Unary_9949492a_T_Zero_9949492a_F_tag() ?
          tuple0() :
          (ADT$Unary_9949492a_T_tag(x_V0) ==
          ADT$Unary_9949492a_T_Suc_9949492a_F_tag() &&
          true ?
            (let preX_V2 ==
              (ADT$Unary_9949492a_T_preA(x_V0)) in
              LessTrichotomous_9949492a_MUnary(preX_V2, preY_V1)) :
            tuple0())))) :
      tuple0())))
}

// decreases rank$ADT$Unary_9949492a_T(x_V0)
function Less_9949492a_MUnary(x_V0: ADT$Unary_9949492a_T, y_V0: ADT$Unary_9949492a_T): Bool
{
  !(y_V0 == ADT$Unary_9949492a_T_Zero_9949492a_F()) &&
  (ADT$Unary_9949492a_T_tag(x_V0) ==
  ADT$Unary_9949492a_T_Suc_9949492a_F_tag() ?
    Less_9949492a_MUnary(ADT$Unary_9949492a_T_preA(x_V0), ADT$Unary_9949492a_T_preA(y_V0)) :
    true)
}

// decreases rank$ADT$Unary_9949492a_T(x_V0)
function Mul_9949492a_MUnary(x_V0: ADT$Unary_9949492a_T, y_V0: ADT$Unary_9949492a_T): ADT$Unary_9949492a_T
{
  (x_V0 == ADT$Unary_9949492a_T_Zero_9949492a_F() ?
    ADT$Unary_9949492a_T_Zero_9949492a_F() :
    Add_9949492a_MUnary(Mul_9949492a_MUnary(ADT$Unary_9949492a_T_preA(x_V0),
    y_V0), y_V0))
}

// decreases n_V0
function NatToUnary_9949492a_F(n_V0: Int): ADT$Unary_9949492a_T
  requires n_V0 >= 0
{
  (n_V0 == 0 ?
    ADT$Unary_9949492a_T_Zero_9949492a_F() :
    ADT$Unary_9949492a_T_Suc_9949492a_F(NatToUnary_9949492a_F(n_V0 - 1)))
}

// decreases rank$ADT$Unary_9949492a_T(x_V0)
function SubCorrect_9949492a_MUnary(x_V0: ADT$Unary_9949492a_T, y_V0: ADT$Unary_9949492a_T): Tuple0
  requires !Less_9949492a_MUnary(x_V0, y_V0)
  ensures UnaryToNat_9949492a_MUnary(Sub_9949492a_MUnary(x_V0, y_V0)) ==
    UnaryToNat_9949492a_MUnary(x_V0) - UnaryToNat_9949492a_MUnary(y_V0)
{
  (ADT$Unary_9949492a_T_tag(y_V0) ==
  ADT$Unary_9949492a_T_Suc_9949492a_F_tag() ?
    SubCorrect_9949492a_MUnary(ADT$Unary_9949492a_T_preA(x_V0), ADT$Unary_9949492a_T_preA(y_V0)) :
    tuple0())
}

// decreases rank$ADT$Unary_9949492a_T(y_V0)
function SubStructurallySmaller_9949492a_F(x_V0: ADT$Unary_9949492a_T, y_V0: ADT$Unary_9949492a_T): Tuple0
  requires !Less_9949492a_MUnary(x_V0, y_V0) &&
    !(y_V0 == ADT$Unary_9949492a_T_Zero_9949492a_F())
  ensures rank$ADT$Unary_9949492a_T(Sub_9949492a_MUnary(x_V0, y_V0)) <
    rank$ADT$Unary_9949492a_T(x_V0)
{
  (x_V0 ==
  ADT$Unary_9949492a_T_Suc_9949492a_F(ADT$Unary_9949492a_T_Zero_9949492a_F()) ||
  y_V0 ==
  ADT$Unary_9949492a_T_Suc_9949492a_F(ADT$Unary_9949492a_T_Zero_9949492a_F()) ?
    (let __V2 ==
      (asserting_9949492a_F(Sub_9949492a_MUnary(x_V0, y_V0) ==
      Sub_9949492a_MUnary(ADT$Unary_9949492a_T_preA(x_V0), ADT$Unary_9949492a_T_preA(y_V0)))) in
      (let __V1 ==
        (asserting_9949492a_F(Sub_9949492a_MUnary(x_V0, y_V0) ==
        ADT$Unary_9949492a_T_preA(x_V0))) in
        asserting_9949492a_F(rank$ADT$Unary_9949492a_T(Sub_9949492a_MUnary(x_V0,
        y_V0)) <
        rank$ADT$Unary_9949492a_T(x_V0)))) :
    SubStructurallySmaller_9949492a_F(ADT$Unary_9949492a_T_preA(x_V0), ADT$Unary_9949492a_T_preA(y_V0)))
}

// decreases rank$ADT$Unary_9949492a_T(x_V0)
function Sub_9949492a_MUnary(x_V0: ADT$Unary_9949492a_T, y_V0: ADT$Unary_9949492a_T): ADT$Unary_9949492a_T
  requires !Less_9949492a_MUnary(x_V0, y_V0)
{
  assertArg2_ADT$Unary_9949492a_T(ADT$Unary_9949492a_T_tag(y_V0) ==
  ADT$Unary_9949492a_T_Zero_9949492a_F_tag() ||
  ADT$Unary_9949492a_T_tag(y_V0) ==
  ADT$Unary_9949492a_T_Suc_9949492a_F_tag() &&
  true, (ADT$Unary_9949492a_T_tag(y_V0) ==
  ADT$Unary_9949492a_T_Zero_9949492a_F_tag() ?
    x_V0 :
    (ADT$Unary_9949492a_T_tag(y_V0) ==
    ADT$Unary_9949492a_T_Suc_9949492a_F_tag() &&
    true ?
      (let pre_V1 ==
        (ADT$Unary_9949492a_T_preA(y_V0)) in
        Sub_9949492a_MUnary(ADT$Unary_9949492a_T_preA(x_V0), pre_V1)) :
      ADT$Unary_9949492a_T_dflt())))
}

// decreases rank$ADT$Unary_9949492a_T(x_V0)
function UnaryToNat_9949492a_MUnary(x_V0: ADT$Unary_9949492a_T): Int
  ensures result >= 0
{
  assertArg2_Int(ADT$Unary_9949492a_T_tag(x_V0) ==
  ADT$Unary_9949492a_T_Zero_9949492a_F_tag() ||
  ADT$Unary_9949492a_T_tag(x_V0) ==
  ADT$Unary_9949492a_T_Suc_9949492a_F_tag() &&
  true, (ADT$Unary_9949492a_T_tag(x_V0) ==
  ADT$Unary_9949492a_T_Zero_9949492a_F_tag() ?
    0 :
    (ADT$Unary_9949492a_T_tag(x_V0) ==
    ADT$Unary_9949492a_T_Suc_9949492a_F_tag() &&
    true ?
      (let pre_V1 ==
        (ADT$Unary_9949492a_T_preA(x_V0)) in
        1 + UnaryToNat_9949492a_MUnary(pre_V1)) :
      0)))
}

// decreases 
function assertArg2_ADT$Unary_9949492a_T(b: Bool, y: ADT$Unary_9949492a_T): ADT$Unary_9949492a_T
  requires b
{
  y
}

// decreases 
function assertArg2_Bool(b: Bool, y: Bool): Bool
  requires b
{
  y
}

// decreases 
function assertArg2_Int(b: Bool, y: Int): Int
  requires b
{
  y
}

// decreases 
function assertArg2_Tuple0(b: Bool, y: Tuple0): Tuple0
  requires b
{
  y
}

// decreases 
function asserting_9949492a_F(b_V0: Bool): Tuple0
  requires b_V0
{
  tuple0()
}

predicate ErrorMem_a4af0e5e_SY$db8f20c_a4af0e5e_(thisItf: Tuple2[Ref, Types]) 

method $IMPORTS_9949492a_9949492a()
{
  
  // decl 
  {
    
    
    label returnLabel
  }
}

method $IMPORTS_9949492a_a4af0e5e()
{
  
  // decl 
  {
    
    
    label returnLabel
  }
}

// decreases 
method $INIT_9949492a_39745ba9()
{
  
  // decl 
  {
    
    
    label returnLabel
  }
}

// decreases 
method $INIT_9949492a_557a2279()
{
  
  // decl 
  {
    
    
    label returnLabel
  }
}

// decreases 
method $INIT_9949492a_9023c824()
{
  
  // decl 
  {
    
    
    label returnLabel
  }
}

// decreases 
method $INIT_9949492a_c0e7d6fc()
{
  
  // decl 
  {
    
    
    label returnLabel
  }
}

// decreases 
method $INIT_9949492a_c69737db()
{
  
  // decl 
  {
    
    
    label returnLabel
  }
}

// decreases 
method $INIT_9949492a_cae5148d()
{
  
  // decl 
  {
    
    
    label returnLabel
  }
}

// decreases 
method $INIT_9949492a_df95a971()
{
  
  // decl 
  {
    
    
    label returnLabel
  }
}

// decreases rank$ADT$Unary_9949492a_T(y_V0)
method AddAssociative_9949492a_F(x_V0: ADT$Unary_9949492a_T, y_V0: ADT$Unary_9949492a_T,
  z_V0: ADT$Unary_9949492a_T)
  ensures Add_9949492a_MUnary(Add_9949492a_MUnary(x_V0, y_V0), z_V0) ==
    Add_9949492a_MUnary(x_V0, Add_9949492a_MUnary(y_V0, z_V0))
{
  
  // decl x_V0_CN0: Unary_9949492a_T°°, y_V0_CN1: Unary_9949492a_T°°, z_V0_CN2: Unary_9949492a_T°°
  {
    var x_V0_CN0: ADT$Unary_9949492a_T
    var y_V0_CN1: ADT$Unary_9949492a_T
    var z_V0_CN2: ADT$Unary_9949492a_T
    
    
    
    // init x_V0_CN0
    inhale x_V0_CN0 == ADT$Unary_9949492a_T_dflt()
    
    // init y_V0_CN1
    inhale y_V0_CN1 == ADT$Unary_9949492a_T_dflt()
    
    // init z_V0_CN2
    inhale z_V0_CN2 == ADT$Unary_9949492a_T_dflt()
    
    // x_V0_CN0 = x_V0
    x_V0_CN0 := x_V0
    
    // y_V0_CN1 = y_V0
    y_V0_CN1 := y_V0
    
    // z_V0_CN2 = z_V0
    z_V0_CN2 := z_V0
    
    // decl 
    
    // !match y_V0_CN1 {
//   case Zero_9949492a_F {}: 
//   case Suc_9949492a_F {pre_V1}: 
// }
    {
      var fn$$0: Bool
      fn$$0 := false
      if (ADT$Unary_9949492a_T_tag(y_V0_CN1) ==
      ADT$Unary_9949492a_T_Zero_9949492a_F_tag() &&
      !fn$$0) {
        fn$$0 := true
        
        // x_V0_CN0AddZero()
        AddZero_9949492a_MUnary(x_V0_CN0)
        
        // z_V0_CN2AddZero()
        AddZero_9949492a_MUnary(z_V0_CN2)
      }
      {
        var pre_V1: ADT$Unary_9949492a_T
        if (ADT$Unary_9949492a_T_tag(y_V0_CN1) ==
        ADT$Unary_9949492a_T_Suc_9949492a_F_tag() &&
        true &&
        !fn$$0) {
          fn$$0 := true
          pre_V1 := ADT$Unary_9949492a_T_preA(y_V0_CN1)
          
          // x_V0_CN0.Add(y_V0_CN1.fieldpreA: Unary_9949492a_T°)SuccAdd(z_V0_CN2)
          SuccAdd_9949492a_MUnary(Add_9949492a_MUnary(x_V0_CN0, ADT$Unary_9949492a_T_preA(y_V0_CN1)),
            z_V0_CN2)
          
          // AddAssociative_9949492a_F(x_V0_CN0, y_V0_CN1.fieldpreA: Unary_9949492a_T°, z_V0_CN2)
          assert (decreasing(rank$ADT$Unary_9949492a_T(ADT$Unary_9949492a_T_preA(y_V0_CN1)),
            old(rank$ADT$Unary_9949492a_T(y_V0))): Bool) &&
            (bounded(old(rank$ADT$Unary_9949492a_T(y_V0))): Bool) ||
            rank$ADT$Unary_9949492a_T(ADT$Unary_9949492a_T_preA(y_V0_CN1)) ==
            old(rank$ADT$Unary_9949492a_T(y_V0)) &&
            false
          AddAssociative_9949492a_F(x_V0_CN0, ADT$Unary_9949492a_T_preA(y_V0_CN1),
            z_V0_CN2)
          
          // y_V0_CN1.fieldpreA: Unary_9949492a_T°SuccAdd(z_V0_CN2)
          SuccAdd_9949492a_MUnary(ADT$Unary_9949492a_T_preA(y_V0_CN1), z_V0_CN2)
        }
      }
      assert fn$$0
    }
    label returnLabel
  }
}

// decreases rank$ADT$Unary_9949492a_T(z_V0)
method AddCommAssoc_9949492a_F(x_V0: ADT$Unary_9949492a_T, y_V0: ADT$Unary_9949492a_T,
  z_V0: ADT$Unary_9949492a_T)
  ensures Add_9949492a_MUnary(Add_9949492a_MUnary(x_V0, y_V0), z_V0) ==
    Add_9949492a_MUnary(Add_9949492a_MUnary(x_V0, z_V0), y_V0)
{
  
  // decl x_V0_CN0: Unary_9949492a_T°°, y_V0_CN1: Unary_9949492a_T°°, z_V0_CN2: Unary_9949492a_T°°
  {
    var x_V0_CN0: ADT$Unary_9949492a_T
    var y_V0_CN1: ADT$Unary_9949492a_T
    var z_V0_CN2: ADT$Unary_9949492a_T
    
    
    
    // init x_V0_CN0
    inhale x_V0_CN0 == ADT$Unary_9949492a_T_dflt()
    
    // init y_V0_CN1
    inhale y_V0_CN1 == ADT$Unary_9949492a_T_dflt()
    
    // init z_V0_CN2
    inhale z_V0_CN2 == ADT$Unary_9949492a_T_dflt()
    
    // x_V0_CN0 = x_V0
    x_V0_CN0 := x_V0
    
    // y_V0_CN1 = y_V0
    y_V0_CN1 := y_V0
    
    // z_V0_CN2 = z_V0
    z_V0_CN2 := z_V0
    
    // decl 
    
    // !match z_V0_CN2 {
//   case Zero_9949492a_F {}: 
//   case Suc_9949492a_F {pre_V1}: 
// }
    {
      var fn$$0: Bool
      fn$$0 := false
      if (ADT$Unary_9949492a_T_tag(z_V0_CN2) ==
      ADT$Unary_9949492a_T_Zero_9949492a_F_tag() &&
      !fn$$0) {
        fn$$0 := true
      }
      {
        var pre_V1: ADT$Unary_9949492a_T
        if (ADT$Unary_9949492a_T_tag(z_V0_CN2) ==
        ADT$Unary_9949492a_T_Suc_9949492a_F_tag() &&
        true &&
        !fn$$0) {
          fn$$0 := true
          pre_V1 := ADT$Unary_9949492a_T_preA(z_V0_CN2)
          
          // AddCommAssoc_9949492a_F(x_V0_CN0, y_V0_CN1, pre_V1)
          assert (decreasing(rank$ADT$Unary_9949492a_T(pre_V1), old(rank$ADT$Unary_9949492a_T(z_V0))): Bool) &&
            (bounded(old(rank$ADT$Unary_9949492a_T(z_V0))): Bool) ||
            rank$ADT$Unary_9949492a_T(pre_V1) ==
            old(rank$ADT$Unary_9949492a_T(z_V0)) &&
            false
          AddCommAssoc_9949492a_F(x_V0_CN0, y_V0_CN1, pre_V1)
          
          // x_V0_CN0.Add(pre_V1)SuccAdd(y_V0_CN1)
          SuccAdd_9949492a_MUnary(Add_9949492a_MUnary(x_V0_CN0, pre_V1), y_V0_CN1)
        }
      }
      assert fn$$0
    }
    label returnLabel
  }
}

// decreases rank$ADT$Unary_9949492a_T(y_V0)
method AddCommutative_9949492a_MUnary(x_V0: ADT$Unary_9949492a_T, y_V0: ADT$Unary_9949492a_T)
  ensures Add_9949492a_MUnary(x_V0, y_V0) ==
    Add_9949492a_MUnary(y_V0, x_V0)
{
  
  // decl x_V0_CN0: Unary_9949492a_T°°, y_V0_CN1: Unary_9949492a_T°°
  {
    var x_V0_CN0: ADT$Unary_9949492a_T
    var y_V0_CN1: ADT$Unary_9949492a_T
    
    
    
    // init x_V0_CN0
    inhale x_V0_CN0 == ADT$Unary_9949492a_T_dflt()
    
    // init y_V0_CN1
    inhale y_V0_CN1 == ADT$Unary_9949492a_T_dflt()
    
    // x_V0_CN0 = x_V0
    x_V0_CN0 := x_V0
    
    // y_V0_CN1 = y_V0
    y_V0_CN1 := y_V0
    
    // decl 
    
    // !match y_V0_CN1 {
//   case Zero_9949492a_F {}: 
//   case Suc_9949492a_F {pre_V1}: 
// }
    {
      var fn$$0: Bool
      fn$$0 := false
      if (ADT$Unary_9949492a_T_tag(y_V0_CN1) ==
      ADT$Unary_9949492a_T_Zero_9949492a_F_tag() &&
      !fn$$0) {
        fn$$0 := true
        
        // x_V0_CN0AddZero()
        AddZero_9949492a_MUnary(x_V0_CN0)
      }
      {
        var pre_V1: ADT$Unary_9949492a_T
        if (ADT$Unary_9949492a_T_tag(y_V0_CN1) ==
        ADT$Unary_9949492a_T_Suc_9949492a_F_tag() &&
        true &&
        !fn$$0) {
          fn$$0 := true
          pre_V1 := ADT$Unary_9949492a_T_preA(y_V0_CN1)
          
          // x_V0_CN0AddCommutative(pre_V1)
          assert (decreasing(rank$ADT$Unary_9949492a_T(pre_V1), old(rank$ADT$Unary_9949492a_T(y_V0))): Bool) &&
            (bounded(old(rank$ADT$Unary_9949492a_T(y_V0))): Bool) ||
            rank$ADT$Unary_9949492a_T(pre_V1) ==
            old(rank$ADT$Unary_9949492a_T(y_V0)) &&
            false
          AddCommutative_9949492a_MUnary(x_V0_CN0, pre_V1)
          
          // pre_V1SuccAdd(x_V0_CN0)
          SuccAdd_9949492a_MUnary(pre_V1, x_V0_CN0)
        }
      }
      assert fn$$0
    }
    label returnLabel
  }
}

// decreases rank$ADT$Unary_9949492a_T(y_V0)
method AddCorrect_9949492a_MUnary(x_V0: ADT$Unary_9949492a_T, y_V0: ADT$Unary_9949492a_T)
  ensures UnaryToNat_9949492a_MUnary(Add_9949492a_MUnary(x_V0, y_V0)) ==
    UnaryToNat_9949492a_MUnary(x_V0) + UnaryToNat_9949492a_MUnary(y_V0)
{
  
  // decl x_V0_CN0: Unary_9949492a_T°°, y_V0_CN1: Unary_9949492a_T°°
  {
    var x_V0_CN0: ADT$Unary_9949492a_T
    var y_V0_CN1: ADT$Unary_9949492a_T
    
    
    
    // init x_V0_CN0
    inhale x_V0_CN0 == ADT$Unary_9949492a_T_dflt()
    
    // init y_V0_CN1
    inhale y_V0_CN1 == ADT$Unary_9949492a_T_dflt()
    
    // x_V0_CN0 = x_V0
    x_V0_CN0 := x_V0
    
    // y_V0_CN1 = y_V0
    y_V0_CN1 := y_V0
    
    // decl 
    
    // if(y_V0_CN1.Suc_9949492a_F) {...} else {...}
    if (ADT$Unary_9949492a_T_tag(y_V0_CN1) ==
    ADT$Unary_9949492a_T_Suc_9949492a_F_tag()) {
      
      // decl 
      
      // x_V0_CN0AddCorrect(y_V0_CN1.fieldpreA: Unary_9949492a_T°)
      assert (decreasing(rank$ADT$Unary_9949492a_T(ADT$Unary_9949492a_T_preA(y_V0_CN1)),
        old(rank$ADT$Unary_9949492a_T(y_V0))): Bool) &&
        (bounded(old(rank$ADT$Unary_9949492a_T(y_V0))): Bool) ||
        rank$ADT$Unary_9949492a_T(ADT$Unary_9949492a_T_preA(y_V0_CN1)) ==
        old(rank$ADT$Unary_9949492a_T(y_V0)) &&
        false
      AddCorrect_9949492a_MUnary(x_V0_CN0, ADT$Unary_9949492a_T_preA(y_V0_CN1))
    }
    label returnLabel
  }
}

// decreases rank$ADT$Unary_9949492a_T(y_V0)
method AddSub_9949492a_MUnary(x_V0: ADT$Unary_9949492a_T, y_V0: ADT$Unary_9949492a_T)
  requires !Less_9949492a_MUnary(x_V0, y_V0)
  ensures Add_9949492a_MUnary(Sub_9949492a_MUnary(x_V0, y_V0), y_V0) ==
    x_V0
{
  
  // decl x_V0_CN0: Unary_9949492a_T°°, y_V0_CN1: Unary_9949492a_T°°
  {
    var x_V0_CN0: ADT$Unary_9949492a_T
    var y_V0_CN1: ADT$Unary_9949492a_T
    
    
    
    // init x_V0_CN0
    inhale x_V0_CN0 == ADT$Unary_9949492a_T_dflt()
    
    // init y_V0_CN1
    inhale y_V0_CN1 == ADT$Unary_9949492a_T_dflt()
    
    // x_V0_CN0 = x_V0
    x_V0_CN0 := x_V0
    
    // y_V0_CN1 = y_V0
    y_V0_CN1 := y_V0
    
    // decl 
    
    // !match y_V0_CN1 {
//   case Zero_9949492a_F {}: 
//   case Suc_9949492a_F {pre_V1}: 
// }
    {
      var fn$$0: Bool
      fn$$0 := false
      if (ADT$Unary_9949492a_T_tag(y_V0_CN1) ==
      ADT$Unary_9949492a_T_Zero_9949492a_F_tag() &&
      !fn$$0) {
        fn$$0 := true
      }
      {
        var pre_V1: ADT$Unary_9949492a_T
        if (ADT$Unary_9949492a_T_tag(y_V0_CN1) ==
        ADT$Unary_9949492a_T_Suc_9949492a_F_tag() &&
        true &&
        !fn$$0) {
          fn$$0 := true
          pre_V1 := ADT$Unary_9949492a_T_preA(y_V0_CN1)
          
          // x_V0_CN0.fieldpreA: Unary_9949492a_T°AddSub(pre_V1)
          assert (decreasing(rank$ADT$Unary_9949492a_T(pre_V1), old(rank$ADT$Unary_9949492a_T(y_V0))): Bool) &&
            (bounded(old(rank$ADT$Unary_9949492a_T(y_V0))): Bool) ||
            rank$ADT$Unary_9949492a_T(pre_V1) ==
            old(rank$ADT$Unary_9949492a_T(y_V0)) &&
            false
          AddSub_9949492a_MUnary(ADT$Unary_9949492a_T_preA(x_V0_CN0), pre_V1)
        }
      }
      assert fn$$0
    }
    label returnLabel
  }
}

// decreases rank$ADT$Unary_9949492a_T(x_V0)
method AddZero_9949492a_MUnary(x_V0: ADT$Unary_9949492a_T)
  ensures Add_9949492a_MUnary(ADT$Unary_9949492a_T_Zero_9949492a_F(), x_V0) ==
    x_V0
{
  
  // decl x_V0_CN0: Unary_9949492a_T°°
  {
    var x_V0_CN0: ADT$Unary_9949492a_T
    
    
    
    // init x_V0_CN0
    inhale x_V0_CN0 == ADT$Unary_9949492a_T_dflt()
    
    // x_V0_CN0 = x_V0
    x_V0_CN0 := x_V0
    
    // decl 
    
    // if(x_V0_CN0.Suc_9949492a_F) {...} else {...}
    if (ADT$Unary_9949492a_T_tag(x_V0_CN0) ==
    ADT$Unary_9949492a_T_Suc_9949492a_F_tag()) {
      
      // decl 
      
      // x_V0_CN0.fieldpreA: Unary_9949492a_T°AddZero()
      assert (decreasing(rank$ADT$Unary_9949492a_T(ADT$Unary_9949492a_T_preA(x_V0_CN0)),
        old(rank$ADT$Unary_9949492a_T(x_V0))): Bool) &&
        (bounded(old(rank$ADT$Unary_9949492a_T(x_V0))): Bool) ||
        rank$ADT$Unary_9949492a_T(ADT$Unary_9949492a_T_preA(x_V0_CN0)) ==
        old(rank$ADT$Unary_9949492a_T(x_V0)) &&
        false
      AddZero_9949492a_MUnary(ADT$Unary_9949492a_T_preA(x_V0_CN0))
    }
    label returnLabel
  }
}

// decreases rank$ADT$Unary_9949492a_T(y_V0)
method Add_9949492a_MUnary_termination_proof(x_V0: ADT$Unary_9949492a_T, y_V0: ADT$Unary_9949492a_T)
{
  if (ADT$Unary_9949492a_T_tag(y_V0) ==
  ADT$Unary_9949492a_T_Zero_9949492a_F_tag()) {
  } elseif (ADT$Unary_9949492a_T_tag(y_V0) ==
  ADT$Unary_9949492a_T_Suc_9949492a_F_tag()) {
    {
      var pre_V1: ADT$Unary_9949492a_T
      inhale pre_V1 == ADT$Unary_9949492a_T_preA(y_V0)
      assert (decreasing(rank$ADT$Unary_9949492a_T(pre_V1), old(rank$ADT$Unary_9949492a_T(y_V0))): Bool) &&
        (bounded(old(rank$ADT$Unary_9949492a_T(y_V0))): Bool)
    }
  }
}

// decreases rank$ADT$Unary_9949492a_T(x_V0)
method BelowAntisymmetric_9949492a_F(x_V0: ADT$Unary_9949492a_T, y_V0: ADT$Unary_9949492a_T)
  ensures Below_9949492a_MUnary(x_V0, y_V0) &&
    Below_9949492a_MUnary(y_V0, x_V0) ==>
    x_V0 == y_V0
{
  
  // decl x_V0_CN0: Unary_9949492a_T°°, y_V0_CN1: Unary_9949492a_T°°
  {
    var x_V0_CN0: ADT$Unary_9949492a_T
    var y_V0_CN1: ADT$Unary_9949492a_T
    
    
    
    // init x_V0_CN0
    inhale x_V0_CN0 == ADT$Unary_9949492a_T_dflt()
    
    // init y_V0_CN1
    inhale y_V0_CN1 == ADT$Unary_9949492a_T_dflt()
    
    // x_V0_CN0 = x_V0
    x_V0_CN0 := x_V0
    
    // y_V0_CN1 = y_V0
    y_V0_CN1 := y_V0
    
    // decl 
    
    // if(x_V0_CN0.Below(y_V0_CN1) && y_V0_CN1.Below(x_V0_CN0)) {...} else {...}
    if (Below_9949492a_MUnary(x_V0_CN0, y_V0_CN1) &&
    Below_9949492a_MUnary(y_V0_CN1, x_V0_CN0)) {
      
      // decl 
      
      // if(x_V0_CN0.Suc_9949492a_F && y_V0_CN1.Suc_9949492a_F) {...} else {...}
      if (ADT$Unary_9949492a_T_tag(x_V0_CN0) ==
      ADT$Unary_9949492a_T_Suc_9949492a_F_tag() &&
      ADT$Unary_9949492a_T_tag(y_V0_CN1) ==
      ADT$Unary_9949492a_T_Suc_9949492a_F_tag()) {
        
        // decl 
        
        // BelowAntisymmetric_9949492a_F(x_V0_CN0.fieldpreA: Unary_9949492a_T°, y_V0_CN1.fieldpreA: Unary_9949492a_T°)
        assert (decreasing(rank$ADT$Unary_9949492a_T(ADT$Unary_9949492a_T_preA(x_V0_CN0)),
          old(rank$ADT$Unary_9949492a_T(x_V0))): Bool) &&
          (bounded(old(rank$ADT$Unary_9949492a_T(x_V0))): Bool) ||
          rank$ADT$Unary_9949492a_T(ADT$Unary_9949492a_T_preA(x_V0_CN0)) ==
          old(rank$ADT$Unary_9949492a_T(x_V0)) &&
          false
        BelowAntisymmetric_9949492a_F(ADT$Unary_9949492a_T_preA(x_V0_CN0), ADT$Unary_9949492a_T_preA(y_V0_CN1))
      }
    }
    label returnLabel
  }
}

// decreases rank$ADT$Unary_9949492a_T(x_V0)
method BelowTotal_9949492a_F(x_V0: ADT$Unary_9949492a_T, y_V0: ADT$Unary_9949492a_T)
  ensures Below_9949492a_MUnary(x_V0, y_V0) ||
    Below_9949492a_MUnary(y_V0, x_V0)
{
  
  // decl x_V0_CN0: Unary_9949492a_T°°, y_V0_CN1: Unary_9949492a_T°°
  {
    var x_V0_CN0: ADT$Unary_9949492a_T
    var y_V0_CN1: ADT$Unary_9949492a_T
    
    
    
    // init x_V0_CN0
    inhale x_V0_CN0 == ADT$Unary_9949492a_T_dflt()
    
    // init y_V0_CN1
    inhale y_V0_CN1 == ADT$Unary_9949492a_T_dflt()
    
    // x_V0_CN0 = x_V0
    x_V0_CN0 := x_V0
    
    // y_V0_CN1 = y_V0
    y_V0_CN1 := y_V0
    
    // decl 
    
    // if(x_V0_CN0.Suc_9949492a_F && y_V0_CN1.Suc_9949492a_F) {...} else {...}
    if (ADT$Unary_9949492a_T_tag(x_V0_CN0) ==
    ADT$Unary_9949492a_T_Suc_9949492a_F_tag() &&
    ADT$Unary_9949492a_T_tag(y_V0_CN1) ==
    ADT$Unary_9949492a_T_Suc_9949492a_F_tag()) {
      
      // decl 
      
      // BelowTotal_9949492a_F(x_V0_CN0.fieldpreA: Unary_9949492a_T°, y_V0_CN1.fieldpreA: Unary_9949492a_T°)
      assert (decreasing(rank$ADT$Unary_9949492a_T(ADT$Unary_9949492a_T_preA(x_V0_CN0)),
        old(rank$ADT$Unary_9949492a_T(x_V0))): Bool) &&
        (bounded(old(rank$ADT$Unary_9949492a_T(x_V0))): Bool) ||
        rank$ADT$Unary_9949492a_T(ADT$Unary_9949492a_T_preA(x_V0_CN0)) ==
        old(rank$ADT$Unary_9949492a_T(x_V0)) &&
        false
      BelowTotal_9949492a_F(ADT$Unary_9949492a_T_preA(x_V0_CN0), ADT$Unary_9949492a_T_preA(y_V0_CN1))
    }
    label returnLabel
  }
}

// decreases rank$ADT$Unary_9949492a_T(x_V0)
method BelowTransitive_9949492a_F(x_V0: ADT$Unary_9949492a_T, y_V0: ADT$Unary_9949492a_T,
  z_V0: ADT$Unary_9949492a_T)
  ensures Below_9949492a_MUnary(x_V0, y_V0) &&
    Below_9949492a_MUnary(y_V0, z_V0) ==>
    Below_9949492a_MUnary(x_V0, z_V0)
{
  
  // decl x_V0_CN0: Unary_9949492a_T°°, y_V0_CN1: Unary_9949492a_T°°, z_V0_CN2: Unary_9949492a_T°°
  {
    var x_V0_CN0: ADT$Unary_9949492a_T
    var y_V0_CN1: ADT$Unary_9949492a_T
    var z_V0_CN2: ADT$Unary_9949492a_T
    
    
    
    // init x_V0_CN0
    inhale x_V0_CN0 == ADT$Unary_9949492a_T_dflt()
    
    // init y_V0_CN1
    inhale y_V0_CN1 == ADT$Unary_9949492a_T_dflt()
    
    // init z_V0_CN2
    inhale z_V0_CN2 == ADT$Unary_9949492a_T_dflt()
    
    // x_V0_CN0 = x_V0
    x_V0_CN0 := x_V0
    
    // y_V0_CN1 = y_V0
    y_V0_CN1 := y_V0
    
    // z_V0_CN2 = z_V0
    z_V0_CN2 := z_V0
    
    // decl 
    
    // if(x_V0_CN0.Below(y_V0_CN1) && y_V0_CN1.Below(z_V0_CN2)) {...} else {...}
    if (Below_9949492a_MUnary(x_V0_CN0, y_V0_CN1) &&
    Below_9949492a_MUnary(y_V0_CN1, z_V0_CN2)) {
      
      // decl 
      
      // if(x_V0_CN0 != Zero_9949492a_F{}) {...} else {...}
      if (!(x_V0_CN0 == ADT$Unary_9949492a_T_Zero_9949492a_F())) {
        
        // decl 
        
        // BelowTransitive_9949492a_F(x_V0_CN0.fieldpreA: Unary_9949492a_T°, y_V0_CN1.fieldpreA: Unary_9949492a_T°, z_V0_CN2.fieldpreA: Unary_9949492a_T°)
        assert (decreasing(rank$ADT$Unary_9949492a_T(ADT$Unary_9949492a_T_preA(x_V0_CN0)),
          old(rank$ADT$Unary_9949492a_T(x_V0))): Bool) &&
          (bounded(old(rank$ADT$Unary_9949492a_T(x_V0))): Bool) ||
          rank$ADT$Unary_9949492a_T(ADT$Unary_9949492a_T_preA(x_V0_CN0)) ==
          old(rank$ADT$Unary_9949492a_T(x_V0)) &&
          false
        BelowTransitive_9949492a_F(ADT$Unary_9949492a_T_preA(x_V0_CN0), ADT$Unary_9949492a_T_preA(y_V0_CN1),
          ADT$Unary_9949492a_T_preA(z_V0_CN2))
      }
    }
    label returnLabel
  }
}

// decreases rank$ADT$Unary_9949492a_T(x_V0)
method DivModCorrect_9949492a_MUnary(x_V0: ADT$Unary_9949492a_T, y_V0: ADT$Unary_9949492a_T)
  requires !(y_V0 == ADT$Unary_9949492a_T_Zero_9949492a_F())
  ensures Add_9949492a_MUnary(Mul_9949492a_MUnary((get0of2(DivMod_v2_9949492a_MUnary(x_V0,
    y_V0)): ADT$Unary_9949492a_T), y_V0), (get1of2(DivMod_v2_9949492a_MUnary(x_V0,
    y_V0)): ADT$Unary_9949492a_T)) ==
    x_V0 &&
    Less_9949492a_MUnary((get1of2(DivMod_v2_9949492a_MUnary(x_V0, y_V0)): ADT$Unary_9949492a_T),
    y_V0)
{
  
  // decl x_V0_CN0: Unary_9949492a_T°°, y_V0_CN1: Unary_9949492a_T°°
  {
    var x_V0_CN0: ADT$Unary_9949492a_T
    var y_V0_CN1: ADT$Unary_9949492a_T
    
    
    
    // init x_V0_CN0
    inhale x_V0_CN0 == ADT$Unary_9949492a_T_dflt()
    
    // init y_V0_CN1
    inhale y_V0_CN1 == ADT$Unary_9949492a_T_dflt()
    
    // x_V0_CN0 = x_V0
    x_V0_CN0 := x_V0
    
    // y_V0_CN1 = y_V0
    y_V0_CN1 := y_V0
    
    // decl m_V1: Unary_9949492a_T°°
    {
      var m_V1: ADT$Unary_9949492a_T
      
      // init m_V1
      inhale m_V1 == ADT$Unary_9949492a_T_dflt()
      
      // m_V1 = x_V0_CN0.DivMod_v2(y_V0_CN1).bA
      m_V1 := (get1of2(DivMod_v2_9949492a_MUnary(x_V0_CN0, y_V0_CN1)): ADT$Unary_9949492a_T)
      
      // if(x_V0_CN0.Less(y_V0_CN1)) {...} else {...}
      if (Less_9949492a_MUnary(x_V0_CN0, y_V0_CN1)) {
        
        // decl 
        
        // x_V0_CN0AddZero()
        AddZero_9949492a_MUnary(x_V0_CN0)
      } else {
        
        // decl dPrime_V2: Unary_9949492a_T°°, mPrime_V2: Unary_9949492a_T°°, N14: Unit_9949492a_T°°
        {
          var dPrime_V2: ADT$Unary_9949492a_T
          var mPrime_V2: ADT$Unary_9949492a_T
          var N14: Tuple0
          
          // init dPrime_V2
          inhale dPrime_V2 == ADT$Unary_9949492a_T_dflt()
          
          // dPrime_V2 = x_V0_CN0.Sub(y_V0_CN1).DivMod_v2(y_V0_CN1).aA
          dPrime_V2 := (get0of2(DivMod_v2_9949492a_MUnary(Sub_9949492a_MUnary(x_V0_CN0,
            y_V0_CN1), y_V0_CN1)): ADT$Unary_9949492a_T)
          
          // init mPrime_V2
          inhale mPrime_V2 == ADT$Unary_9949492a_T_dflt()
          
          // mPrime_V2 = x_V0_CN0.Sub(y_V0_CN1).DivMod_v2(y_V0_CN1).bA
          mPrime_V2 := (get1of2(DivMod_v2_9949492a_MUnary(Sub_9949492a_MUnary(x_V0_CN0,
            y_V0_CN1), y_V0_CN1)): ADT$Unary_9949492a_T)
          
          // N14 = SubStructurallySmaller_9949492a_F(x_V0_CN0, y_V0_CN1)
          N14 := SubStructurallySmaller_9949492a_F(x_V0_CN0, y_V0_CN1)
          
          // x_V0_CN0.Sub(y_V0_CN1)DivModCorrect(y_V0_CN1)
          assert (decreasing(rank$ADT$Unary_9949492a_T(Sub_9949492a_MUnary(x_V0_CN0,
            y_V0_CN1)), old(rank$ADT$Unary_9949492a_T(x_V0))): Bool) &&
            (bounded(old(rank$ADT$Unary_9949492a_T(x_V0))): Bool) ||
            rank$ADT$Unary_9949492a_T(Sub_9949492a_MUnary(x_V0_CN0, y_V0_CN1)) ==
            old(rank$ADT$Unary_9949492a_T(x_V0)) &&
            false
          DivModCorrect_9949492a_MUnary(Sub_9949492a_MUnary(x_V0_CN0, y_V0_CN1),
            y_V0_CN1)
          
          // x_V0_CN0AddSub(y_V0_CN1)
          AddSub_9949492a_MUnary(x_V0_CN0, y_V0_CN1)
          
          // AddCommAssoc_9949492a_F(dPrime_V2.Mul(y_V0_CN1), m_V1, y_V0_CN1)
          AddCommAssoc_9949492a_F(Mul_9949492a_MUnary(dPrime_V2, y_V0_CN1),
            m_V1, y_V0_CN1)
        }
      }
    }
    label returnLabel
  }
}

// decreases UnaryToNat_9949492a_MUnary(x_V0)
method DivMod_v2_9949492a_MUnary_termination_proof(x_V0: ADT$Unary_9949492a_T,
  y_V0: ADT$Unary_9949492a_T)
  requires !(y_V0 == ADT$Unary_9949492a_T_Zero_9949492a_F())
{
  if (Less_9949492a_MUnary(x_V0, y_V0)) {
  } else {
    var __V1: Tuple0
    inhale __V1 == SubCorrect_9949492a_MUnary(x_V0, y_V0)
    assert (decreasing(UnaryToNat_9949492a_MUnary(Sub_9949492a_MUnary(x_V0,
      y_V0)), old(UnaryToNat_9949492a_MUnary(x_V0))): Bool) &&
      (bounded(old(UnaryToNat_9949492a_MUnary(x_V0))): Bool)
    assert (decreasing(UnaryToNat_9949492a_MUnary(Sub_9949492a_MUnary(x_V0,
      y_V0)), old(UnaryToNat_9949492a_MUnary(x_V0))): Bool) &&
      (bounded(old(UnaryToNat_9949492a_MUnary(x_V0))): Bool)
  }
}

// decreases rank$ADT$Unary_9949492a_T(x_V0)
method DivMod_v3_9949492a_MUnary_termination_proof(x_V0: ADT$Unary_9949492a_T,
  y_V0: ADT$Unary_9949492a_T)
  requires !(y_V0 == ADT$Unary_9949492a_T_Zero_9949492a_F())
{
  if (Less_9949492a_MUnary(x_V0, y_V0)) {
  } else {
    var __V2: Tuple0
    inhale __V2 == SubStructurallySmaller_9949492a_F(x_V0, y_V0)
    {
      var __V1: Tuple0
      inhale __V1 ==
        asserting_9949492a_F(rank$ADT$Unary_9949492a_T(Sub_9949492a_MUnary(x_V0,
        y_V0)) <=
        rank$ADT$Unary_9949492a_T(x_V0))
      assert (decreasing(rank$ADT$Unary_9949492a_T(Sub_9949492a_MUnary(x_V0,
        y_V0)), old(rank$ADT$Unary_9949492a_T(x_V0))): Bool) &&
        (bounded(old(rank$ADT$Unary_9949492a_T(x_V0))): Bool)
      assert (decreasing(rank$ADT$Unary_9949492a_T(Sub_9949492a_MUnary(x_V0,
        y_V0)), old(rank$ADT$Unary_9949492a_T(x_V0))): Bool) &&
        (bounded(old(rank$ADT$Unary_9949492a_T(x_V0))): Bool)
    }
  }
}

// decreases @ErrorMem_a4af0e5e_SY$db8f20c_a4af0e5e_(thisItf)
method Duplicate_a4af0e5e_SY$db8f20c_a4af0e5e_(thisItf: Tuple2[Ref, Types])
  requires !(thisItf == (tuple2(null, nil_Types()): Tuple2[Ref, Types]))
  requires acc(ErrorMem_a4af0e5e_SY$db8f20c_a4af0e5e_(thisItf), write)
  ensures acc(ErrorMem_a4af0e5e_SY$db8f20c_a4af0e5e_(thisItf), write)
  ensures IsDuplicableMem_a4af0e5e_SY$db8f20c_a4af0e5e_(thisItf) ==
    old(IsDuplicableMem_a4af0e5e_SY$db8f20c_a4af0e5e_(thisItf))
  ensures IsDuplicableMem_a4af0e5e_SY$db8f20c_a4af0e5e_(thisItf) ==>
    acc(ErrorMem_a4af0e5e_SY$db8f20c_a4af0e5e_(thisItf), write)


// decreases @ErrorMem_a4af0e5e_SY$db8f20c_a4af0e5e_(thisItf)
method Error_a4af0e5e_SY$db8f20c_a4af0e5e_(thisItf: Tuple2[Ref, Types])
  returns (P0_PO0: Int)
  requires !(thisItf == (tuple2(null, nil_Types()): Tuple2[Ref, Types]))
  requires acc(ErrorMem_a4af0e5e_SY$db8f20c_a4af0e5e_(thisItf), write)
  ensures acc(ErrorMem_a4af0e5e_SY$db8f20c_a4af0e5e_(thisItf), write)
  ensures IsDuplicableMem_a4af0e5e_SY$db8f20c_a4af0e5e_(thisItf) ==
    old(IsDuplicableMem_a4af0e5e_SY$db8f20c_a4af0e5e_(thisItf))


// decreases @ErrorMem_a4af0e5e_SY$db8f20c_a4af0e5e_(thisItf)
method IsDuplicableMem_a4af0e5e_SY$db8f20c_a4af0e5e__pres_termination_proof(thisItf: Tuple2[Ref, Types])
{
  var $condInEx: Bool
  if (!(thisItf == (tuple2(null, nil_Types()): Tuple2[Ref, Types]))) {
    inhale acc(ErrorMem_a4af0e5e_SY$db8f20c_a4af0e5e_(thisItf), wildcard)
  }
}

// decreases rank$ADT$Unary_9949492a_T(x_V0)
method LessCorrect_9949492a_MUnary(x_V0: ADT$Unary_9949492a_T, y_V0: ADT$Unary_9949492a_T)
  ensures Less_9949492a_MUnary(x_V0, y_V0) ==
    UnaryToNat_9949492a_MUnary(x_V0) < UnaryToNat_9949492a_MUnary(y_V0)
{
  
  // decl x_V0_CN0: Unary_9949492a_T°°, y_V0_CN1: Unary_9949492a_T°°
  {
    var x_V0_CN0: ADT$Unary_9949492a_T
    var y_V0_CN1: ADT$Unary_9949492a_T
    
    
    
    // init x_V0_CN0
    inhale x_V0_CN0 == ADT$Unary_9949492a_T_dflt()
    
    // init y_V0_CN1
    inhale y_V0_CN1 == ADT$Unary_9949492a_T_dflt()
    
    // x_V0_CN0 = x_V0
    x_V0_CN0 := x_V0
    
    // y_V0_CN1 = y_V0
    y_V0_CN1 := y_V0
    
    // decl 
    
    // if(x_V0_CN0.Suc_9949492a_F && y_V0_CN1.Suc_9949492a_F) {...} else {...}
    if (ADT$Unary_9949492a_T_tag(x_V0_CN0) ==
    ADT$Unary_9949492a_T_Suc_9949492a_F_tag() &&
    ADT$Unary_9949492a_T_tag(y_V0_CN1) ==
    ADT$Unary_9949492a_T_Suc_9949492a_F_tag()) {
      
      // decl 
      
      // x_V0_CN0.fieldpreA: Unary_9949492a_T°LessCorrect(y_V0_CN1.fieldpreA: Unary_9949492a_T°)
      assert (decreasing(rank$ADT$Unary_9949492a_T(ADT$Unary_9949492a_T_preA(x_V0_CN0)),
        old(rank$ADT$Unary_9949492a_T(x_V0))): Bool) &&
        (bounded(old(rank$ADT$Unary_9949492a_T(x_V0))): Bool) ||
        rank$ADT$Unary_9949492a_T(ADT$Unary_9949492a_T_preA(x_V0_CN0)) ==
        old(rank$ADT$Unary_9949492a_T(x_V0)) &&
        false
      LessCorrect_9949492a_MUnary(ADT$Unary_9949492a_T_preA(x_V0_CN0), ADT$Unary_9949492a_T_preA(y_V0_CN1))
    }
    label returnLabel
  }
}

// decreases rank$ADT$Unary_9949492a_T(y_V0)
method LessPrime_9949492a_MUnary_termination_proof(x_V0: ADT$Unary_9949492a_T,
  y_V0: ADT$Unary_9949492a_T)
{
  if (ADT$Unary_9949492a_T_tag(y_V0) ==
  ADT$Unary_9949492a_T_Zero_9949492a_F_tag()) {
  } elseif (ADT$Unary_9949492a_T_tag(y_V0) ==
  ADT$Unary_9949492a_T_Suc_9949492a_F_tag()) {
    {
      var pre_V1: ADT$Unary_9949492a_T
      inhale pre_V1 == ADT$Unary_9949492a_T_preA(y_V0)
    }
  }
}

// decreases rank$ADT$Unary_9949492a_T(x_V0)
method LessTransitive_9949492a_F(x_V0: ADT$Unary_9949492a_T, y_V0: ADT$Unary_9949492a_T,
  z_V0: ADT$Unary_9949492a_T)
  ensures Less_9949492a_MUnary(x_V0, y_V0) &&
    Less_9949492a_MUnary(y_V0, z_V0) ==>
    Less_9949492a_MUnary(x_V0, z_V0)
{
  
  // decl x_V0_CN0: Unary_9949492a_T°°, y_V0_CN1: Unary_9949492a_T°°, z_V0_CN2: Unary_9949492a_T°°
  {
    var x_V0_CN0: ADT$Unary_9949492a_T
    var y_V0_CN1: ADT$Unary_9949492a_T
    var z_V0_CN2: ADT$Unary_9949492a_T
    
    
    
    // init x_V0_CN0
    inhale x_V0_CN0 == ADT$Unary_9949492a_T_dflt()
    
    // init y_V0_CN1
    inhale y_V0_CN1 == ADT$Unary_9949492a_T_dflt()
    
    // init z_V0_CN2
    inhale z_V0_CN2 == ADT$Unary_9949492a_T_dflt()
    
    // x_V0_CN0 = x_V0
    x_V0_CN0 := x_V0
    
    // y_V0_CN1 = y_V0
    y_V0_CN1 := y_V0
    
    // z_V0_CN2 = z_V0
    z_V0_CN2 := z_V0
    
    // decl 
    
    // if(x_V0_CN0.Less(y_V0_CN1) && y_V0_CN1.Less(z_V0_CN2) && x_V0_CN0.Suc_9949492a_F) {...} else {...}
    if (Less_9949492a_MUnary(x_V0_CN0, y_V0_CN1) &&
    Less_9949492a_MUnary(y_V0_CN1, z_V0_CN2) &&
    ADT$Unary_9949492a_T_tag(x_V0_CN0) ==
    ADT$Unary_9949492a_T_Suc_9949492a_F_tag()) {
      
      // decl 
      
      // LessTransitive_9949492a_F(x_V0_CN0.fieldpreA: Unary_9949492a_T°, y_V0_CN1.fieldpreA: Unary_9949492a_T°, z_V0_CN2.fieldpreA: Unary_9949492a_T°)
      assert (decreasing(rank$ADT$Unary_9949492a_T(ADT$Unary_9949492a_T_preA(x_V0_CN0)),
        old(rank$ADT$Unary_9949492a_T(x_V0))): Bool) &&
        (bounded(old(rank$ADT$Unary_9949492a_T(x_V0))): Bool) ||
        rank$ADT$Unary_9949492a_T(ADT$Unary_9949492a_T_preA(x_V0_CN0)) ==
        old(rank$ADT$Unary_9949492a_T(x_V0)) &&
        false
      LessTransitive_9949492a_F(ADT$Unary_9949492a_T_preA(x_V0_CN0), ADT$Unary_9949492a_T_preA(y_V0_CN1),
        ADT$Unary_9949492a_T_preA(z_V0_CN2))
    }
    label returnLabel
  }
}

// decreases rank$ADT$Unary_9949492a_T(x_V0)
method LessTrichotomous_9949492a_MUnary_termination_proof(x_V0: ADT$Unary_9949492a_T,
  y_V0: ADT$Unary_9949492a_T)
{
  if (ADT$Unary_9949492a_T_tag(y_V0) ==
  ADT$Unary_9949492a_T_Zero_9949492a_F_tag()) {
  } elseif (ADT$Unary_9949492a_T_tag(y_V0) ==
  ADT$Unary_9949492a_T_Suc_9949492a_F_tag()) {
    {
      var preY_V1: ADT$Unary_9949492a_T
      inhale preY_V1 == ADT$Unary_9949492a_T_preA(y_V0)
      if (ADT$Unary_9949492a_T_tag(x_V0) ==
      ADT$Unary_9949492a_T_Zero_9949492a_F_tag()) {
      } elseif (ADT$Unary_9949492a_T_tag(x_V0) ==
      ADT$Unary_9949492a_T_Suc_9949492a_F_tag()) {
        {
          var preX_V2: ADT$Unary_9949492a_T
          inhale preX_V2 == ADT$Unary_9949492a_T_preA(x_V0)
          assert (decreasing(rank$ADT$Unary_9949492a_T(preX_V2), old(rank$ADT$Unary_9949492a_T(x_V0))): Bool) &&
            (bounded(old(rank$ADT$Unary_9949492a_T(x_V0))): Bool)
        }
      }
    }
  }
}

// decreases rank$ADT$Unary_9949492a_T(x_V0)
method Less_9949492a_MUnary_termination_proof(x_V0: ADT$Unary_9949492a_T, y_V0: ADT$Unary_9949492a_T)
{
  if (!(y_V0 == ADT$Unary_9949492a_T_Zero_9949492a_F())) {
    if (ADT$Unary_9949492a_T_tag(x_V0) ==
    ADT$Unary_9949492a_T_Suc_9949492a_F_tag()) {
      assert (decreasing(rank$ADT$Unary_9949492a_T(ADT$Unary_9949492a_T_preA(x_V0)),
        old(rank$ADT$Unary_9949492a_T(x_V0))): Bool) &&
        (bounded(old(rank$ADT$Unary_9949492a_T(x_V0))): Bool)
    }
  }
}

// decreases rank$ADT$Unary_9949492a_T(x_V0)
method MulCorrect_9949492a_MUnary(x_V0: ADT$Unary_9949492a_T, y_V0: ADT$Unary_9949492a_T)
  ensures UnaryToNat_9949492a_MUnary(Mul_9949492a_MUnary(x_V0, y_V0)) ==
    UnaryToNat_9949492a_MUnary(x_V0) * UnaryToNat_9949492a_MUnary(y_V0)
{
  
  // decl x_V0_CN0: Unary_9949492a_T°°, y_V0_CN1: Unary_9949492a_T°°
  {
    var x_V0_CN0: ADT$Unary_9949492a_T
    var y_V0_CN1: ADT$Unary_9949492a_T
    
    
    
    // init x_V0_CN0
    inhale x_V0_CN0 == ADT$Unary_9949492a_T_dflt()
    
    // init y_V0_CN1
    inhale y_V0_CN1 == ADT$Unary_9949492a_T_dflt()
    
    // x_V0_CN0 = x_V0
    x_V0_CN0 := x_V0
    
    // y_V0_CN1 = y_V0
    y_V0_CN1 := y_V0
    
    // decl 
    
    // !match x_V0_CN0 {
//   case Zero_9949492a_F {}: 
//   case Suc_9949492a_F {pre_V1}: 
// }
    {
      var fn$$0: Bool
      fn$$0 := false
      if (ADT$Unary_9949492a_T_tag(x_V0_CN0) ==
      ADT$Unary_9949492a_T_Zero_9949492a_F_tag() &&
      !fn$$0) {
        fn$$0 := true
      }
      {
        var pre_V1: ADT$Unary_9949492a_T
        if (ADT$Unary_9949492a_T_tag(x_V0_CN0) ==
        ADT$Unary_9949492a_T_Suc_9949492a_F_tag() &&
        true &&
        !fn$$0) {
          fn$$0 := true
          pre_V1 := ADT$Unary_9949492a_T_preA(x_V0_CN0)
          
          // pre_V1.Mul(y_V0_CN1)AddCorrect(y_V0_CN1)
          AddCorrect_9949492a_MUnary(Mul_9949492a_MUnary(pre_V1, y_V0_CN1),
            y_V0_CN1)
          
          // pre_V1MulCorrect(y_V0_CN1)
          assert (decreasing(rank$ADT$Unary_9949492a_T(pre_V1), old(rank$ADT$Unary_9949492a_T(x_V0))): Bool) &&
            (bounded(old(rank$ADT$Unary_9949492a_T(x_V0))): Bool) ||
            rank$ADT$Unary_9949492a_T(pre_V1) ==
            old(rank$ADT$Unary_9949492a_T(x_V0)) &&
            false
          MulCorrect_9949492a_MUnary(pre_V1, y_V0_CN1)
        }
      }
      assert fn$$0
    }
    label returnLabel
  }
}

// decreases rank$ADT$Unary_9949492a_T(x_V0)
method Mul_9949492a_MUnary_termination_proof(x_V0: ADT$Unary_9949492a_T, y_V0: ADT$Unary_9949492a_T)
{
  if (x_V0 == ADT$Unary_9949492a_T_Zero_9949492a_F()) {
  } else {
    assert (decreasing(rank$ADT$Unary_9949492a_T(ADT$Unary_9949492a_T_preA(x_V0)),
      old(rank$ADT$Unary_9949492a_T(x_V0))): Bool) &&
      (bounded(old(rank$ADT$Unary_9949492a_T(x_V0))): Bool)}
}

// decreases n_V0
method NatToUnary_9949492a_F_termination_proof(n_V0: Int)
  requires n_V0 >= 0
{
  if (n_V0 == 0) {
  } else {
    assert (decreasing(n_V0 - 1, old(n_V0)): Bool) &&
      (bounded(old(n_V0)): Bool)}
}

// decreases n_V0 + rank$ADT$Unary_9949492a_T(x_V0)
method NatUnaryCorrespondence_9949492a_F(n_V0: Int, x_V0: ADT$Unary_9949492a_T)
  requires n_V0 >= 0
  ensures UnaryToNat_9949492a_MUnary(NatToUnary_9949492a_F(n_V0)) == n_V0
  ensures NatToUnary_9949492a_F(UnaryToNat_9949492a_MUnary(x_V0)) == x_V0
{
  
  // decl n_V0_CN0: int°°, x_V0_CN1: Unary_9949492a_T°°
  {
    var n_V0_CN0: Int
    var x_V0_CN1: ADT$Unary_9949492a_T
    
    
    
    // init n_V0_CN0
    inhale n_V0_CN0 == 0
    
    // init x_V0_CN1
    inhale x_V0_CN1 == ADT$Unary_9949492a_T_dflt()
    
    // n_V0_CN0 = n_V0
    n_V0_CN0 := n_V0
    
    // x_V0_CN1 = x_V0
    x_V0_CN1 := x_V0
    
    // decl 
    
    // if(x_V0_CN1 != Zero_9949492a_F{} && n_V0_CN0 != 0) {...} else {...}
    if (!(x_V0_CN1 == ADT$Unary_9949492a_T_Zero_9949492a_F()) &&
    !(n_V0_CN0 == 0)) {
      
      // decl 
      
      // NatUnaryCorrespondence_9949492a_F(n_V0_CN0 - 1, x_V0_CN1.fieldpreA: Unary_9949492a_T°)
      assert (decreasing(n_V0_CN0 - 1 +
        rank$ADT$Unary_9949492a_T(ADT$Unary_9949492a_T_preA(x_V0_CN1)), old(n_V0 +
        rank$ADT$Unary_9949492a_T(x_V0))): Bool) &&
        (bounded(old(n_V0 + rank$ADT$Unary_9949492a_T(x_V0))): Bool) ||
        n_V0_CN0 - 1 +
        rank$ADT$Unary_9949492a_T(ADT$Unary_9949492a_T_preA(x_V0_CN1)) ==
        old(n_V0 + rank$ADT$Unary_9949492a_T(x_V0)) &&
        false
      NatUnaryCorrespondence_9949492a_F(n_V0_CN0 - 1, ADT$Unary_9949492a_T_preA(x_V0_CN1))
    } else {
      
      // if(x_V0_CN1 != Zero_9949492a_F{} && n_V0_CN0 == 0) {...} else {...}
      if (!(x_V0_CN1 == ADT$Unary_9949492a_T_Zero_9949492a_F()) &&
      n_V0_CN0 == 0) {
        
        // decl 
        
        // NatUnaryCorrespondence_9949492a_F(n_V0_CN0, x_V0_CN1.fieldpreA: Unary_9949492a_T°)
        assert (decreasing(n_V0_CN0 +
          rank$ADT$Unary_9949492a_T(ADT$Unary_9949492a_T_preA(x_V0_CN1)), old(n_V0 +
          rank$ADT$Unary_9949492a_T(x_V0))): Bool) &&
          (bounded(old(n_V0 + rank$ADT$Unary_9949492a_T(x_V0))): Bool) ||
          n_V0_CN0 +
          rank$ADT$Unary_9949492a_T(ADT$Unary_9949492a_T_preA(x_V0_CN1)) ==
          old(n_V0 + rank$ADT$Unary_9949492a_T(x_V0)) &&
          false
        NatUnaryCorrespondence_9949492a_F(n_V0_CN0, ADT$Unary_9949492a_T_preA(x_V0_CN1))
      } else {
        
        // if(x_V0_CN1 == Zero_9949492a_F{} && n_V0_CN0 != 0) {...} else {...}
        if (x_V0_CN1 == ADT$Unary_9949492a_T_Zero_9949492a_F() &&
        !(n_V0_CN0 == 0)) {
          
          // decl 
          
          // NatUnaryCorrespondence_9949492a_F(n_V0_CN0 - 1, x_V0_CN1)
          assert (decreasing(n_V0_CN0 - 1 +
            rank$ADT$Unary_9949492a_T(x_V0_CN1), old(n_V0 +
            rank$ADT$Unary_9949492a_T(x_V0))): Bool) &&
            (bounded(old(n_V0 + rank$ADT$Unary_9949492a_T(x_V0))): Bool) ||
            n_V0_CN0 - 1 + rank$ADT$Unary_9949492a_T(x_V0_CN1) ==
            old(n_V0 + rank$ADT$Unary_9949492a_T(x_V0)) &&
            false
          NatUnaryCorrespondence_9949492a_F(n_V0_CN0 - 1, x_V0_CN1)
        }
      }
    }
    label returnLabel
  }
}

// decreases rank$ADT$Unary_9949492a_T(x_V0)
method SubCorrect_9949492a_MUnary_termination_proof(x_V0: ADT$Unary_9949492a_T,
  y_V0: ADT$Unary_9949492a_T)
  requires !Less_9949492a_MUnary(x_V0, y_V0)
{
  if (ADT$Unary_9949492a_T_tag(y_V0) ==
  ADT$Unary_9949492a_T_Suc_9949492a_F_tag()) {
    assert (decreasing(rank$ADT$Unary_9949492a_T(ADT$Unary_9949492a_T_preA(x_V0)),
      old(rank$ADT$Unary_9949492a_T(x_V0))): Bool) &&
      (bounded(old(rank$ADT$Unary_9949492a_T(x_V0))): Bool)
  }
}

// decreases rank$ADT$Unary_9949492a_T(y_V0)
method SubStructurallySmaller_9949492a_F_termination_proof(x_V0: ADT$Unary_9949492a_T,
  y_V0: ADT$Unary_9949492a_T)
  requires !Less_9949492a_MUnary(x_V0, y_V0) &&
    !(y_V0 == ADT$Unary_9949492a_T_Zero_9949492a_F())
{
  if (x_V0 ==
  ADT$Unary_9949492a_T_Suc_9949492a_F(ADT$Unary_9949492a_T_Zero_9949492a_F()) ||
  y_V0 ==
  ADT$Unary_9949492a_T_Suc_9949492a_F(ADT$Unary_9949492a_T_Zero_9949492a_F())) {
    {
      var __V2: Tuple0
      inhale __V2 ==
        asserting_9949492a_F(Sub_9949492a_MUnary(x_V0, y_V0) ==
        Sub_9949492a_MUnary(ADT$Unary_9949492a_T_preA(x_V0), ADT$Unary_9949492a_T_preA(y_V0)))
      {
        var __V1: Tuple0
        inhale __V1 ==
          asserting_9949492a_F(Sub_9949492a_MUnary(x_V0, y_V0) ==
          ADT$Unary_9949492a_T_preA(x_V0))
      }
    }
  } else {
    assert (decreasing(rank$ADT$Unary_9949492a_T(ADT$Unary_9949492a_T_preA(y_V0)),
      old(rank$ADT$Unary_9949492a_T(y_V0))): Bool) &&
      (bounded(old(rank$ADT$Unary_9949492a_T(y_V0))): Bool)}
}

// decreases rank$ADT$Unary_9949492a_T(x_V0)
method Sub_9949492a_MUnary_termination_proof(x_V0: ADT$Unary_9949492a_T, y_V0: ADT$Unary_9949492a_T)
  requires !Less_9949492a_MUnary(x_V0, y_V0)
{
  if (ADT$Unary_9949492a_T_tag(y_V0) ==
  ADT$Unary_9949492a_T_Zero_9949492a_F_tag()) {
  } elseif (ADT$Unary_9949492a_T_tag(y_V0) ==
  ADT$Unary_9949492a_T_Suc_9949492a_F_tag()) {
    {
      var pre_V1: ADT$Unary_9949492a_T
      inhale pre_V1 == ADT$Unary_9949492a_T_preA(y_V0)
      assert (decreasing(rank$ADT$Unary_9949492a_T(ADT$Unary_9949492a_T_preA(x_V0)),
        old(rank$ADT$Unary_9949492a_T(x_V0))): Bool) &&
        (bounded(old(rank$ADT$Unary_9949492a_T(x_V0))): Bool)
    }
  }
}

// decreases rank$ADT$Unary_9949492a_T(y_V0)
method SuccAdd_9949492a_MUnary(x_V0: ADT$Unary_9949492a_T, y_V0: ADT$Unary_9949492a_T)
  ensures ADT$Unary_9949492a_T_Suc_9949492a_F(Add_9949492a_MUnary(x_V0, y_V0)) ==
    Add_9949492a_MUnary(ADT$Unary_9949492a_T_Suc_9949492a_F(x_V0), y_V0)
{
  
  // decl x_V0_CN0: Unary_9949492a_T°°, y_V0_CN1: Unary_9949492a_T°°
  {
    var x_V0_CN0: ADT$Unary_9949492a_T
    var y_V0_CN1: ADT$Unary_9949492a_T
    
    
    
    // init x_V0_CN0
    inhale x_V0_CN0 == ADT$Unary_9949492a_T_dflt()
    
    // init y_V0_CN1
    inhale y_V0_CN1 == ADT$Unary_9949492a_T_dflt()
    
    // x_V0_CN0 = x_V0
    x_V0_CN0 := x_V0
    
    // y_V0_CN1 = y_V0
    y_V0_CN1 := y_V0
    
    // decl 
    
    // !match y_V0_CN1 {
//   case Zero_9949492a_F {}: 
//   case Suc_9949492a_F {pre_V1}: 
// }
    {
      var fn$$0: Bool
      fn$$0 := false
      if (ADT$Unary_9949492a_T_tag(y_V0_CN1) ==
      ADT$Unary_9949492a_T_Zero_9949492a_F_tag() &&
      !fn$$0) {
        fn$$0 := true
      }
      {
        var pre_V1: ADT$Unary_9949492a_T
        if (ADT$Unary_9949492a_T_tag(y_V0_CN1) ==
        ADT$Unary_9949492a_T_Suc_9949492a_F_tag() &&
        true &&
        !fn$$0) {
          fn$$0 := true
          pre_V1 := ADT$Unary_9949492a_T_preA(y_V0_CN1)
          
          // x_V0_CN0SuccAdd(y_V0_CN1.fieldpreA: Unary_9949492a_T°)
          assert (decreasing(rank$ADT$Unary_9949492a_T(ADT$Unary_9949492a_T_preA(y_V0_CN1)),
            old(rank$ADT$Unary_9949492a_T(y_V0))): Bool) &&
            (bounded(old(rank$ADT$Unary_9949492a_T(y_V0))): Bool) ||
            rank$ADT$Unary_9949492a_T(ADT$Unary_9949492a_T_preA(y_V0_CN1)) ==
            old(rank$ADT$Unary_9949492a_T(y_V0)) &&
            false
          SuccAdd_9949492a_MUnary(x_V0_CN0, ADT$Unary_9949492a_T_preA(y_V0_CN1))
        }
      }
      assert fn$$0
    }
    label returnLabel
  }
}

// decreases rank$ADT$Unary_9949492a_T(x_V0)
method UnaryToNat_9949492a_MUnary_termination_proof(x_V0: ADT$Unary_9949492a_T)
{
  if (ADT$Unary_9949492a_T_tag(x_V0) ==
  ADT$Unary_9949492a_T_Zero_9949492a_F_tag()) {
  } elseif (ADT$Unary_9949492a_T_tag(x_V0) ==
  ADT$Unary_9949492a_T_Suc_9949492a_F_tag()) {
    {
      var pre_V1: ADT$Unary_9949492a_T
      inhale pre_V1 == ADT$Unary_9949492a_T_preA(x_V0)
      assert (decreasing(rank$ADT$Unary_9949492a_T(pre_V1), old(rank$ADT$Unary_9949492a_T(x_V0))): Bool) &&
        (bounded(old(rank$ADT$Unary_9949492a_T(x_V0))): Bool)
    }
  }
}

method panic_a4af0e5e_F(v_V0: Tuple2[Ref, Types])
  requires false

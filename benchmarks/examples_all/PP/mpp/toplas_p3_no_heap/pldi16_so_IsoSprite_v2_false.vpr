function minX(self: Ref): Int 


function maxX(self: Ref): Int 


function minY(self: Ref): Int 


function maxY(self: Ref): Int 


function minZ(self: Ref): Int 


function maxZ(self: Ref): Int 


function sgn(i: Int): Int
  ensures i > 0 ==> result == 1
  ensures i == 0 ==> result == 0
  ensures i < 0 ==> result == -1 


method compare(p0: Bool, p1: Bool, p2: Bool, o1: Ref, o1_0: Ref, o1_1: Ref, o2: Ref, o2_0: Ref, o2_1: Ref) returns (res: Int, res_0: Int, res_1: Int)
  requires (p0 ==> true && p0 && p1 ==> o1 == o1_0) && (p1 ==> true && p0 && p1 ==> o1 == o1_0) && (p2 ==> true) && ((p0 ==> true && p0 && p2 ==> o2 == o1_1) && (p1 ==> true) && (p2 ==> true && p0 && p2 ==> o2 == o1_1) && ((p0 ==> true) && (p1 ==> true && p2 && p1 ==> o2_1 == o2_0) && (p2 ==> true && p2 && p1 ==> o2_1 == o2_0)))
  ensures (p0 ==> true && p0 && p1 && p2 ==> res == 0 ==> sgn(res_0) == sgn(res_1)) && (p1 ==> true && p0 && p1 && p2 ==> res == 0 ==> sgn(res_0) == sgn(res_1)) && (p2 ==> true && p0 && p1 && p2 ==> res == 0 ==> sgn(res_0) == sgn(res_1))
{
  var returned: Bool
  var _cond0: Bool
  var returned_0: Bool
  var returned_1: Bool
  var _cond0_0: Bool
  var _cond0_1: Bool
  if (p0) {
    _cond0 := false
  }
  if (p1) {
    _cond0_0 := false
  }
  if (p2) {
    _cond0_1 := false
  }
  if (p0) {
    returned := false
  }
  if (p1) {
    returned_0 := false
  }
  if (p2) {
    returned_1 := false
  }
  var pt0: Bool
  var pt1: Bool
  var pt2: Bool
  var pf0: Bool
  var pf1: Bool
  var pf2: Bool
  pt0 := p0 && (maxX(o2) > minX(o1) && (maxY(o2) > minY(o1) && minZ(o2) < maxZ(o1)))
  pt1 := p1 && (maxX(o2_0) > minX(o1_0) && (maxY(o2_0) > minY(o1_0) && minZ(o2_0) < maxZ(o1_0)))
  pt2 := p2 && (maxX(o2_1) > minX(o1_1) && (maxY(o2_1) > minY(o1_1) && minZ(o2_1) < maxZ(o1_1)))
  pf0 := p0 && !(maxX(o2) > minX(o1) && (maxY(o2) > minY(o1) && minZ(o2) < maxZ(o1)))
  pf1 := p1 && !(maxX(o2_0) > minX(o1_0) && (maxY(o2_0) > minY(o1_0) && minZ(o2_0) < maxZ(o1_0)))
  pf2 := p2 && !(maxX(o2_1) > minX(o1_1) && (maxY(o2_1) > minY(o1_1) && minZ(o2_1) < maxZ(o1_1)))
  assert (pt0 ==> !returned) && (pt1 ==> !returned_0) && (pt2 ==> !returned_1)
  if (pt0) {
    returned := true
  }
  if (pt1) {
    returned_0 := true
  }
  if (pt2) {
    returned_1 := true
  }
  if (pt0) {
    res := -1
  }
  if (pt1) {
    res_0 := -1
  }
  if (pt2) {
    res_1 := -1
  }
  var pt0_0: Bool
  var pt1_0: Bool
  var pt2_0: Bool
  var pf0_0: Bool
  var pf1_0: Bool
  var pf2_0: Bool
  pt0_0 := pf0 && (maxX(o2) > minX(o1) && (maxY(o2) > minY(o1) && minZ(o2) > maxZ(o1)))
  pt1_0 := pf1 && (maxX(o2_0) > minX(o1_0) && (maxY(o2_0) > minY(o1_0) && minZ(o2_0) > maxZ(o1_0)))
  pt2_0 := pf2 && (maxX(o2_1) > minX(o1_1) && (maxY(o2_1) > minY(o1_1) && minZ(o2_1) > maxZ(o1_1)))
  pf0_0 := pf0 && !(maxX(o2) > minX(o1) && (maxY(o2) > minY(o1) && minZ(o2) > maxZ(o1)))
  pf1_0 := pf1 && !(maxX(o2_0) > minX(o1_0) && (maxY(o2_0) > minY(o1_0) && minZ(o2_0) > maxZ(o1_0)))
  pf2_0 := pf2 && !(maxX(o2_1) > minX(o1_1) && (maxY(o2_1) > minY(o1_1) && minZ(o2_1) > maxZ(o1_1)))
  assert (pt0_0 ==> !returned) && (pt1_0 ==> !returned_0) && (pt2_0 ==> !returned_1)
  if (pt0_0) {
    returned := true
  }
  if (pt1_0) {
    returned_0 := true
  }
  if (pt2_0) {
    returned_1 := true
  }
  if (pt0_0) {
    res := 1
  }
  if (pt1_0) {
    res_0 := 1
  }
  if (pt2_0) {
    res_1 := 1
  }
  var pt0_1: Bool
  var pt1_1: Bool
  var pt2_1: Bool
  var pf0_1: Bool
  var pf1_1: Bool
  var pf2_1: Bool
  pt0_1 := pf0_0 && (maxX(o2) < minX(o1) && (maxY(o2) > minY(o1) && minZ(o2) > maxZ(o1)))
  pt1_1 := pf1_0 && (maxX(o2_0) < minX(o1_0) && (maxY(o2_0) > minY(o1_0) && minZ(o2_0) > maxZ(o1_0)))
  pt2_1 := pf2_0 && (maxX(o2_1) < minX(o1_1) && (maxY(o2_1) > minY(o1_1) && minZ(o2_1) > maxZ(o1_1)))
  pf0_1 := pf0_0 && !(maxX(o2) < minX(o1) && (maxY(o2) > minY(o1) && minZ(o2) > maxZ(o1)))
  pf1_1 := pf1_0 && !(maxX(o2_0) < minX(o1_0) && (maxY(o2_0) > minY(o1_0) && minZ(o2_0) > maxZ(o1_0)))
  pf2_1 := pf2_0 && !(maxX(o2_1) < minX(o1_1) && (maxY(o2_1) > minY(o1_1) && minZ(o2_1) > maxZ(o1_1)))
  assert (pt0_1 ==> !returned) && (pt1_1 ==> !returned_0) && (pt2_1 ==> !returned_1)
  if (pt0_1) {
    returned := true
  }
  if (pt1_1) {
    returned_0 := true
  }
  if (pt2_1) {
    returned_1 := true
  }
  if (pt0_1) {
    res := 1
  }
  if (pt1_1) {
    res_0 := 1
  }
  if (pt2_1) {
    res_1 := 1
  }
  var pt0_2: Bool
  var pt1_2: Bool
  var pt2_2: Bool
  var pf0_2: Bool
  var pf1_2: Bool
  var pf2_2: Bool
  pt0_2 := pf0_1 && (maxX(o2) < minX(o1) && (maxY(o2) < minY(o1) && minZ(o2) > maxZ(o1)))
  pt1_2 := pf1_1 && (maxX(o2_0) < minX(o1_0) && (maxY(o2_0) < minY(o1_0) && minZ(o2_0) > maxZ(o1_0)))
  pt2_2 := pf2_1 && (maxX(o2_1) < minX(o1_1) && (maxY(o2_1) < minY(o1_1) && minZ(o2_1) > maxZ(o1_1)))
  pf0_2 := pf0_1 && !(maxX(o2) < minX(o1) && (maxY(o2) < minY(o1) && minZ(o2) > maxZ(o1)))
  pf1_2 := pf1_1 && !(maxX(o2_0) < minX(o1_0) && (maxY(o2_0) < minY(o1_0) && minZ(o2_0) > maxZ(o1_0)))
  pf2_2 := pf2_1 && !(maxX(o2_1) < minX(o1_1) && (maxY(o2_1) < minY(o1_1) && minZ(o2_1) > maxZ(o1_1)))
  assert (pt0_2 ==> !returned) && (pt1_2 ==> !returned_0) && (pt2_2 ==> !returned_1)
  if (pt0_2) {
    returned := true
  }
  if (pt1_2) {
    returned_0 := true
  }
  if (pt2_2) {
    returned_1 := true
  }
  if (pt0_2) {
    res := 1
  }
  if (pt1_2) {
    res_0 := 1
  }
  if (pt2_2) {
    res_1 := 1
  }
  var pt0_3: Bool
  var pt1_3: Bool
  var pt2_3: Bool
  var pf0_3: Bool
  var pf1_3: Bool
  var pf2_3: Bool
  pt0_3 := pf0_2 && (maxX(o2) < minX(o1) && (maxY(o2) > minY(o1) && minZ(o2) < maxZ(o1)))
  pt1_3 := pf1_2 && (maxX(o2_0) < minX(o1_0) && (maxY(o2_0) > minY(o1_0) && minZ(o2_0) < maxZ(o1_0)))
  pt2_3 := pf2_2 && (maxX(o2_1) < minX(o1_1) && (maxY(o2_1) > minY(o1_1) && minZ(o2_1) < maxZ(o1_1)))
  pf0_3 := pf0_2 && !(maxX(o2) < minX(o1) && (maxY(o2) > minY(o1) && minZ(o2) < maxZ(o1)))
  pf1_3 := pf1_2 && !(maxX(o2_0) < minX(o1_0) && (maxY(o2_0) > minY(o1_0) && minZ(o2_0) < maxZ(o1_0)))
  pf2_3 := pf2_2 && !(maxX(o2_1) < minX(o1_1) && (maxY(o2_1) > minY(o1_1) && minZ(o2_1) < maxZ(o1_1)))
  assert (pt0_3 ==> !returned) && (pt1_3 ==> !returned_0) && (pt2_3 ==> !returned_1)
  if (pt0_3) {
    returned := true
  }
  if (pt1_3) {
    returned_0 := true
  }
  if (pt2_3) {
    returned_1 := true
  }
  if (pt0_3) {
    res := 1
  }
  if (pt1_3) {
    res_0 := 1
  }
  if (pt2_3) {
    res_1 := 1
  }
  var pt0_4: Bool
  var pt1_4: Bool
  var pt2_4: Bool
  var pf0_4: Bool
  var pf1_4: Bool
  var pf2_4: Bool
  pt0_4 := pf0_3 && (maxX(o2) > minX(o1) && (maxY(o2) < minY(o1) && minZ(o2) > maxZ(o1)))
  pt1_4 := pf1_3 && (maxX(o2_0) > minX(o1_0) && (maxY(o2_0) < minY(o1_0) && minZ(o2_0) > maxZ(o1_0)))
  pt2_4 := pf2_3 && (maxX(o2_1) > minX(o1_1) && (maxY(o2_1) < minY(o1_1) && minZ(o2_1) > maxZ(o1_1)))
  pf0_4 := pf0_3 && !(maxX(o2) > minX(o1) && (maxY(o2) < minY(o1) && minZ(o2) > maxZ(o1)))
  pf1_4 := pf1_3 && !(maxX(o2_0) > minX(o1_0) && (maxY(o2_0) < minY(o1_0) && minZ(o2_0) > maxZ(o1_0)))
  pf2_4 := pf2_3 && !(maxX(o2_1) > minX(o1_1) && (maxY(o2_1) < minY(o1_1) && minZ(o2_1) > maxZ(o1_1)))
  assert (pt0_4 ==> !returned) && (pt1_4 ==> !returned_0) && (pt2_4 ==> !returned_1)
  if (pt0_4) {
    returned := true
  }
  if (pt1_4) {
    returned_0 := true
  }
  if (pt2_4) {
    returned_1 := true
  }
  if (pt0_4) {
    res := 1
  }
  if (pt1_4) {
    res_0 := 1
  }
  if (pt2_4) {
    res_1 := 1
  }
  var pt0_5: Bool
  var pt1_5: Bool
  var pt2_5: Bool
  var pf0_5: Bool
  var pf1_5: Bool
  var pf2_5: Bool
  pt0_5 := pf0_4 && (maxX(o2) < minX(o1) && (maxY(o2) < minY(o1) && minZ(o2) > maxZ(o1)))
  pt1_5 := pf1_4 && (maxX(o2_0) < minX(o1_0) && (maxY(o2_0) < minY(o1_0) && minZ(o2_0) > maxZ(o1_0)))
  pt2_5 := pf2_4 && (maxX(o2_1) < minX(o1_1) && (maxY(o2_1) < minY(o1_1) && minZ(o2_1) > maxZ(o1_1)))
  pf0_5 := pf0_4 && !(maxX(o2) < minX(o1) && (maxY(o2) < minY(o1) && minZ(o2) > maxZ(o1)))
  pf1_5 := pf1_4 && !(maxX(o2_0) < minX(o1_0) && (maxY(o2_0) < minY(o1_0) && minZ(o2_0) > maxZ(o1_0)))
  pf2_5 := pf2_4 && !(maxX(o2_1) < minX(o1_1) && (maxY(o2_1) < minY(o1_1) && minZ(o2_1) > maxZ(o1_1)))
  assert (pt0_5 ==> !returned) && (pt1_5 ==> !returned_0) && (pt2_5 ==> !returned_1)
  if (pt0_5) {
    returned := true
  }
  if (pt1_5) {
    returned_0 := true
  }
  if (pt2_5) {
    returned_1 := true
  }
  if (pt0_5) {
    res := 1
  }
  if (pt1_5) {
    res_0 := 1
  }
  if (pt2_5) {
    res_1 := 1
  }
  var pt0_6: Bool
  var pt1_6: Bool
  var pt2_6: Bool
  var pf0_6: Bool
  var pf1_6: Bool
  var pf2_6: Bool
  pt0_6 := pf0_5 && (maxX(o2) > minX(o1) && (maxY(o2) < minY(o1) && minZ(o2) < maxZ(o1)))
  pt1_6 := pf1_5 && (maxX(o2_0) > minX(o1_0) && (maxY(o2_0) < minY(o1_0) && minZ(o2_0) < maxZ(o1_0)))
  pt2_6 := pf2_5 && (maxX(o2_1) > minX(o1_1) && (maxY(o2_1) < minY(o1_1) && minZ(o2_1) < maxZ(o1_1)))
  pf0_6 := pf0_5 && !(maxX(o2) > minX(o1) && (maxY(o2) < minY(o1) && minZ(o2) < maxZ(o1)))
  pf1_6 := pf1_5 && !(maxX(o2_0) > minX(o1_0) && (maxY(o2_0) < minY(o1_0) && minZ(o2_0) < maxZ(o1_0)))
  pf2_6 := pf2_5 && !(maxX(o2_1) > minX(o1_1) && (maxY(o2_1) < minY(o1_1) && minZ(o2_1) < maxZ(o1_1)))
  assert (pt0_6 ==> !returned) && (pt1_6 ==> !returned_0) && (pt2_6 ==> !returned_1)
  if (pt0_6) {
    returned := true
  }
  if (pt1_6) {
    returned_0 := true
  }
  if (pt2_6) {
    returned_1 := true
  }
  if (pt0_6) {
    res := 1
  }
  if (pt1_6) {
    res_0 := 1
  }
  if (pt2_6) {
    res_1 := 1
  }
  var pt0_7: Bool
  var pt1_7: Bool
  var pt2_7: Bool
  var pf0_7: Bool
  var pf1_7: Bool
  var pf2_7: Bool
  pt0_7 := pf0_6 && (maxX(o2) < minX(o1) && (maxY(o2) > minY(o1) && minZ(o2) < maxZ(o1)))
  pt1_7 := pf1_6 && (maxX(o2_0) < minX(o1_0) && (maxY(o2_0) > minY(o1_0) && minZ(o2_0) < maxZ(o1_0)))
  pt2_7 := pf2_6 && (maxX(o2_1) < minX(o1_1) && (maxY(o2_1) > minY(o1_1) && minZ(o2_1) < maxZ(o1_1)))
  pf0_7 := pf0_6 && !(maxX(o2) < minX(o1) && (maxY(o2) > minY(o1) && minZ(o2) < maxZ(o1)))
  pf1_7 := pf1_6 && !(maxX(o2_0) < minX(o1_0) && (maxY(o2_0) > minY(o1_0) && minZ(o2_0) < maxZ(o1_0)))
  pf2_7 := pf2_6 && !(maxX(o2_1) < minX(o1_1) && (maxY(o2_1) > minY(o1_1) && minZ(o2_1) < maxZ(o1_1)))
  assert (pt0_7 ==> !returned) && (pt1_7 ==> !returned_0) && (pt2_7 ==> !returned_1)
  if (pt0_7) {
    returned := true
  }
  if (pt1_7) {
    returned_0 := true
  }
  if (pt2_7) {
    returned_1 := true
  }
  if (pt0_7) {
    res := 1
  }
  if (pt1_7) {
    res_0 := 1
  }
  if (pt2_7) {
    res_1 := 1
  }
  var pt0_8: Bool
  var pt1_8: Bool
  var pt2_8: Bool
  var pf0_8: Bool
  var pf1_8: Bool
  var pf2_8: Bool
  pt0_8 := pf0_7 && o1 != o2
  pt1_8 := pf1_7 && o1_0 != o2_0
  pt2_8 := pf2_7 && o1_1 != o2_1
  pf0_8 := pf0_7 && !(o1 != o2)
  pf1_8 := pf1_7 && !(o1_0 != o2_0)
  pf2_8 := pf2_7 && !(o1_1 != o2_1)
  assert (pt0_8 ==> !returned) && (pt1_8 ==> !returned_0) && (pt2_8 ==> !returned_1)
  if (pt0_8) {
    returned := true
  }
  if (pt1_8) {
    returned_0 := true
  }
  if (pt2_8) {
    returned_1 := true
  }
  if (pt0_8) {
    res := 1
  }
  if (pt1_8) {
    res_0 := 1
  }
  if (pt2_8) {
    res_1 := 1
  }
  assert (pf0_8 ==> !returned) && (pf1_8 ==> !returned_0) && (pf2_8 ==> !returned_1)
  if (pf0_8) {
    returned := true
  }
  if (pf1_8) {
    returned_0 := true
  }
  if (pf2_8) {
    returned_1 := true
  }
  if (pf0_8) {
    res := 0
  }
  if (pf1_8) {
    res_0 := 0
  }
  if (pf2_8) {
    res_1 := 0
  }
  assert (p0 ==> returned) && (p1 ==> returned_0) && (p2 ==> returned_1)
}
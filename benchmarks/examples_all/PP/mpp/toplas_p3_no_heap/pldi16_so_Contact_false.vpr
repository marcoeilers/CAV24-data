function getFirstName(self: Ref): Int 


function getLastName(self: Ref): Int 


function getEmails(self: Ref): Int 


function sgn(i: Int): Int
  ensures i > 0 ==> result == 1
  ensures i == 0 ==> result == 0
  ensures i < 0 ==> result == -1 


method compare(p0_0: Bool, p1_0: Bool, p2_0: Bool, o1: Ref, o1_2: Ref, o1_3: Ref, o2: Ref, o2_2: Ref, o2_3: Ref) returns (res: Int, res_2: Int, res_3: Int)
  requires (p0_0 ==> true && p0_0 && p1_0 ==> o1 == o1_2) && (p1_0 ==> true && p0_0 && p1_0 ==> o1 == o1_2) && (p2_0 ==> true) && ((p0_0 ==> true && p0_0 && p2_0 ==> o2 == o1_3) && (p1_0 ==> true) && (p2_0 ==> true && p0_0 && p2_0 ==> o2 == o1_3) && ((p0_0 ==> true) && (p1_0 ==> true && p2_0 && p1_0 ==> o2_3 == o2_2) && (p2_0 ==> true && p2_0 && p1_0 ==> o2_3 == o2_2)))
  ensures (p0_0 ==> true && p0_0 && p1_0 && p2_0 ==> res == 0 ==> sgn(res_2) == sgn(res_3)) && (p1_0 ==> true && p0_0 && p1_0 && p2_0 ==> res == 0 ==> sgn(res_2) == sgn(res_3)) && (p2_0 ==> true && p0_0 && p1_0 && p2_0 ==> res == 0 ==> sgn(res_2) == sgn(res_3))
{
  var returned: Bool
  var compareFirstName: Int
  var _cond0: Bool
  var returned_0: Bool
  var returned_1: Bool
  var compareFirstName_0: Int
  var compareFirstName_1: Int
  var _cond0_0: Bool
  var _cond0_1: Bool
  if (p0_0) {
    _cond0 := false
  }
  if (p1_0) {
    _cond0_0 := false
  }
  if (p2_0) {
    _cond0_1 := false
  }
  if (p0_0) {
    returned := false
  }
  if (p1_0) {
    returned_0 := false
  }
  if (p2_0) {
    returned_1 := false
  }
  if (p0_0) {
    compareFirstName := 0
  }
  if (p1_0) {
    compareFirstName_0 := 0
  }
  if (p2_0) {
    compareFirstName_1 := 0
  }
  var pt0: Bool
  var pt1: Bool
  var pt2: Bool
  var pf0: Bool
  var pf1: Bool
  var pf2: Bool
  pt0 := p0_0 && (getFirstName(o1) != 0 && getFirstName(o2) != 0)
  pt1 := p1_0 && (getFirstName(o1_2) != 0 && getFirstName(o2_2) != 0)
  pt2 := p2_0 && (getFirstName(o1_3) != 0 && getFirstName(o2_3) != 0)
  pf0 := p0_0 && !(getFirstName(o1) != 0 && getFirstName(o2) != 0)
  pf1 := p1_0 && !(getFirstName(o1_2) != 0 && getFirstName(o2_2) != 0)
  pf2 := p2_0 && !(getFirstName(o1_3) != 0 && getFirstName(o2_3) != 0)
  var tmp0: Int
  var tmp1: Int
  var tmp2: Int
  var tmp0_0: Int
  var tmp1_0: Int
  var tmp2_0: Int
  var tmp0_1: Int
  var tmp1_1: Int
  var tmp2_1: Int
  if (pt0) {
    tmp0 := getFirstName(o1)
  }
  if (pt1) {
    tmp1 := getFirstName(o1_2)
  }
  if (pt2) {
    tmp2 := getFirstName(o1_3)
  }
  if (pt0) {
    tmp0_0 := getFirstName(o2)
  }
  if (pt1) {
    tmp1_0 := getFirstName(o2_2)
  }
  if (pt2) {
    tmp2_0 := getFirstName(o2_3)
  }
  tmp0_1, tmp1_1, tmp2_1 := String_compareIgnoreCase(pt0, pt1, pt2, tmp0, tmp1, tmp2, tmp0_0, tmp1_0, tmp2_0)
  if (pt0) {
    compareFirstName := tmp0_1
  }
  if (pt1) {
    compareFirstName_0 := tmp1_1
  }
  if (pt2) {
    compareFirstName_1 := tmp2_1
  }
  var pt0_0: Bool
  var pt1_0: Bool
  var pt2_0: Bool
  var pf0_0: Bool
  var pf1_0: Bool
  var pf2_0: Bool
  pt0_0 := pt0 && compareFirstName == 0
  pt1_0 := pt1 && compareFirstName_0 == 0
  pt2_0 := pt2 && compareFirstName_1 == 0
  pf0_0 := pt0 && !(compareFirstName == 0)
  pf1_0 := pt1 && !(compareFirstName_0 == 0)
  pf2_0 := pt2 && !(compareFirstName_1 == 0)
  var compareLastName: Int
  var compareLastName_0: Int
  var compareLastName_1: Int
  if (pt0_0) {
    compareLastName := 0
  }
  if (pt1_0) {
    compareLastName_0 := 0
  }
  if (pt2_0) {
    compareLastName_1 := 0
  }
  var pt0_1: Bool
  var pt1_1: Bool
  var pt2_1: Bool
  var pf0_1: Bool
  var pf1_1: Bool
  var pf2_1: Bool
  pt0_1 := pt0_0 && (getLastName(o1) != 0 && getLastName(o2) != 0)
  pt1_1 := pt1_0 && (getLastName(o1_2) != 0 && getLastName(o2_2) != 0)
  pt2_1 := pt2_0 && (getLastName(o1_3) != 0 && getLastName(o2_3) != 0)
  pf0_1 := pt0_0 && !(getLastName(o1) != 0 && getLastName(o2) != 0)
  pf1_1 := pt1_0 && !(getLastName(o1_2) != 0 && getLastName(o2_2) != 0)
  pf2_1 := pt2_0 && !(getLastName(o1_3) != 0 && getLastName(o2_3) != 0)
  var tmp0_2: Int
  var tmp1_2: Int
  var tmp2_2: Int
  var tmp0_3: Int
  var tmp1_3: Int
  var tmp2_3: Int
  var tmp0_4: Int
  var tmp1_4: Int
  var tmp2_4: Int
  if (pt0_1) {
    tmp0_2 := getLastName(o1)
  }
  if (pt1_1) {
    tmp1_2 := getLastName(o1_2)
  }
  if (pt2_1) {
    tmp2_2 := getLastName(o1_3)
  }
  if (pt0_1) {
    tmp0_3 := getLastName(o2)
  }
  if (pt1_1) {
    tmp1_3 := getLastName(o2_2)
  }
  if (pt2_1) {
    tmp2_3 := getLastName(o2_3)
  }
  tmp0_4, tmp1_4, tmp2_4 := String_compareIgnoreCase(pt0_1, pt1_1, pt2_1, tmp0_2, tmp1_2, tmp2_2, tmp0_3, tmp1_3, tmp2_3)
  if (pt0_1) {
    compareLastName := tmp0_4
  }
  if (pt1_1) {
    compareLastName_0 := tmp1_4
  }
  if (pt2_1) {
    compareLastName_1 := tmp2_4
  }
  var pt0_2: Bool
  var pt1_2: Bool
  var pt2_2: Bool
  var pf0_2: Bool
  var pf1_2: Bool
  var pf2_2: Bool
  pt0_2 := pt0_1 && compareLastName == 0
  pt1_2 := pt1_1 && compareLastName_0 == 0
  pt2_2 := pt2_1 && compareLastName_1 == 0
  pf0_2 := pt0_1 && !(compareLastName == 0)
  pf1_2 := pt1_1 && !(compareLastName_0 == 0)
  pf2_2 := pt2_1 && !(compareLastName_1 == 0)
  var compareEmail: Int
  var compareEmail_0: Int
  var compareEmail_1: Int
  if (pt0_2) {
    compareEmail := 0
  }
  if (pt1_2) {
    compareEmail_0 := 0
  }
  if (pt2_2) {
    compareEmail_1 := 0
  }
  var pt0_3: Bool
  var pt1_3: Bool
  var pt2_3: Bool
  var pf0_3: Bool
  var pf1_3: Bool
  var pf2_3: Bool
  pt0_3 := pt0_2 && (getEmails(o1) != 0 && getEmails(o2) != 0)
  pt1_3 := pt1_2 && (getEmails(o1_2) != 0 && getEmails(o2_2) != 0)
  pt2_3 := pt2_2 && (getEmails(o1_3) != 0 && getEmails(o2_3) != 0)
  pf0_3 := pt0_2 && !(getEmails(o1) != 0 && getEmails(o2) != 0)
  pf1_3 := pt1_2 && !(getEmails(o1_2) != 0 && getEmails(o2_2) != 0)
  pf2_3 := pt2_2 && !(getEmails(o1_3) != 0 && getEmails(o2_3) != 0)
  var tmp0_5: Int
  var tmp1_5: Int
  var tmp2_5: Int
  var tmp0_6: Int
  var tmp1_6: Int
  var tmp2_6: Int
  var tmp0_7: Int
  var tmp1_7: Int
  var tmp2_7: Int
  if (pt0_3) {
    tmp0_5 := getEmails(o1)
  }
  if (pt1_3) {
    tmp1_5 := getEmails(o1_2)
  }
  if (pt2_3) {
    tmp2_5 := getEmails(o1_3)
  }
  if (pt0_3) {
    tmp0_6 := getEmails(o2)
  }
  if (pt1_3) {
    tmp1_6 := getEmails(o2_2)
  }
  if (pt2_3) {
    tmp2_6 := getEmails(o2_3)
  }
  tmp0_7, tmp1_7, tmp2_7 := String_compareIgnoreCase(pt0_3, pt1_3, pt2_3, tmp0_5, tmp1_5, tmp2_5, tmp0_6, tmp1_6, tmp2_6)
  if (pt0_3) {
    compareEmail := tmp0_7
  }
  if (pt1_3) {
    compareEmail_0 := tmp1_7
  }
  if (pt2_3) {
    compareEmail_1 := tmp2_7
  }
  assert (pt0_3 ==> !returned) && (pt1_3 ==> !returned_0) && (pt2_3 ==> !returned_1)
  if (pt0_3) {
    returned := true
  }
  if (pt1_3) {
    returned_0 := true
  }
  if (pt2_3) {
    returned_1 := true
  }
  if (pt0_3) {
    res := compareEmail
  }
  if (pt1_3) {
    res_2 := compareEmail_0
  }
  if (pt2_3) {
    res_3 := compareEmail_1
  }
  assert (pf0_3 ==> !returned) && (pf1_3 ==> !returned_0) && (pf2_3 ==> !returned_1)
  if (pf0_3) {
    returned := true
  }
  if (pf1_3) {
    returned_0 := true
  }
  if (pf2_3) {
    returned_1 := true
  }
  if (pf0_3) {
    res := 0
  }
  if (pf1_3) {
    res_2 := 0
  }
  if (pf2_3) {
    res_3 := 0
  }
  assert (pf0_2 ==> !returned) && (pf1_2 ==> !returned_0) && (pf2_2 ==> !returned_1)
  if (pf0_2) {
    returned := true
  }
  if (pf1_2) {
    returned_0 := true
  }
  if (pf2_2) {
    returned_1 := true
  }
  if (pf0_2) {
    res := compareLastName
  }
  if (pf1_2) {
    res_2 := compareLastName_0
  }
  if (pf2_2) {
    res_3 := compareLastName_1
  }
  //var compareEmail: Int
  var compareEmail_2: Int
  var compareEmail_3: Int
  if (pf0_1) {
    compareEmail := 0
  }
  if (pf1_1) {
    compareEmail_2 := 0
  }
  if (pf2_1) {
    compareEmail_3 := 0
  }
  var pt0_4: Bool
  var pt1_4: Bool
  var pt2_4: Bool
  var pf0_4: Bool
  var pf1_4: Bool
  var pf2_4: Bool
  pt0_4 := pf0_1 && (getEmails(o1) != 0 && getEmails(o2) != 0)
  pt1_4 := pf1_1 && (getEmails(o1_2) != 0 && getEmails(o2_2) != 0)
  pt2_4 := pf2_1 && (getEmails(o1_3) != 0 && getEmails(o2_3) != 0)
  pf0_4 := pf0_1 && !(getEmails(o1) != 0 && getEmails(o2) != 0)
  pf1_4 := pf1_1 && !(getEmails(o1_2) != 0 && getEmails(o2_2) != 0)
  pf2_4 := pf2_1 && !(getEmails(o1_3) != 0 && getEmails(o2_3) != 0)
  var tmp0_8: Int
  var tmp1_8: Int
  var tmp2_8: Int
  var tmp0_9: Int
  var tmp1_9: Int
  var tmp2_9: Int
  var tmp0_10: Int
  var tmp1_10: Int
  var tmp2_10: Int
  if (pt0_4) {
    tmp0_8 := getEmails(o1)
  }
  if (pt1_4) {
    tmp1_8 := getEmails(o1_2)
  }
  if (pt2_4) {
    tmp2_8 := getEmails(o1_3)
  }
  if (pt0_4) {
    tmp0_9 := getEmails(o2)
  }
  if (pt1_4) {
    tmp1_9 := getEmails(o2_2)
  }
  if (pt2_4) {
    tmp2_9 := getEmails(o2_3)
  }
  tmp0_10, tmp1_10, tmp2_10 := String_compareIgnoreCase(pt0_4, pt1_4, pt2_4, tmp0_8, tmp1_8, tmp2_8, tmp0_9, tmp1_9, tmp2_9)
  if (pt0_4) {
    compareEmail := tmp0_10
  }
  if (pt1_4) {
    compareEmail_2 := tmp1_10
  }
  if (pt2_4) {
    compareEmail_3 := tmp2_10
  }
  assert (pt0_4 ==> !returned) && (pt1_4 ==> !returned_0) && (pt2_4 ==> !returned_1)
  if (pt0_4) {
    returned := true
  }
  if (pt1_4) {
    returned_0 := true
  }
  if (pt2_4) {
    returned_1 := true
  }
  if (pt0_4) {
    res := compareEmail
  }
  if (pt1_4) {
    res_2 := compareEmail_2
  }
  if (pt2_4) {
    res_3 := compareEmail_3
  }
  assert (pf0_4 ==> !returned) && (pf1_4 ==> !returned_0) && (pf2_4 ==> !returned_1)
  if (pf0_4) {
    returned := true
  }
  if (pf1_4) {
    returned_0 := true
  }
  if (pf2_4) {
    returned_1 := true
  }
  if (pf0_4) {
    res := 0
  }
  if (pf1_4) {
    res_2 := 0
  }
  if (pf2_4) {
    res_3 := 0
  }
  assert (pf0_0 ==> !returned) && (pf1_0 ==> !returned_0) && (pf2_0 ==> !returned_1)
  if (pf0_0) {
    returned := true
  }
  if (pf1_0) {
    returned_0 := true
  }
  if (pf2_0) {
    returned_1 := true
  }
  if (pf0_0) {
    res := compareFirstName
  }
  if (pf1_0) {
    res_2 := compareFirstName_0
  }
  if (pf2_0) {
    res_3 := compareFirstName_1
  }
  //var compareLastName: Int
  var compareLastName_2: Int
  var compareLastName_3: Int
  if (pf0) {
    compareLastName := 0
  }
  if (pf1) {
    compareLastName_2 := 0
  }
  if (pf2) {
    compareLastName_3 := 0
  }
  var pt0_5: Bool
  var pt1_5: Bool
  var pt2_5: Bool
  var pf0_5: Bool
  var pf1_5: Bool
  var pf2_5: Bool
  pt0_5 := pf0 && (getLastName(o1) != 0 && getLastName(o2) != 0)
  pt1_5 := pf1 && (getLastName(o1_2) != 0 && getLastName(o2_2) != 0)
  pt2_5 := pf2 && (getLastName(o1_3) != 0 && getLastName(o2_3) != 0)
  pf0_5 := pf0 && !(getLastName(o1) != 0 && getLastName(o2) != 0)
  pf1_5 := pf1 && !(getLastName(o1_2) != 0 && getLastName(o2_2) != 0)
  pf2_5 := pf2 && !(getLastName(o1_3) != 0 && getLastName(o2_3) != 0)
  var tmp0_11: Int
  var tmp1_11: Int
  var tmp2_11: Int
  var tmp0_12: Int
  var tmp1_12: Int
  var tmp2_12: Int
  var tmp0_13: Int
  var tmp1_13: Int
  var tmp2_13: Int
  if (pt0_5) {
    tmp0_11 := getLastName(o1)
  }
  if (pt1_5) {
    tmp1_11 := getLastName(o1_2)
  }
  if (pt2_5) {
    tmp2_11 := getLastName(o1_3)
  }
  if (pt0_5) {
    tmp0_12 := getLastName(o2)
  }
  if (pt1_5) {
    tmp1_12 := getLastName(o2_2)
  }
  if (pt2_5) {
    tmp2_12 := getLastName(o2_3)
  }
  tmp0_13, tmp1_13, tmp2_13 := String_compareIgnoreCase(pt0_5, pt1_5, pt2_5, tmp0_11, tmp1_11, tmp2_11, tmp0_12, tmp1_12, tmp2_12)
  if (pt0_5) {
    compareLastName := tmp0_13
  }
  if (pt1_5) {
    compareLastName_2 := tmp1_13
  }
  if (pt2_5) {
    compareLastName_3 := tmp2_13
  }
  var pt0_6: Bool
  var pt1_6: Bool
  var pt2_6: Bool
  var pf0_6: Bool
  var pf1_6: Bool
  var pf2_6: Bool
  pt0_6 := pt0_5 && compareLastName == 0
  pt1_6 := pt1_5 && compareLastName_2 == 0
  pt2_6 := pt2_5 && compareLastName_3 == 0
  pf0_6 := pt0_5 && !(compareLastName == 0)
  pf1_6 := pt1_5 && !(compareLastName_2 == 0)
  pf2_6 := pt2_5 && !(compareLastName_3 == 0)
  //var compareEmail: Int
  var compareEmail_4: Int
  var compareEmail_5: Int
  if (pt0_6) {
    compareEmail := 0
  }
  if (pt1_6) {
    compareEmail_4 := 0
  }
  if (pt2_6) {
    compareEmail_5 := 0
  }
  var pt0_7: Bool
  var pt1_7: Bool
  var pt2_7: Bool
  var pf0_7: Bool
  var pf1_7: Bool
  var pf2_7: Bool
  pt0_7 := pt0_6 && (getEmails(o1) != 0 && getEmails(o2) != 0)
  pt1_7 := pt1_6 && (getEmails(o1_2) != 0 && getEmails(o2_2) != 0)
  pt2_7 := pt2_6 && (getEmails(o1_3) != 0 && getEmails(o2_3) != 0)
  pf0_7 := pt0_6 && !(getEmails(o1) != 0 && getEmails(o2) != 0)
  pf1_7 := pt1_6 && !(getEmails(o1_2) != 0 && getEmails(o2_2) != 0)
  pf2_7 := pt2_6 && !(getEmails(o1_3) != 0 && getEmails(o2_3) != 0)
  var tmp0_14: Int
  var tmp1_14: Int
  var tmp2_14: Int
  var tmp0_15: Int
  var tmp1_15: Int
  var tmp2_15: Int
  var tmp0_16: Int
  var tmp1_16: Int
  var tmp2_16: Int
  if (pt0_7) {
    tmp0_14 := getEmails(o1)
  }
  if (pt1_7) {
    tmp1_14 := getEmails(o1_2)
  }
  if (pt2_7) {
    tmp2_14 := getEmails(o1_3)
  }
  if (pt0_7) {
    tmp0_15 := getEmails(o2)
  }
  if (pt1_7) {
    tmp1_15 := getEmails(o2_2)
  }
  if (pt2_7) {
    tmp2_15 := getEmails(o2_3)
  }
  tmp0_16, tmp1_16, tmp2_16 := String_compareIgnoreCase(pt0_7, pt1_7, pt2_7, tmp0_14, tmp1_14, tmp2_14, tmp0_15, tmp1_15, tmp2_15)
  if (pt0_7) {
    compareEmail := tmp0_16
  }
  if (pt1_7) {
    compareEmail_4 := tmp1_16
  }
  if (pt2_7) {
    compareEmail_5 := tmp2_16
  }
  assert (pt0_7 ==> !returned) && (pt1_7 ==> !returned_0) && (pt2_7 ==> !returned_1)
  if (pt0_7) {
    returned := true
  }
  if (pt1_7) {
    returned_0 := true
  }
  if (pt2_7) {
    returned_1 := true
  }
  if (pt0_7) {
    res := compareEmail
  }
  if (pt1_7) {
    res_2 := compareEmail_4
  }
  if (pt2_7) {
    res_3 := compareEmail_5
  }
  assert (pf0_7 ==> !returned) && (pf1_7 ==> !returned_0) && (pf2_7 ==> !returned_1)
  if (pf0_7) {
    returned := true
  }
  if (pf1_7) {
    returned_0 := true
  }
  if (pf2_7) {
    returned_1 := true
  }
  if (pf0_7) {
    res := 0
  }
  if (pf1_7) {
    res_2 := 0
  }
  if (pf2_7) {
    res_3 := 0
  }
  assert (pf0_6 ==> !returned) && (pf1_6 ==> !returned_0) && (pf2_6 ==> !returned_1)
  if (pf0_6) {
    returned := true
  }
  if (pf1_6) {
    returned_0 := true
  }
  if (pf2_6) {
    returned_1 := true
  }
  if (pf0_6) {
    res := compareLastName
  }
  if (pf1_6) {
    res_2 := compareLastName_2
  }
  if (pf2_6) {
    res_3 := compareLastName_3
  }
  //var compareEmail: Int
  var compareEmail_6: Int
  var compareEmail_7: Int
  if (pf0_5) {
    compareEmail := 0
  }
  if (pf1_5) {
    compareEmail_6 := 0
  }
  if (pf2_5) {
    compareEmail_7 := 0
  }
  var pt0_8: Bool
  var pt1_8: Bool
  var pt2_8: Bool
  var pf0_8: Bool
  var pf1_8: Bool
  var pf2_8: Bool
  pt0_8 := pf0_5 && (getEmails(o1) != 0 && getEmails(o2) != 0)
  pt1_8 := pf1_5 && (getEmails(o1_2) != 0 && getEmails(o2_2) != 0)
  pt2_8 := pf2_5 && (getEmails(o1_3) != 0 && getEmails(o2_3) != 0)
  pf0_8 := pf0_5 && !(getEmails(o1) != 0 && getEmails(o2) != 0)
  pf1_8 := pf1_5 && !(getEmails(o1_2) != 0 && getEmails(o2_2) != 0)
  pf2_8 := pf2_5 && !(getEmails(o1_3) != 0 && getEmails(o2_3) != 0)
  var tmp0_17: Int
  var tmp1_17: Int
  var tmp2_17: Int
  var tmp0_18: Int
  var tmp1_18: Int
  var tmp2_18: Int
  var tmp0_19: Int
  var tmp1_19: Int
  var tmp2_19: Int
  if (pt0_8) {
    tmp0_17 := getEmails(o1)
  }
  if (pt1_8) {
    tmp1_17 := getEmails(o1_2)
  }
  if (pt2_8) {
    tmp2_17 := getEmails(o1_3)
  }
  if (pt0_8) {
    tmp0_18 := getEmails(o2)
  }
  if (pt1_8) {
    tmp1_18 := getEmails(o2_2)
  }
  if (pt2_8) {
    tmp2_18 := getEmails(o2_3)
  }
  tmp0_19, tmp1_19, tmp2_19 := String_compareIgnoreCase(pt0_8, pt1_8, pt2_8, tmp0_17, tmp1_17, tmp2_17, tmp0_18, tmp1_18, tmp2_18)
  if (pt0_8) {
    compareEmail := tmp0_19
  }
  if (pt1_8) {
    compareEmail_6 := tmp1_19
  }
  if (pt2_8) {
    compareEmail_7 := tmp2_19
  }
  assert (pt0_8 ==> !returned) && (pt1_8 ==> !returned_0) && (pt2_8 ==> !returned_1)
  if (pt0_8) {
    returned := true
  }
  if (pt1_8) {
    returned_0 := true
  }
  if (pt2_8) {
    returned_1 := true
  }
  if (pt0_8) {
    res := compareEmail
  }
  if (pt1_8) {
    res_2 := compareEmail_6
  }
  if (pt2_8) {
    res_3 := compareEmail_7
  }
  assert (pf0_8 ==> !returned) && (pf1_8 ==> !returned_0) && (pf2_8 ==> !returned_1)
  if (pf0_8) {
    returned := true
  }
  if (pf1_8) {
    returned_0 := true
  }
  if (pf2_8) {
    returned_1 := true
  }
  if (pf0_8) {
    res := 0
  }
  if (pf1_8) {
    res_2 := 0
  }
  if (pf2_8) {
    res_3 := 0
  }
  assert (p0_0 ==> returned) && (p1_0 ==> returned_0) && (p2_0 ==> returned_1)
}

method String_compareIgnoreCase(p0: Bool, p1: Bool, p2: Bool, o1: Int, o1_0: Int, o1_1: Int, o2: Int, o2_0: Int, o2_1: Int) returns (res: Int, res_0: Int, res_1: Int)
  ensures (p0 ==> true && p0 && p1 ==> o1 == o1_0 && o2 == o2_0 ==> res == res_0) && (p1 ==> true && p0 && p1 ==> o1 == o1_0 && o2 == o2_0 ==> res == res_0) && (p2 ==> true)
  ensures (p0 ==> true && p0 && p2 ==> o1 == o1_1 && o2 == o2_1 ==> res == res_1) && (p1 ==> true) && (p2 ==> true && p0 && p2 ==> o1 == o1_1 && o2 == o2_1 ==> res == res_1)
  ensures (p0 ==> true) && (p1 ==> true && p2 && p1 ==> o1_1 == o1_0 && o2_1 == o2_0 ==> res_1 == res_0) && (p2 ==> true && p2 && p1 ==> o1_1 == o1_0 && o2_1 == o2_0 ==> res_1 == res_0)
  ensures (p0 ==> true && p0 && p1 && p2 ==> o1 == o1_0 && (o2 == o1_1 && (o2_1 == o2_0 && res == 0)) ==> sgn(res_0) == sgn(res_1)) && (p1 ==> true && p0 && p1 && p2 ==> o1 == o1_0 && (o2 == o1_1 && (o2_1 == o2_0 && res == 0)) ==> sgn(res_0) == sgn(res_1)) && (p2 ==> true && p0 && p1 && p2 ==> o1 == o1_0 && (o2 == o1_1 && (o2_1 == o2_0 && res == 0)) ==> sgn(res_0) == sgn(res_1))

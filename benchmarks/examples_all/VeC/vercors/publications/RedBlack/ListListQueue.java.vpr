domain TYPE {
  
  unique function class_java_DOT_lang_DOT_Object(): TYPE
  
  unique function class_java_DOT_lang_DOT_Number(): TYPE
  
  unique function class_java_DOT_lang_DOT_Class(): TYPE
  
  unique function class_java_DOT_lang_DOT_Integer(): TYPE
  
  unique function class_ListListQueue(): TYPE
  
  unique function class_NodeListIterator(): TYPE
  
  unique function class_ListList(): TYPE
  
  unique function class_NodeList(): TYPE
  
  unique function class_Node(): TYPE
  
  unique function class_Util(): TYPE
  
  unique function class_Tree(): TYPE
  
  unique function class_EncodedGlobalVariables(): TYPE
  
  unique function class_MagicWands(): TYPE
  
  function directSuperclass(t: TYPE): TYPE
  
  function type_of(val: Ref): TYPE
  
  axiom java_DOT_lang_DOT_Object_directSuperclass {
    directSuperclass(class_java_DOT_lang_DOT_Object()) == class_java_DOT_lang_DOT_Object()
  }
  
  axiom java_DOT_lang_DOT_Number_directSuperclass {
    directSuperclass(class_java_DOT_lang_DOT_Number()) == class_java_DOT_lang_DOT_Object()
  }
  
  axiom java_DOT_lang_DOT_Class_directSuperclass {
    directSuperclass(class_java_DOT_lang_DOT_Class()) == class_java_DOT_lang_DOT_Object()
  }
  
  axiom java_DOT_lang_DOT_Integer_directSuperclass {
    directSuperclass(class_java_DOT_lang_DOT_Integer()) == class_java_DOT_lang_DOT_Number()
  }
  
  axiom ListListQueue_directSuperclass {
    directSuperclass(class_ListListQueue()) == class_java_DOT_lang_DOT_Object()
  }
  
  axiom NodeListIterator_directSuperclass {
    directSuperclass(class_NodeListIterator()) == class_java_DOT_lang_DOT_Object()
  }
  
  axiom ListList_directSuperclass {
    directSuperclass(class_ListList()) == class_java_DOT_lang_DOT_Object()
  }
  
  axiom NodeList_directSuperclass {
    directSuperclass(class_NodeList()) == class_java_DOT_lang_DOT_Object()
  }
  
  axiom Node_directSuperclass {
    directSuperclass(class_Node()) == class_java_DOT_lang_DOT_Object()
  }
  
  axiom Util_directSuperclass {
    directSuperclass(class_Util()) == class_java_DOT_lang_DOT_Object()
  }
  
  axiom Tree_directSuperclass {
    directSuperclass(class_Tree()) == class_java_DOT_lang_DOT_Object()
  }
  
  axiom EncodedGlobalVariables_directSuperclass {
    directSuperclass(class_EncodedGlobalVariables()) == class_java_DOT_lang_DOT_Object()
  }
  
  axiom MagicWands_directSuperclass {
    directSuperclass(class_MagicWands()) == class_java_DOT_lang_DOT_Object()
  }
}

domain frac {
  
  function frac_val(a: frac): Perm
  
  axiom frac_eq {
    (forall a: frac, b: frac :: { frac_val(a),frac_val(b) } (frac_val(a) == frac_val(b)) == (a == b))
  }
  
  axiom frac_bound {
    (forall a: frac :: { frac_val(a) } 0 / 1 < frac_val(a) && frac_val(a) <= 1 / 1)
  }
}

domain zfrac {
  
  function zfrac_val(a: zfrac): Perm
  
  axiom zfrac_eq {
    (forall a: zfrac, b: zfrac :: { zfrac_val(a),zfrac_val(b) } (zfrac_val(a) == zfrac_val(b)) == (a == b))
  }
  
  axiom zfrac_bound {
    (forall a: zfrac :: { zfrac_val(a) } 0 / 1 <= zfrac_val(a) && zfrac_val(a) <= 1 / 1)
  }
}

//  a field 
field possibly_illegal_cast: Ref

//  a field 
field field_ListListQueue_curNLIterator: Ref

//  a field 
field field_ListListQueue_batches: Ref

//  a field 
field field_ListListQueue_filling: Ref

//  a field 
field field_ListListQueue_isLastBatch: Bool

//  a field 
field field_ListListQueue_finalised: Bool

//  a field 
field field_ListListQueue_allP: Seq[Ref]

//  a field 
field field_ListListQueue_allC: Seq[Ref]

//  a field 
field field_ListListQueue_keysP: Seq[Int]

//  a field 
field field_ListListQueue_keysC: Seq[Int]

//  a field 
field field_ListListQueue_readHead: Int

//  a field 
field field_ListListQueue_batchHead: Int

//  a field 
field field_ListListQueue_finalisedC: Bool

//  a field 
field field_ListListQueue_maxKey: Int

//  a field 
field field_ListListQueue_maxKeyBatches: Int

//  a field 
field field_NodeListIterator_current: Ref

//  a field 
field field_ListList_nodeList: Ref

//  a field 
field field_ListList_next: Ref

//  a field 
field field_NodeList_node: Ref

//  a field 
field field_NodeList_next: Ref

//  a field 
field field_Node_key: Int

//  a field 
field field_Node_left: Ref

//  a field 
field field_Node_right: Ref

//  a field 
field field_Node_color: Bool

//  a field 
field field_Node_dblack: Bool

//  a field 
field field_Node_dblackNull: Bool

//  a field 
field field_Tree_root: Ref

//  a field 
field field_java_DOT_lang_DOT_Integer_MIN_VALUE: Int

//  a field 
field field_java_DOT_lang_DOT_Integer_MAX_VALUE: Int

//  a field 
field field_java_DOT_lang_DOT_Integer_TYPE: Ref

//  a field 
field field_java_DOT_lang_DOT_Integer_SIZE: Int

//  a field 
field field_java_DOT_lang_DOT_Integer_BYTES: Int

function instanceof(t: TYPE, u: TYPE): Bool
  ensures result == (t == u || directSuperclass(t) == u)


function method_ListListQueue_maxLength(): Int
  ensures result == 10
{
  10
}

function method_ListListQueue_pow2__Integer(x: Int): Int
  requires 0 <= x
  decreases _
  ensures 1 <= result
  ensures 0 < x ==> 1 < result && method_ListListQueue_pow2__Integer(x - 1) == result / 2
  ensures 1 < result ==> 0 < x
{
  (x <= 0 ? 1 : 2 * method_ListListQueue_pow2__Integer(x - 1))
}

function method_ListListQueue_toBagP(diz: Ref, globals: Ref): Multiset[Ref]
  requires diz != null
  requires acc(method_ListListQueue_producer(diz, globals), write)
  ensures (unfolding acc(method_ListListQueue_producer(diz, globals), write) in |result| == |diz.field_ListListQueue_allP ++ method_NodeList_toSeq__NodeList(globals, diz.field_ListListQueue_filling)|)
{
  (unfolding acc(method_ListListQueue_producer(diz, globals), write) in method_Util_toBag__Sequence$Node$(diz.field_ListListQueue_allP ++ method_NodeList_toSeq__NodeList(globals, diz.field_ListListQueue_filling)))
}

function method_ListListQueue_toBagC(diz: Ref, globals: Ref): Multiset[Ref]
  requires diz != null
  requires acc(method_ListListQueue_consumer(diz, globals), write)
  ensures (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in |result| == diz.field_ListListQueue_readHead)
{
  (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in method_Util_toBag__Sequence$Node$__Integer(diz.field_ListListQueue_allC, diz.field_ListListQueue_readHead))
}

function method_ListListQueue_log2__Integer(diz: Ref, x: Int): Int
  requires diz != null
  requires 0 < x
  decreases _
  ensures 0 <= result
  ensures 1 < x ==> 0 < result && method_ListListQueue_log2__Integer(diz, x / 2) == result - 1
  ensures method_ListListQueue_pow2__Integer(result) <= x && x + 1 <= method_ListListQueue_pow2__Integer(result + 1)
{
  (0 < x / 2 ? method_ListListQueue_log2__Integer(diz, x / 2) + 1 : 0)
}

function method_NodeListIterator_sorted__NodeListIterator(globals: Ref, it: Ref): Bool
  requires it != null ==> acc(it.field_NodeListIterator_current, wildcard) && acc(method_NodeList_list_perm__NodeList(globals, it.field_NodeListIterator_current), wildcard)
{
  it != null ==> method_NodeList_sorted__NodeList(globals, it.field_NodeListIterator_current)
}

function method_NodeListIterator_toSeq__NodeListIterator(globals: Ref, it: Ref): Seq[Ref]
  requires it != null ==> acc(it.field_NodeListIterator_current, wildcard) && acc(method_NodeList_list_perm__NodeList(globals, it.field_NodeListIterator_current), wildcard)
  ensures (it == null ? |result| == 0 : |result| == method_NodeList_size__NodeList(globals, it.field_NodeListIterator_current))
{
  (it == null ? Seq[Ref]() : method_NodeList_toSeq__NodeList(globals, it.field_NodeListIterator_current))
}

function method_NodeListIterator_toSeqKeys__NodeListIterator(globals: Ref, it: Ref): Seq[Int]
  requires it != null ==> acc(it.field_NodeListIterator_current, wildcard) && acc(method_NodeList_list_perm__NodeList(globals, it.field_NodeListIterator_current), wildcard)
{
  (it == null ? Seq[Int]() : method_NodeList_toSeqKeys__NodeList(globals, it.field_NodeListIterator_current))
}

function method_ListList_toSeq__ListList(globals: Ref, ll: Ref): Seq[Ref]
  requires acc(method_ListList_list_perm__ListList(globals, ll), wildcard)
  ensures ll == null ==> |result| == 0
  ensures ll != null ==> 0 < |result|
{
  (ll == null ? Seq[Ref]() : (unfolding acc(method_ListList_list_perm__ListList(globals, ll), wildcard) in method_NodeList_toSeq__NodeList(globals, ll.field_ListList_nodeList) ++ method_ListList_toSeq__ListList(globals, ll.field_ListList_next)))
}

function method_ListList_toNLSeq__ListList(globals: Ref, ll: Ref): Seq[Ref]
  requires acc(method_ListList_list_perm__ListList(globals, ll), wildcard)
{
  (ll == null ? Seq[Ref]() : (unfolding acc(method_ListList_list_perm__ListList(globals, ll), wildcard) in Seq(ll.field_ListList_nodeList) ++ method_ListList_toNLSeq__ListList(globals, ll.field_ListList_next)))
}

function method_ListList_toSeqKeys__ListList(globals: Ref, ll: Ref): Seq[Int]
  requires acc(method_ListList_list_perm__ListList(globals, ll), wildcard)
{
  (ll == null ? Seq[Int]() : (unfolding acc(method_ListList_list_perm__ListList(globals, ll), wildcard) in method_NodeList_toSeqKeys__NodeList(globals, ll.field_ListList_nodeList) ++ method_ListList_toSeqKeys__ListList(globals, ll.field_ListList_next)))
}

function method_ListList_toNLSeqTailLemma__ListList(globals: Ref, ll: Ref): Bool
  requires acc(method_ListList_list_perm__ListList(globals, ll), wildcard)
  ensures ll != null ==> method_ListList_toNLSeq__ListList(globals, ll)[1..] == (unfolding acc(method_ListList_list_perm__ListList(globals, ll), wildcard) in method_ListList_toNLSeq__ListList(globals, ll.field_ListList_next))
  ensures result
{
  ll != null ==> method_ListList_toNLSeq__ListList(globals, ll) == (unfolding acc(method_ListList_list_perm__ListList(globals, ll), wildcard) in Seq(ll.field_ListList_nodeList) ++ method_ListList_toNLSeq__ListList(globals, ll.field_ListList_next))
}

function method_ListList_seqSizeLemma__ListList(globals: Ref, ll: Ref): Bool
  requires acc(method_ListList_list_perm__ListList(globals, ll), wildcard)
  ensures |method_ListList_toSeq__ListList(globals, ll)| == method_ListList_size__ListList(globals, ll)
  ensures |method_ListList_toSeqKeys__ListList(globals, ll)| == method_ListList_size__ListList(globals, ll)
  ensures result
{
  ll != null ==> (unfolding acc(method_ListList_list_perm__ListList(globals, ll), wildcard) in method_ListList_seqSizeLemma__ListList(globals, ll.field_ListList_next)) && |method_ListList_toSeq__ListList(globals, ll)| == (unfolding acc(method_ListList_list_perm__ListList(globals, ll), wildcard) in |method_NodeList_toSeq__NodeList(globals, ll.field_ListList_nodeList)| + |method_ListList_toSeq__ListList(globals, ll.field_ListList_next)|) && |method_ListList_toSeqKeys__ListList(globals, ll)| == (unfolding acc(method_ListList_list_perm__ListList(globals, ll), wildcard) in |method_NodeList_toSeqKeys__NodeList(globals, ll.field_ListList_nodeList)| + |method_ListList_toSeqKeys__ListList(globals, ll.field_ListList_next)|)
}

function method_ListList_sorted__ListList(globals: Ref, ll: Ref): Bool
  requires acc(method_ListList_list_perm__ListList(globals, ll), wildcard)
{
  method_Util_sorted__Sequence$Integer$(method_ListList_toSeqKeys__ListList(globals, ll))
}

function method_ListList_size__ListList(globals: Ref, ll: Ref): Int
  requires acc(method_ListList_list_perm__ListList(globals, ll), wildcard)
{
  (ll == null ? 0 : (unfolding acc(method_ListList_list_perm__ListList(globals, ll), wildcard) in method_NodeList_size__NodeList(globals, ll.field_ListList_nodeList) + method_ListList_size__ListList(globals, ll.field_ListList_next)))
}

function method_NodeList_size__NodeList(globals: Ref, nl: Ref): Int
  requires acc(method_NodeList_list_perm__NodeList(globals, nl), wildcard)
  ensures nl != null ==> 0 < result
  ensures nl == null ==> result == 0
{
  (nl == null ? 0 : (unfolding acc(method_NodeList_list_perm__NodeList(globals, nl), wildcard) in 1 + method_NodeList_size__NodeList(globals, nl.field_NodeList_next)))
}

function method_NodeList_toSeq__NodeList(globals: Ref, nl: Ref): Seq[Ref]
  requires acc(method_NodeList_list_perm__NodeList(globals, nl), wildcard)
  ensures |result| == method_NodeList_size__NodeList(globals, nl)
  ensures nl != null ==> result[0] == (unfolding acc(method_NodeList_list_perm__NodeList(globals, nl), wildcard) in nl.field_NodeList_node)
{
  (nl == null ? Seq[Ref]() : (unfolding acc(method_NodeList_list_perm__NodeList(globals, nl), wildcard) in Seq(nl.field_NodeList_node) ++ method_NodeList_toSeq__NodeList(globals, nl.field_NodeList_next)))
}

function method_NodeList_toSeqKeys__NodeList(globals: Ref, nl: Ref): Seq[Int]
  requires acc(method_NodeList_list_perm__NodeList(globals, nl), wildcard)
  ensures |result| == method_NodeList_size__NodeList(globals, nl)
  ensures nl != null ==> result[0] == (unfolding acc(method_NodeList_list_perm__NodeList(globals, nl), wildcard) in nl.field_NodeList_node.field_Node_key)
{
  (nl == null ? Seq[Int]() : (unfolding acc(method_NodeList_list_perm__NodeList(globals, nl), wildcard) in Seq(nl.field_NodeList_node.field_Node_key) ++ method_NodeList_toSeqKeys__NodeList(globals, nl.field_NodeList_next)))
}

function method_NodeList_sorted__NodeList(globals: Ref, nl: Ref): Bool
  requires acc(method_NodeList_list_perm__NodeList(globals, nl), wildcard)
{
  method_Util_sorted__Sequence$Integer$(method_NodeList_toSeqKeys__NodeList(globals, nl))
}

function method_Util_isPrefix__Sequence$Integer$__Sequence$Integer$(seq1: Seq[Int], seq2: Seq[Int]): Bool
  decreases _
  ensures seq1 == seq2 ==> result == true
  ensures result ==> |seq1| <= |seq2|
  ensures result && 0 < |seq1| ==> method_Util_isPrefix__Sequence$Integer$__Sequence$Integer$(seq1[1..], seq2[1..])
  ensures result == (|seq1| <= |seq2| && (forall i: Int :: { seq1[i] } { seq2[i] } 0 <= i && i < |seq1| ==> seq1[i] == seq2[i]))
{
  (|seq1| <= 0 ? true : (|seq2| <= 0 ? false : seq1[0] == seq2[0] && method_Util_isPrefix__Sequence$Integer$__Sequence$Integer$(seq1[1..], seq2[1..])))
}

function method_Util_isPrefix__Sequence$Node$__Sequence$Node$(seq1: Seq[Ref], seq2: Seq[Ref]): Bool
  decreases _
  ensures seq1 == seq2 ==> result == true
  ensures result ==> |seq1| <= |seq2|
  ensures result && 0 < |seq1| ==> method_Util_isPrefix__Sequence$Node$__Sequence$Node$(seq1[1..], seq2[1..])
  ensures result == (|seq1| <= |seq2| && (forall i: Int :: { seq1[i] } { seq2[i] } 0 <= i && i < |seq1| ==> seq1[i] == seq2[i]))
{
  (|seq1| <= 0 ? true : (|seq2| <= 0 ? false : seq1[0] == seq2[0] && method_Util_isPrefix__Sequence$Node$__Sequence$Node$(seq1[1..], seq2[1..])))
}

function method_Util_prefixExtensionLemma__Sequence$Node$__Sequence$Node$__Sequence$Node$__Sequence$Node$(pref: Seq[Ref], all: Seq[Ref], extension: Seq[Ref], newAll: Seq[Ref]): Bool
  requires method_Util_isPrefix__Sequence$Node$__Sequence$Node$(pref, all)
  requires newAll == all ++ extension
  ensures method_Util_isPrefix__Sequence$Node$__Sequence$Node$(pref, newAll)
  ensures result
{
  0 < |pref| ==> 0 < |all| && 0 < |newAll| && method_Util_prefixExtensionLemma__Sequence$Node$__Sequence$Node$__Sequence$Node$__Sequence$Node$(pref[1..], all[1..], extension, newAll[1..])
}

function method_Util_prefixTransLemma__Sequence$Node$__Sequence$Node$__Sequence$Node$(pref: Seq[Ref], intermed: Seq[Ref], all: Seq[Ref]): Bool
  requires method_Util_isPrefix__Sequence$Node$__Sequence$Node$(pref, intermed)
  requires method_Util_isPrefix__Sequence$Node$__Sequence$Node$(intermed, all)
  ensures method_Util_isPrefix__Sequence$Node$__Sequence$Node$(pref, all)
  ensures result
{
  0 < |pref| ==> 0 < |intermed| && 0 < |all| && method_Util_prefixTransLemma__Sequence$Node$__Sequence$Node$__Sequence$Node$(pref[1..], intermed[1..], all[1..])
}

function method_Util_isSuffix__Sequence$Node$__Sequence$Node$(seq1: Seq[Ref], seq2: Seq[Ref]): Bool
  ensures seq1 == seq2 ==> result == true
  ensures result ==> |seq1| <= |seq2|
  ensures result == (|seq1| <= |seq2| && (forall i: Int :: { seq1[i] } 0 <= i && i < |seq1| ==> seq1[i] == seq2[i + |seq2| - |seq1|]))
{
  (|seq2| < |seq1| ? false : (|seq1| <= 0 ? true : (|seq1| < |seq2| ? method_Util_isSuffix__Sequence$Node$__Sequence$Node$(seq1, seq2[1..]) : seq1[0] == seq2[0] && method_Util_isSuffix__Sequence$Node$__Sequence$Node$(seq1[1..], seq2[1..]))))
}

function method_Util_isSuffix__Sequence$Integer$__Sequence$Integer$(seq1: Seq[Int], seq2: Seq[Int]): Bool
  ensures seq1 == seq2 ==> result == true
  ensures result ==> |seq1| <= |seq2|
  ensures result == (|seq1| <= |seq2| && (forall i: Int :: { seq1[i] } 0 <= i && i < |seq1| ==> seq1[i] == seq2[i + |seq2| - |seq1|]))
{
  (|seq2| < |seq1| ? false : (|seq1| <= 0 ? true : (|seq1| < |seq2| ? method_Util_isSuffix__Sequence$Integer$__Sequence$Integer$(seq1, seq2[1..]) : seq1[0] == seq2[0] && method_Util_isSuffix__Sequence$Integer$__Sequence$Integer$(seq1[1..], seq2[1..]))))
}

function method_Util_suffixShortenLemma__Sequence$Node$__Sequence$Node$__Sequence$Node$__Sequence$Node$(suff: Seq[Ref], all: Seq[Ref], taken: Seq[Ref], remainder: Seq[Ref]): Bool
  requires method_Util_isSuffix__Sequence$Node$__Sequence$Node$(suff, all)
  requires suff == taken ++ remainder
  ensures method_Util_isSuffix__Sequence$Node$__Sequence$Node$(remainder, all)
  ensures result
{
  (|suff| < |all| ? method_Util_suffixShortenLemma__Sequence$Node$__Sequence$Node$__Sequence$Node$__Sequence$Node$(suff, all[1..], taken, remainder) : (|taken| <= 0 ? suff == remainder && method_Util_isSuffix__Sequence$Node$__Sequence$Node$(remainder, all) : 0 < |suff| && 0 < |all| && method_Util_suffixShortenLemma__Sequence$Node$__Sequence$Node$__Sequence$Node$__Sequence$Node$(suff[1..], all[1..], taken[1..], remainder)))
}

function method_Util_isInfix__Sequence$Integer$__Sequence$Integer$__Integer(inf: Seq[Int], all: Seq[Int], idx: Int): Bool
  requires 0 <= idx
  ensures result && 0 < |inf| ==> idx <= |all| - |inf| && all[idx] == inf[0]
  ensures result == (idx <= |all| - |inf| && (forall i: Int :: { inf[i] } 0 <= i && i < |inf| ==> inf[i] == all[i + idx]))
{
  (|all| < idx ? false : (idx == 0 ? method_Util_isPrefix__Sequence$Integer$__Sequence$Integer$(inf, all) : method_Util_isInfix__Sequence$Integer$__Sequence$Integer$__Integer(inf, all[1..], idx - 1)))
}

function method_Util_isInfix__Sequence$Node$__Sequence$Node$__Integer(inf: Seq[Ref], all: Seq[Ref], idx: Int): Bool
  requires 0 <= idx
  ensures result && 0 < |inf| ==> idx <= |all| - |inf| && all[idx] == inf[0]
  ensures result == (idx <= |all| - |inf| && (forall i: Int :: { inf[i] } 0 <= i && i < |inf| ==> inf[i] == all[i + idx]))
{
  (|all| < idx ? false : (idx == 0 ? method_Util_isPrefix__Sequence$Node$__Sequence$Node$(inf, all) : method_Util_isInfix__Sequence$Node$__Sequence$Node$__Integer(inf, all[1..], idx - 1)))
}

function method_Util_infixSuffixLemma__Sequence$Integer$__Sequence$Integer$__Sequence$Integer$__Sequence$Integer$__Integer(suff: Seq[Int], all: Seq[Int], taken: Seq[Int], remainder: Seq[Int], idx: Int): Bool
  requires 0 <= idx
  requires method_Util_isInfix__Sequence$Integer$__Sequence$Integer$__Integer(suff, all, idx)
  requires suff == taken ++ remainder
  ensures method_Util_isInfix__Sequence$Integer$__Sequence$Integer$__Integer(remainder, all, idx + |taken|)
  ensures result
{
  (0 < idx ? method_Util_infixSuffixLemma__Sequence$Integer$__Sequence$Integer$__Sequence$Integer$__Sequence$Integer$__Integer(suff, all[1..], taken, remainder, idx - 1) : (|taken| <= 0 ? suff == remainder && method_Util_isInfix__Sequence$Integer$__Sequence$Integer$__Integer(remainder, all, idx) : 0 < |suff| && 0 < |all| && method_Util_infixSuffixLemma__Sequence$Integer$__Sequence$Integer$__Sequence$Integer$__Sequence$Integer$__Integer(suff[1..], all[1..], taken[1..], remainder, idx)))
}

function method_Util_infixTailLemma__Sequence$Node$__Sequence$Node$__Integer(inf: Seq[Ref], all: Seq[Ref], idx: Int): Bool
  requires 0 <= idx
  requires method_Util_isInfix__Sequence$Node$__Sequence$Node$__Integer(inf, all, idx)
  requires 0 < |inf|
  ensures result
  ensures method_Util_isInfix__Sequence$Node$__Sequence$Node$__Integer(inf[1..], all, idx + 1)


function method_Util_infixAdditionLemma__Sequence$Integer$__Sequence$Integer$__Sequence$Integer$__Integer(inf1: Seq[Int], inf2: Seq[Int], all: Seq[Int], idx: Int): Bool
  requires 0 <= idx
  requires method_Util_isInfix__Sequence$Integer$__Sequence$Integer$__Integer(inf1, all, idx)
  requires method_Util_isInfix__Sequence$Integer$__Sequence$Integer$__Integer(inf2, all, idx + |inf1|)
  ensures result
  ensures method_Util_isInfix__Sequence$Integer$__Sequence$Integer$__Integer(inf1 ++ inf2, all, idx)


function method_Util_infixAdditionLemma__Sequence$Node$__Sequence$Node$__Sequence$Node$__Integer(inf1: Seq[Ref], inf2: Seq[Ref], all: Seq[Ref], idx: Int): Bool
  requires 0 <= idx
  requires method_Util_isInfix__Sequence$Node$__Sequence$Node$__Integer(inf1, all, idx)
  requires method_Util_isInfix__Sequence$Node$__Sequence$Node$__Integer(inf2, all, idx + |inf1|)
  ensures result
  ensures method_Util_isInfix__Sequence$Node$__Sequence$Node$__Integer(inf1 ++ inf2, all, idx)


function method_Util_sorted__Sequence$Integer$(s: Seq[Int]): Bool
{
  (forall i: Int, j: Int :: { s[j],s[i] } 0 <= i && i < |s| && (i < j && j < |s|) ==> s[i] <= s[j])
}

function method_Util_sortedTailLemma__Sequence$Integer$(s: Seq[Int]): Bool
  requires method_Util_sorted__Sequence$Integer$(s)
  ensures method_Util_sorted__Sequence$Integer$(s[1..])
{
  true
}

function method_Util_sortedLemma__Sequence$Integer$__Sequence$Integer$__Sequence$Integer$__Sequence$Integer$(all: Seq[Int], front: Seq[Int], back: Seq[Int], larger: Seq[Int]): Bool
  requires method_Util_sorted__Sequence$Integer$(all)
  requires all == front ++ back
  requires method_Util_smallerSeq__Sequence$Integer$__Sequence$Integer$(all, larger)
  ensures method_Util_sorted__Sequence$Integer$(back)
  ensures method_Util_smallerSeq__Sequence$Integer$__Sequence$Integer$(back, larger)
  ensures result


function method_Util_smallerSeq__Sequence$Integer$__Sequence$Integer$(smaller: Seq[Int], larger: Seq[Int]): Bool
{
  (forall i: Int, j: Int :: { larger[j],smaller[i] } 0 <= i && i < |smaller| && (0 <= j && j < |larger|) ==> smaller[i] <= larger[j])
}

function method_Util_toBag__Sequence$Node$(s: Seq[Ref]): Multiset[Ref]
  ensures |result| == |s|
  ensures (forall i: Int :: 0 <= i && i < |s| ==> 0 < ((s[i] in result)))
{
  method_Util_toBag__Sequence$Node$__Integer(s, |s|)
}

function method_Util_toBag__Sequence$Node$__Integer(s: Seq[Ref], maxIdx: Int): Multiset[Ref]
  requires 0 <= maxIdx && maxIdx <= |s|
  ensures |result| == maxIdx
  ensures (forall i: Int :: 0 <= i && i < maxIdx ==> 0 < ((s[i] in result)))
{
  method_Util_toBagFrom__Sequence$Node$__Integer__Integer(s, 0, maxIdx)
}

function method_Util_toBagFrom__Sequence$Node$__Integer__Integer(s: Seq[Ref], idx: Int, maxIdx: Int): Multiset[Ref]
  requires 0 <= idx
  requires 0 <= maxIdx && maxIdx <= |s|
  ensures idx <= maxIdx ==> |result| == maxIdx - idx
  ensures (forall i: Int :: idx <= i && i < maxIdx ==> 0 < ((s[i] in result)))
{
  (maxIdx <= idx ? Multiset[Ref]() : (Multiset(s[idx]) union method_Util_toBagFrom__Sequence$Node$__Integer__Integer(s, idx + 1, maxIdx)))
}

function method_Util_toBagPrefixLemma__Sequence$Node$__Sequence$Node$__Integer__Integer__Bag$Node$(pre: Seq[Ref], all: Seq[Ref], idx: Int, maxIdx: Int, asBag: Multiset[Ref]): Bool
  requires 0 <= idx
  requires idx <= maxIdx && maxIdx <= |pre|
  requires method_Util_toBagFrom__Sequence$Node$__Integer__Integer(pre, idx, maxIdx) == asBag
  requires method_Util_isPrefix__Sequence$Node$__Sequence$Node$(pre, all)
  ensures method_Util_toBagFrom__Sequence$Node$__Integer__Integer(all, idx, maxIdx) == asBag
  ensures result
{
  (idx < maxIdx ? pre[idx] == all[idx] && method_Util_toBagPrefixLemma__Sequence$Node$__Sequence$Node$__Integer__Integer__Bag$Node$(pre, all, idx + 1, maxIdx, (asBag setminus Multiset(pre[idx]))) : asBag == Multiset[Ref]())
}

function method_Util_toBagMaxIdxIncrLemma__Sequence$Node$__Integer__Integer__Bag$Node$(s: Seq[Ref], idx: Int, maxIdx: Int, asBag: Multiset[Ref]): Bool
  requires 0 <= idx
  requires idx <= maxIdx && maxIdx < |s|
  requires method_Util_toBagFrom__Sequence$Node$__Integer__Integer(s, idx, maxIdx) == asBag
  ensures method_Util_toBagFrom__Sequence$Node$__Integer__Integer(s, idx, maxIdx + 1) == (asBag union Multiset(s[maxIdx]))
  ensures result
{
  (idx < maxIdx ? method_Util_toBagMaxIdxIncrLemma__Sequence$Node$__Integer__Integer__Bag$Node$(s, idx + 1, maxIdx, (asBag setminus Multiset(s[idx]))) : asBag == Multiset[Ref]() && method_Util_toBagFrom__Sequence$Node$__Integer__Integer(s, idx, maxIdx + 1) == Multiset(s[maxIdx]))
}

function method_Tree_validTree__Node(globals: Ref, current: Ref): Bool
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
{
  method_Tree_validSubtree__Node(globals, current) && !method_Tree_getColor__Node(globals, current)
}

function method_Tree_validSubtree__Node(globals: Ref, current: Ref): Bool
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
  requires method_Tree_sortedCritEqualLemma__Node(globals, current)
{
  method_Tree_blackBalanced__Node(globals, current) && method_Tree_noDBlack__Node(globals, current) && method_Tree_noDoubleRed__Node(globals, current) && method_Tree_sorted__Node(globals, current)
}

function method_Tree_blackHeight__Node(globals: Ref, current: Ref): Int
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
  ensures 1 <= result
{
  (unfolding acc(method_Tree_tree_perm__Node(globals, current), wildcard) in (current == null ? 1 : (current.field_Node_dblackNull ? 2 : method_Tree_getBlacks__Node(globals, current) + (method_Tree_blackHeight__Node(globals, current.field_Node_right) < method_Tree_blackHeight__Node(globals, current.field_Node_left) ? method_Tree_blackHeight__Node(globals, current.field_Node_left) : method_Tree_blackHeight__Node(globals, current.field_Node_right)))))
}

function method_Tree_getBlacks__Node(globals: Ref, current: Ref): Int
  requires current != null ==> acc(current.field_Node_color, wildcard) && acc(current.field_Node_dblack, wildcard)
{
  (current == null ? 1 : (current.field_Node_color ? 0 : (current.field_Node_dblack ? 2 : 1)))
}

function method_Tree_isDBlack__Node(globals: Ref, current: Ref): Bool
  requires current != null ==> acc(current.field_Node_dblack, wildcard)
{
  current != null && current.field_Node_dblack
}

function method_Tree_blackBalanced__Node(globals: Ref, current: Ref): Bool
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
{
  (unfolding acc(method_Tree_tree_perm__Node(globals, current), wildcard) in (current == null ? true : method_Tree_blackHeight__Node(globals, current.field_Node_left) == method_Tree_blackHeight__Node(globals, current.field_Node_right) && method_Tree_blackBalanced__Node(globals, current.field_Node_left) && method_Tree_blackBalanced__Node(globals, current.field_Node_right)))
}

function method_Tree_noDBlack__Node(globals: Ref, current: Ref): Bool
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
{
  current != null ==> (unfolding acc(method_Tree_tree_perm__Node(globals, current), wildcard) in !method_Tree_isDBlack__Node(globals, current) && method_Tree_noDBlack__Node(globals, current.field_Node_left) && method_Tree_noDBlack__Node(globals, current.field_Node_right))
}

function method_Tree_dblackAtTop__Node(globals: Ref, current: Ref): Bool
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
{
  (unfolding acc(method_Tree_tree_perm__Node(globals, current), wildcard) in method_Tree_isDBlack__Node(globals, current) && method_Tree_noDBlack__Node(globals, current.field_Node_left) && method_Tree_noDBlack__Node(globals, current.field_Node_right))
}

function method_Tree_dblackAtLeft__Node(globals: Ref, current: Ref): Bool
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
{
  (unfolding acc(method_Tree_tree_perm__Node(globals, current), wildcard) in current != null && !method_Tree_isDBlack__Node(globals, current) && method_Tree_dblackAtTop__Node(globals, current.field_Node_left) && method_Tree_noDBlack__Node(globals, current.field_Node_right))
}

function method_Tree_dblackAtLeftLeft__Node(globals: Ref, current: Ref): Bool
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
{
  (unfolding acc(method_Tree_tree_perm__Node(globals, current), wildcard) in current != null && !method_Tree_isDBlack__Node(globals, current) && method_Tree_dblackAtLeft__Node(globals, current.field_Node_left) && method_Tree_noDBlack__Node(globals, current.field_Node_right))
}

function method_Tree_dblackAtRight__Node(globals: Ref, current: Ref): Bool
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
{
  (unfolding acc(method_Tree_tree_perm__Node(globals, current), wildcard) in current != null && !method_Tree_isDBlack__Node(globals, current) && method_Tree_noDBlack__Node(globals, current.field_Node_left) && method_Tree_dblackAtTop__Node(globals, current.field_Node_right))
}

function method_Tree_dblackAtRightRight__Node(globals: Ref, current: Ref): Bool
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
{
  (unfolding acc(method_Tree_tree_perm__Node(globals, current), wildcard) in current != null && !method_Tree_isDBlack__Node(globals, current) && method_Tree_noDBlack__Node(globals, current.field_Node_left) && method_Tree_dblackAtRight__Node(globals, current.field_Node_right))
}

function method_Tree_noDoubleRed__Node(globals: Ref, current: Ref): Bool
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
{
  current != null ==> (unfolding acc(method_Tree_tree_perm__Node(globals, current), wildcard) in (!method_Tree_getColor__Node(globals, current) || !method_Tree_getColor__Node(globals, current.field_Node_left) && !method_Tree_getColor__Node(globals, current.field_Node_right)) && method_Tree_noDoubleRed__Node(globals, current.field_Node_left) && method_Tree_noDoubleRed__Node(globals, current.field_Node_right))
}

function method_Tree_dbRedAtLeft__Node(globals: Ref, current: Ref): Bool
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
{
  current != null && (unfolding acc(method_Tree_tree_perm__Node(globals, current), wildcard) in method_Tree_getColor__Node(globals, current) && (method_Tree_getColor__Node(globals, current.field_Node_left) && !method_Tree_getColor__Node(globals, current.field_Node_right)) && method_Tree_noDoubleRed__Node(globals, current.field_Node_left) && method_Tree_noDoubleRed__Node(globals, current.field_Node_right))
}

function method_Tree_dbRedAtRight__Node(globals: Ref, current: Ref): Bool
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
{
  current != null && (unfolding acc(method_Tree_tree_perm__Node(globals, current), wildcard) in method_Tree_getColor__Node(globals, current) && (!method_Tree_getColor__Node(globals, current.field_Node_left) && method_Tree_getColor__Node(globals, current.field_Node_right)) && method_Tree_noDoubleRed__Node(globals, current.field_Node_left) && method_Tree_noDoubleRed__Node(globals, current.field_Node_right))
}

function method_Tree_toBag__Node(globals: Ref, current: Ref): Multiset[Int]
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
{
  (current == null ? Multiset[Int]() : (unfolding acc(method_Tree_tree_perm__Node(globals, current), wildcard) in (current.field_Node_dblackNull ? Multiset[Int]() : ((method_Tree_toBag__Node(globals, current.field_Node_left) union Multiset(current.field_Node_key)) union method_Tree_toBag__Node(globals, current.field_Node_right)))))
}

function method_Tree_subbag__Bag$Integer$__Bag$Integer$(b1: Multiset[Int], b2: Multiset[Int]): Bool
{
  (forall i: Int :: { (i in b1) } { (i in b2) } (i in b1) != 0 ==> ((i in b1)) <= ((i in b2)))
}

function method_Tree_toSeq__Node(globals: Ref, current: Ref): Seq[Ref]
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
{
  (current == null ? Seq[Ref]() : (unfolding acc(method_Tree_tree_perm__Node(globals, current), wildcard) in (current.field_Node_dblackNull ? Seq[Ref]() : method_Tree_toSeq__Node(globals, current.field_Node_left) ++ Seq(current) ++ method_Tree_toSeq__Node(globals, current.field_Node_right))))
}

function method_Tree_toSeqKeys__Node(globals: Ref, current: Ref): Seq[Int]
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
  ensures |result| == |method_Tree_toSeq__Node(globals, current)|
{
  (current == null ? Seq[Int]() : (unfolding acc(method_Tree_tree_perm__Node(globals, current), wildcard) in (current.field_Node_dblackNull ? Seq[Int]() : method_Tree_toSeqKeys__Node(globals, current.field_Node_left) ++ Seq(current.field_Node_key) ++ method_Tree_toSeqKeys__Node(globals, current.field_Node_right))))
}

function method_Tree_smaller__Bag$Integer$__Integer(b: Multiset[Int], max: Int): Bool
{
  (forall i: Int :: { (i in b) } (i in b) != 0 ==> i <= max)
}

function method_Tree_larger__Bag$Integer$__Integer(b: Multiset[Int], min: Int): Bool
{
  (forall i: Int :: { (i in b) } (i in b) != 0 ==> min <= i)
}

function method_Tree_larger__Bag$Integer$__Bag$Integer$(b1: Multiset[Int], b2: Multiset[Int]): Bool
{
  (forall i: Int :: { (i in b2) } (i in b2) != 0 ==> method_Tree_larger__Bag$Integer$__Integer(b1, i))
}

function method_Tree_sorted__Node(globals: Ref, current: Ref): Bool
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
{
  current != null ==> (unfolding acc(method_Tree_tree_perm__Node(globals, current), wildcard) in method_Tree_smaller__Bag$Integer$__Integer(method_Tree_toBag__Node(globals, current.field_Node_left), current.field_Node_key) && method_Tree_larger__Bag$Integer$__Integer(method_Tree_toBag__Node(globals, current.field_Node_right), current.field_Node_key) && method_Tree_sorted__Node(globals, current.field_Node_left) && method_Tree_sorted__Node(globals, current.field_Node_right))
}

function method_Tree_sortedKeySeq__Node(globals: Ref, current: Ref): Bool
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
{
  current != null ==> (unfolding acc(method_Tree_tree_perm__Node(globals, current), wildcard) in (forall i: Int :: { method_Tree_toSeqKeys__Node(globals, current.field_Node_left)[i] } 0 <= i && i < |method_Tree_toSeqKeys__Node(globals, current.field_Node_left)| ==> method_Tree_toSeqKeys__Node(globals, current.field_Node_left)[i] <= current.field_Node_key) && (forall i: Int :: { method_Tree_toSeqKeys__Node(globals, current.field_Node_right)[i] } 0 <= i && i < |method_Tree_toSeqKeys__Node(globals, current.field_Node_right)| ==> current.field_Node_key <= method_Tree_toSeqKeys__Node(globals, current.field_Node_right)[i]) && method_Tree_sortedKeySeq__Node(globals, current.field_Node_left) && method_Tree_sortedKeySeq__Node(globals, current.field_Node_right))
}

function method_Tree_sortedCritEqualLemma__Node(globals: Ref, current: Ref): Bool
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
  ensures result
  ensures method_Tree_sorted__Node(globals, current) == method_Tree_sortedKeySeq__Node(globals, current)


function method_Tree_getColor__Node(globals: Ref, node: Ref): Bool
  requires acc(method_Tree_tree_perm__Node(globals, node), wildcard)
{
  node != null && (unfolding acc(method_Tree_tree_perm__Node(globals, node), wildcard) in node.field_Node_color)
}

function method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(globals: Ref, current: Ref, oldColor: Bool, oldHeight: Int, oldBag: Multiset[Int]): Bool
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
{
  method_Tree_getColor__Node(globals, current) == oldColor && method_Tree_blackHeight__Node(globals, current) == oldHeight && method_Tree_toBag__Node(globals, current) == oldBag
}

function new_frac(x: Perm): frac
  requires 0 / 1 < x && x <= 1 / 1
  ensures frac_val(result) == x


function new_zfrac(x: Perm): zfrac
  requires 0 / 1 <= x && x <= 1 / 1
  ensures zfrac_val(result) == x


predicate method_ListListQueue_producer(diz: Ref, globals: Ref) {
  diz != null && (acc(diz.field_ListListQueue_filling, write) && acc(method_NodeList_list_perm__NodeList(globals, diz.field_ListListQueue_filling), write) && acc(diz.field_ListListQueue_allP, 1 / 2) && acc(diz.field_ListListQueue_keysP, 1 / 2) && acc(diz.field_ListListQueue_finalised, 1 / 2) && acc(diz.field_ListListQueue_maxKey, write) && acc(diz.field_ListListQueue_maxKeyBatches, 1 / 2) && method_NodeList_size__NodeList(globals, diz.field_ListListQueue_filling) < method_ListListQueue_maxLength() && (diz.field_ListListQueue_finalised ==> method_NodeList_size__NodeList(globals, diz.field_ListListQueue_filling) == 0) && |diz.field_ListListQueue_allP| == |diz.field_ListListQueue_keysP| && method_NodeList_sorted__NodeList(globals, diz.field_ListListQueue_filling) && method_Util_sorted__Sequence$Integer$(diz.field_ListListQueue_keysP) && diz.field_ListListQueue_maxKeyBatches <= diz.field_ListListQueue_maxKey && (let fillKeys == (method_NodeList_toSeqKeys__NodeList(globals, diz.field_ListListQueue_filling)) in (forall i: Int :: { fillKeys[i] } 0 <= i && i < |fillKeys| ==> diz.field_ListListQueue_maxKeyBatches <= fillKeys[i]) && (forall i: Int :: { fillKeys[i] } 0 <= i && i < |fillKeys| ==> fillKeys[i] <= diz.field_ListListQueue_maxKey)) && (forall i: Int :: { diz.field_ListListQueue_keysP[i] } 0 <= i && i < |diz.field_ListListQueue_keysP| ==> diz.field_ListListQueue_keysP[i] <= diz.field_ListListQueue_maxKeyBatches))
}

predicate method_ListListQueue_consumer(diz: Ref, globals: Ref) {
  diz != null && (acc(diz.field_ListListQueue_allC, 1 / 2) && acc(diz.field_ListListQueue_finalisedC, 1 / 2) && acc(diz.field_ListListQueue_keysC, 1 / 2) && acc(diz.field_ListListQueue_readHead, write) && acc(diz.field_ListListQueue_batchHead, 1 / 2) && acc(diz.field_ListListQueue_isLastBatch, write) && acc(diz.field_ListListQueue_curNLIterator, write) && (diz.field_ListListQueue_curNLIterator != null ==> acc(diz.field_ListListQueue_curNLIterator.field_NodeListIterator_current, write) && acc(method_NodeList_list_perm__NodeList(globals, diz.field_ListListQueue_curNLIterator.field_NodeListIterator_current), write) && method_NodeListIterator_sorted__NodeListIterator(globals, diz.field_ListListQueue_curNLIterator) && diz.field_ListListQueue_curNLIterator.field_NodeListIterator_current != null) && method_Util_sorted__Sequence$Integer$(diz.field_ListListQueue_keysC) && |diz.field_ListListQueue_allC| == |diz.field_ListListQueue_keysC| && 0 <= diz.field_ListListQueue_readHead && diz.field_ListListQueue_readHead <= |diz.field_ListListQueue_allC| && diz.field_ListListQueue_batchHead <= |diz.field_ListListQueue_allC| && diz.field_ListListQueue_isLastBatch == (diz.field_ListListQueue_batchHead == |diz.field_ListListQueue_allC| && diz.field_ListListQueue_finalisedC) && diz.field_ListListQueue_batchHead - diz.field_ListListQueue_readHead == |method_NodeListIterator_toSeq__NodeListIterator(globals, diz.field_ListListQueue_curNLIterator)| && method_Util_isInfix__Sequence$Node$__Sequence$Node$__Integer(method_NodeListIterator_toSeq__NodeListIterator(globals, diz.field_ListListQueue_curNLIterator), diz.field_ListListQueue_allC, diz.field_ListListQueue_readHead) && method_Util_isInfix__Sequence$Integer$__Sequence$Integer$__Integer(method_NodeListIterator_toSeqKeys__NodeListIterator(globals, diz.field_ListListQueue_curNLIterator), diz.field_ListListQueue_keysC, diz.field_ListListQueue_readHead))
}

predicate method_ListListQueue_lock_held(diz: Ref, globals: Ref) 

predicate method_ListListQueue_lock_invariant(diz: Ref, globals: Ref) {
  diz != null && (acc(diz.field_ListListQueue_batches, write) && acc(method_ListList_list_perm__ListList(globals, diz.field_ListListQueue_batches), write) && acc(diz.field_ListListQueue_allP, 1 / 2) && acc(diz.field_ListListQueue_allC, 1 / 2) && acc(diz.field_ListListQueue_keysP, 1 / 2) && acc(diz.field_ListListQueue_keysC, 1 / 2) && acc(diz.field_ListListQueue_finalised, 1 / 2) && acc(diz.field_ListListQueue_finalisedC, 1 / 2) && acc(diz.field_ListListQueue_batchHead, 1 / 2) && acc(diz.field_ListListQueue_maxKeyBatches, 1 / 2) && 0 <= diz.field_ListListQueue_batchHead && diz.field_ListListQueue_batchHead == |diz.field_ListListQueue_allP| - |method_ListList_toSeq__ListList(globals, diz.field_ListListQueue_batches)| && method_Util_isPrefix__Sequence$Node$__Sequence$Node$(diz.field_ListListQueue_allC, diz.field_ListListQueue_allP) && method_Util_isPrefix__Sequence$Integer$__Sequence$Integer$(diz.field_ListListQueue_keysC, diz.field_ListListQueue_keysP) && method_Util_sorted__Sequence$Integer$(diz.field_ListListQueue_keysP) && method_Util_sorted__Sequence$Integer$(diz.field_ListListQueue_keysC) && |diz.field_ListListQueue_allC| == |diz.field_ListListQueue_keysC| && |diz.field_ListListQueue_allP| == |diz.field_ListListQueue_keysP| && method_Util_isInfix__Sequence$Node$__Sequence$Node$__Integer(method_ListList_toSeq__ListList(globals, diz.field_ListListQueue_batches), diz.field_ListListQueue_allP, diz.field_ListListQueue_batchHead) && method_Util_isInfix__Sequence$Integer$__Sequence$Integer$__Integer(method_ListList_toSeqKeys__ListList(globals, diz.field_ListListQueue_batches), diz.field_ListListQueue_keysP, diz.field_ListListQueue_batchHead) && (diz.field_ListListQueue_finalisedC ==> diz.field_ListListQueue_finalised && diz.field_ListListQueue_allC == diz.field_ListListQueue_allP && diz.field_ListListQueue_keysC == diz.field_ListListQueue_keysP) && method_ListList_sorted__ListList(globals, diz.field_ListListQueue_batches))
}

predicate method_ListList_list_perm__ListList(globals: Ref, ll: Ref) {
  ll != null ==> acc(ll.field_ListList_nodeList, write) && acc(ll.field_ListList_next, write) && ll.field_ListList_nodeList != null && acc(method_NodeList_list_perm__NodeList(globals, ll.field_ListList_nodeList), write) && acc(method_ListList_list_perm__ListList(globals, ll.field_ListList_next), write)
}

predicate method_NodeList_list_perm__NodeList(globals: Ref, nl: Ref) {
  nl != null ==> acc(nl.field_NodeList_node, write) && acc(nl.field_NodeList_next, write) && nl.field_NodeList_node != null && (acc(nl.field_NodeList_node.field_Node_key, write) && acc(nl.field_NodeList_node.field_Node_left, write) && acc(nl.field_NodeList_node.field_Node_right, write) && acc(nl.field_NodeList_node.field_Node_color, write) && acc(nl.field_NodeList_node.field_Node_dblack, write) && acc(nl.field_NodeList_node.field_Node_dblackNull, write) && acc(globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE, wildcard) && globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE <= nl.field_NodeList_node.field_Node_key) && acc(method_NodeList_list_perm__NodeList(globals, nl.field_NodeList_next), write)
}

predicate method_Tree_tree_perm__Node(globals: Ref, current: Ref) {
  current != null ==> acc(current.field_Node_key, write) && acc(current.field_Node_left, write) && acc(current.field_Node_right, write) && acc(current.field_Node_color, write) && acc(current.field_Node_dblack, write) && acc(current.field_Node_dblackNull, write) && acc(globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE, wildcard) && globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE <= current.field_Node_key && acc(method_Tree_tree_perm__Node(globals, current.field_Node_left), write) && acc(method_Tree_tree_perm__Node(globals, current.field_Node_right), write) && (current.field_Node_dblackNull ==> current.field_Node_left == null && current.field_Node_right == null && !current.field_Node_color && current.field_Node_dblack) && (current.field_Node_dblack ==> !current.field_Node_color)
}

predicate Wand_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$_for_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(x_0: Ref, x_1: Ref, x_2: Ref, x_3: Ref, x_4: Ref, x_5: Ref, x_6: Bool, x_7: Int, x_8: Multiset[Int], x_9: Ref, x_10: Ref, x_11: Ref, x_12: Ref, x_13: Ref, x_14: Ref, x_15: Bool, x_16: Int, x_17: Multiset[Int]) 

method constructor_java_DOT_lang_DOT_Object_java_DOT_lang_DOT_Object(current_thread_id: Int, globals: Ref) returns (sys__result: Ref)
  requires 0 <= current_thread_id
  ensures sys__result != null
  ensures type_of(sys__result) == class_java_DOT_lang_DOT_Object()
{
  inhale false
}

method internal_java_DOT_lang_DOT_Object_java_DOT_lang_DOT_Object(current_thread_id: Int, globals: Ref) returns (sys__result: Ref)
  requires 0 <= current_thread_id
  ensures sys__result != null
  ensures type_of(sys__result) == class_java_DOT_lang_DOT_Object()
{
  inhale false
}

method constructor_java_DOT_lang_DOT_Number_java_DOT_lang_DOT_Number(current_thread_id: Int, globals: Ref) returns (sys__result: Ref)
  requires 0 <= current_thread_id
  ensures sys__result != null
  ensures type_of(sys__result) == class_java_DOT_lang_DOT_Number()
{
  inhale false
}

method internal_java_DOT_lang_DOT_Number_java_DOT_lang_DOT_Number(current_thread_id: Int, globals: Ref) returns (sys__result: Ref)
  requires 0 <= current_thread_id
  ensures sys__result != null
  ensures type_of(sys__result) == class_java_DOT_lang_DOT_Number()
{
  inhale false
}

method __contract_unsatisfiable__constructor_ListListQueue_ListListQueue(current_thread_id: Int, globals: Ref) returns (sys__result: Ref)
  requires 0 <= current_thread_id
  ensures sys__result != null
  ensures type_of(sys__result) == class_ListListQueue()
{
  var diz__1: Ref
  diz__1 := new(field_ListListQueue_curNLIterator, field_ListListQueue_batches, field_ListListQueue_filling, field_ListListQueue_isLastBatch, field_ListListQueue_finalised, field_ListListQueue_allP, field_ListListQueue_allC, field_ListListQueue_keysP, field_ListListQueue_keysC, field_ListListQueue_readHead, field_ListListQueue_batchHead, field_ListListQueue_finalisedC, field_ListListQueue_maxKey, field_ListListQueue_maxKeyBatches)
  inhale type_of(diz__1) == class_ListListQueue()
  inhale true && true
  // assert
  assert false
  inhale false
  label method_end___contract_unsatisfiable__constructor_ListListQueue_ListListQueue_0
  sys__result := diz__1
  // assert
  assert sys__result != null && type_of(sys__result) == class_ListListQueue()
  inhale false
}

method constructor_ListListQueue_ListListQueue(current_thread_id: Int, globals: Ref) returns (sys__result: Ref)
  requires 0 <= current_thread_id
  ensures sys__result != null
  ensures type_of(sys__result) == class_ListListQueue()
  ensures acc(method_ListListQueue_producer(sys__result, globals), write)
  ensures acc(method_ListListQueue_consumer(sys__result, globals), write)
  ensures acc(globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE, wildcard)
  ensures (unfolding acc(method_ListListQueue_producer(sys__result, globals), write) in sys__result.field_ListListQueue_filling == null && |sys__result.field_ListListQueue_allP| == 0 && !sys__result.field_ListListQueue_finalised && sys__result.field_ListListQueue_maxKey == globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE)
  ensures (unfolding acc(method_ListListQueue_consumer(sys__result, globals), write) in sys__result.field_ListListQueue_curNLIterator == null && |sys__result.field_ListListQueue_allC| == 0 && !sys__result.field_ListListQueue_finalisedC && sys__result.field_ListListQueue_readHead == 0 && !sys__result.field_ListListQueue_isLastBatch)
  ensures method_ListListQueue_toBagC(sys__result, globals) == Multiset[Ref]()
  ensures method_ListListQueue_toBagP(sys__result, globals) == Multiset[Ref]()
{
  var diz__2: Ref
  var __flatten_40__3: Seq[Ref]
  var __flatten_41__4: Seq[Ref]
  var __flatten_42__5: Seq[Ref]
  var __flatten_43__6: Seq[Ref]
  var __flatten_44__7: Seq[Int]
  var __flatten_45__8: Seq[Int]
  var __flatten_46__9: Seq[Int]
  var __flatten_47__10: Seq[Int]
  var __flatten_48__11: Int
  var __flatten_49__12: Int
  var __flatten_149__13: Seq[Ref]
  var __flatten_150__14: Seq[Ref]
  var __flatten_151__15: Seq[Int]
  var __flatten_152__16: Seq[Int]
  diz__2 := new(field_ListListQueue_curNLIterator, field_ListListQueue_batches, field_ListListQueue_filling, field_ListListQueue_isLastBatch, field_ListListQueue_finalised, field_ListListQueue_allP, field_ListListQueue_allC, field_ListListQueue_keysP, field_ListListQueue_keysC, field_ListListQueue_readHead, field_ListListQueue_batchHead, field_ListListQueue_finalisedC, field_ListListQueue_maxKey, field_ListListQueue_maxKeyBatches)
  inhale type_of(diz__2) == class_ListListQueue()
  diz__2.field_ListListQueue_curNLIterator := null
  diz__2.field_ListListQueue_batches := null
  diz__2.field_ListListQueue_filling := null
  diz__2.field_ListListQueue_finalised := false
  diz__2.field_ListListQueue_isLastBatch := false
  __flatten_149__13 := Seq[Ref]()
  __flatten_41__4 := __flatten_149__13
  __flatten_40__3 := __flatten_41__4
  diz__2.field_ListListQueue_allP := __flatten_40__3
  __flatten_150__14 := Seq[Ref]()
  __flatten_43__6 := __flatten_150__14
  __flatten_42__5 := __flatten_43__6
  diz__2.field_ListListQueue_allC := __flatten_42__5
  __flatten_151__15 := Seq[Int]()
  __flatten_45__8 := __flatten_151__15
  __flatten_44__7 := __flatten_45__8
  diz__2.field_ListListQueue_keysP := __flatten_44__7
  __flatten_152__16 := Seq[Int]()
  __flatten_47__10 := __flatten_152__16
  __flatten_46__9 := __flatten_47__10
  diz__2.field_ListListQueue_keysC := __flatten_46__9
  diz__2.field_ListListQueue_readHead := 0
  diz__2.field_ListListQueue_batchHead := 0
  diz__2.field_ListListQueue_finalisedC := false
  inhale acc(globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE, wildcard)
  __flatten_48__11 := globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE
  diz__2.field_ListListQueue_maxKey := __flatten_48__11
  __flatten_49__12 := diz__2.field_ListListQueue_maxKey
  diz__2.field_ListListQueue_maxKeyBatches := __flatten_49__12
  fold acc(method_ListListQueue_consumer(diz__2, globals), write)
  fold acc(method_NodeList_list_perm__NodeList(globals, diz__2.field_ListListQueue_filling), write)
  fold acc(method_ListListQueue_producer(diz__2, globals), write)
  fold acc(method_ListList_list_perm__ListList(globals, diz__2.field_ListListQueue_batches), write)
  fold acc(method_ListListQueue_lock_invariant(diz__2, globals), write)
  label method_end_constructor_ListListQueue_ListListQueue_1
  sys__result := diz__2
  // assert
  assert sys__result != null && type_of(sys__result) == class_ListListQueue() && acc(method_ListListQueue_producer(sys__result, globals), write) && acc(method_ListListQueue_consumer(sys__result, globals), write) && acc(globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE, wildcard) && (unfolding acc(method_ListListQueue_producer(sys__result, globals), write) in sys__result.field_ListListQueue_filling == null && |sys__result.field_ListListQueue_allP| == 0 && !sys__result.field_ListListQueue_finalised && sys__result.field_ListListQueue_maxKey == globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE) && (unfolding acc(method_ListListQueue_consumer(sys__result, globals), write) in sys__result.field_ListListQueue_curNLIterator == null && |sys__result.field_ListListQueue_allC| == 0 && !sys__result.field_ListListQueue_finalisedC && sys__result.field_ListListQueue_readHead == 0 && !sys__result.field_ListListQueue_isLastBatch) && method_ListListQueue_toBagC(sys__result, globals) == Multiset[Ref]() && method_ListListQueue_toBagP(sys__result, globals) == Multiset[Ref]()
  inhale false
}

method __contract_unsatisfiable__constructor_ListListQueue_ListListQueue__NodeListIterator(current_thread_id: Int, globals: Ref, it: Ref) returns (sys__result: Ref)
  requires 0 <= current_thread_id
  ensures sys__result != null
  ensures type_of(sys__result) == class_ListListQueue()
{
  var diz__17: Ref
  diz__17 := new(field_ListListQueue_curNLIterator, field_ListListQueue_batches, field_ListListQueue_filling, field_ListListQueue_isLastBatch, field_ListListQueue_finalised, field_ListListQueue_allP, field_ListListQueue_allC, field_ListListQueue_keysP, field_ListListQueue_keysC, field_ListListQueue_readHead, field_ListListQueue_batchHead, field_ListListQueue_finalisedC, field_ListListQueue_maxKey, field_ListListQueue_maxKeyBatches)
  inhale type_of(diz__17) == class_ListListQueue()
  inhale true && (it != null && (acc(it.field_NodeListIterator_current, write) && acc(method_NodeList_list_perm__NodeList(globals, it.field_NodeListIterator_current), write) && method_NodeListIterator_sorted__NodeListIterator(globals, it)) && it.field_NodeListIterator_current != null)
  // assert
  assert false
  inhale false
  label method_end___contract_unsatisfiable__constructor_ListListQueue_ListListQueue__NodeListIterator_2
  sys__result := diz__17
  // assert
  assert sys__result != null && type_of(sys__result) == class_ListListQueue()
  inhale false
}

method constructor_ListListQueue_ListListQueue__NodeListIterator(current_thread_id: Int, globals: Ref, it: Ref) returns (sys__result: Ref)
  requires 0 <= current_thread_id
  requires it != null
  requires acc(it.field_NodeListIterator_current, write)
  requires acc(method_NodeList_list_perm__NodeList(globals, it.field_NodeListIterator_current), write)
  requires method_NodeListIterator_sorted__NodeListIterator(globals, it)
  requires it.field_NodeListIterator_current != null
  ensures sys__result != null
  ensures type_of(sys__result) == class_ListListQueue()
  ensures acc(method_ListListQueue_consumer(sys__result, globals), write)
  ensures acc(method_ListListQueue_producer(sys__result, globals), write)
  ensures (unfolding acc(method_ListListQueue_producer(sys__result, globals), write) in sys__result.field_ListListQueue_finalised && sys__result.field_ListListQueue_allP == old(method_NodeListIterator_toSeq__NodeListIterator(globals, it)) && sys__result.field_ListListQueue_keysP == old(method_NodeListIterator_toSeqKeys__NodeListIterator(globals, it)))
  ensures (unfolding acc(method_ListListQueue_consumer(sys__result, globals), write) in sys__result.field_ListListQueue_readHead == 0 && sys__result.field_ListListQueue_curNLIterator == it && sys__result.field_ListListQueue_isLastBatch)
  ensures method_ListListQueue_toBagC(sys__result, globals) == Multiset[Ref]()
{
  var diz__18: Ref
  var __flatten_50__19: Seq[Ref]
  var __flatten_52__20: Seq[Ref]
  var __flatten_53__21: Seq[Int]
  var __flatten_55__22: Seq[Int]
  var __flatten_56__23: Int
  var __flatten_57__24: Int
  var __flatten_58__25: Int
  diz__18 := new(field_ListListQueue_curNLIterator, field_ListListQueue_batches, field_ListListQueue_filling, field_ListListQueue_isLastBatch, field_ListListQueue_finalised, field_ListListQueue_allP, field_ListListQueue_allC, field_ListListQueue_keysP, field_ListListQueue_keysC, field_ListListQueue_readHead, field_ListListQueue_batchHead, field_ListListQueue_finalisedC, field_ListListQueue_maxKey, field_ListListQueue_maxKeyBatches)
  inhale type_of(diz__18) == class_ListListQueue()
  diz__18.field_ListListQueue_curNLIterator := it
  diz__18.field_ListListQueue_batches := null
  diz__18.field_ListListQueue_filling := null
  diz__18.field_ListListQueue_finalised := true
  diz__18.field_ListListQueue_isLastBatch := true
  __flatten_50__19 := method_NodeListIterator_toSeq__NodeListIterator(globals, it)
  diz__18.field_ListListQueue_allP := __flatten_50__19
  __flatten_52__20 := diz__18.field_ListListQueue_allP
  diz__18.field_ListListQueue_allC := __flatten_52__20
  __flatten_53__21 := method_NodeListIterator_toSeqKeys__NodeListIterator(globals, it)
  diz__18.field_ListListQueue_keysP := __flatten_53__21
  __flatten_55__22 := diz__18.field_ListListQueue_keysP
  diz__18.field_ListListQueue_keysC := __flatten_55__22
  diz__18.field_ListListQueue_readHead := 0
  __flatten_56__23 := |diz__18.field_ListListQueue_allC|
  diz__18.field_ListListQueue_batchHead := __flatten_56__23
  diz__18.field_ListListQueue_finalisedC := true
  __flatten_57__24 := diz__18.field_ListListQueue_keysC[|diz__18.field_ListListQueue_keysC| - 1]
  diz__18.field_ListListQueue_maxKey := __flatten_57__24
  __flatten_58__25 := diz__18.field_ListListQueue_maxKey
  diz__18.field_ListListQueue_maxKeyBatches := __flatten_58__25
  fold acc(method_ListListQueue_consumer(diz__18, globals), write)
  fold acc(method_NodeList_list_perm__NodeList(globals, diz__18.field_ListListQueue_filling), write)
  fold acc(method_ListListQueue_producer(diz__18, globals), write)
  fold acc(method_ListList_list_perm__ListList(globals, diz__18.field_ListListQueue_batches), write)
  fold acc(method_ListListQueue_lock_invariant(diz__18, globals), write)
  label method_end_constructor_ListListQueue_ListListQueue__NodeListIterator_3
  sys__result := diz__18
  // assert
  assert sys__result != null && type_of(sys__result) == class_ListListQueue() && acc(method_ListListQueue_consumer(sys__result, globals), write) && acc(method_ListListQueue_producer(sys__result, globals), write) && (unfolding acc(method_ListListQueue_producer(sys__result, globals), write) in sys__result.field_ListListQueue_finalised && sys__result.field_ListListQueue_allP == old(method_NodeListIterator_toSeq__NodeListIterator(globals, it)) && sys__result.field_ListListQueue_keysP == old(method_NodeListIterator_toSeqKeys__NodeListIterator(globals, it))) && (unfolding acc(method_ListListQueue_consumer(sys__result, globals), write) in sys__result.field_ListListQueue_readHead == 0 && sys__result.field_ListListQueue_curNLIterator == it && sys__result.field_ListListQueue_isLastBatch) && method_ListListQueue_toBagC(sys__result, globals) == Multiset[Ref]()
  inhale false
}

method __contract_unsatisfiable__method_ListListQueue_append__Node(diz: Ref, current_thread_id: Int, globals: Ref, node: Ref)
  requires diz != null
  requires 0 <= current_thread_id
{
  inhale true && (acc(method_ListListQueue_producer(diz, globals), write) && (unfolding acc(method_ListListQueue_producer(diz, globals), write) in !diz.field_ListListQueue_finalised) && node != null && (acc(node.field_Node_key, write) && acc(node.field_Node_left, write) && acc(node.field_Node_right, write) && acc(node.field_Node_color, write) && acc(node.field_Node_dblack, write) && acc(node.field_Node_dblackNull, write) && acc(globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE, wildcard) && globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE <= node.field_Node_key) && (unfolding acc(method_ListListQueue_producer(diz, globals), write) in diz.field_ListListQueue_maxKey <= node.field_Node_key))
  // assert
  assert false
  inhale false
  label method_end___contract_unsatisfiable__method_ListListQueue_append__Node_4
}

method method_ListListQueue_append__Node(diz: Ref, current_thread_id: Int, globals: Ref, node: Ref)
  requires diz != null
  requires 0 <= current_thread_id
  requires acc(method_ListListQueue_producer(diz, globals), write)
  requires (unfolding acc(method_ListListQueue_producer(diz, globals), write) in !diz.field_ListListQueue_finalised)
  requires node != null
  requires acc(node.field_Node_key, write)
  requires acc(node.field_Node_left, write)
  requires acc(node.field_Node_right, write)
  requires acc(node.field_Node_color, write)
  requires acc(node.field_Node_dblack, write)
  requires acc(node.field_Node_dblackNull, write)
  requires acc(globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE, wildcard)
  requires globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE <= node.field_Node_key
  requires (unfolding acc(method_ListListQueue_producer(diz, globals), write) in diz.field_ListListQueue_maxKey <= node.field_Node_key)
  ensures acc(method_ListListQueue_producer(diz, globals), write)
  ensures (unfolding acc(method_ListListQueue_producer(diz, globals), write) in !diz.field_ListListQueue_finalised)
  ensures (unfolding acc(method_ListListQueue_producer(diz, globals), write) in diz.field_ListListQueue_maxKey == old(node.field_Node_key))
  ensures (unfolding acc(method_ListListQueue_producer(diz, globals), write) in diz.field_ListListQueue_allP ++ method_NodeList_toSeq__NodeList(globals, diz.field_ListListQueue_filling) == old((unfolding acc(method_ListListQueue_producer(diz, globals), write) in diz.field_ListListQueue_allP ++ method_NodeList_toSeq__NodeList(globals, diz.field_ListListQueue_filling))) ++ Seq(node))
  ensures method_ListListQueue_toBagP(diz, globals) == (old(method_ListListQueue_toBagP(diz, globals)) union Multiset(node))
  ensures (unfolding acc(method_ListListQueue_producer(diz, globals), write) in diz.field_ListListQueue_keysP ++ method_NodeList_toSeqKeys__NodeList(globals, diz.field_ListListQueue_filling) == old((unfolding acc(method_ListListQueue_producer(diz, globals), write) in diz.field_ListListQueue_keysP ++ method_NodeList_toSeqKeys__NodeList(globals, diz.field_ListListQueue_filling) ++ Seq(node.field_Node_key))))
{
  var __flatten_59__26: Int
  var __flatten_60__27: Ref
  var __flatten_63__28: Int
  var __flatten_64__29: Int
  var __flatten_158__30: frac
  unfold acc(method_ListListQueue_producer(diz, globals), write)
  __flatten_59__26 := node.field_Node_key
  diz.field_ListListQueue_maxKey := __flatten_59__26
  if (diz.field_ListListQueue_filling == null) {
    fold acc(method_NodeList_list_perm__NodeList(globals, null), write)
    __flatten_60__27 := constructor_NodeList_NodeList__Node__NodeList(current_thread_id, globals, node, null)
    diz.field_ListListQueue_filling := __flatten_60__27
  } else {
    method_NodeList_append__Node(diz.field_ListListQueue_filling, current_thread_id, globals, node)
  }
  // assert
  assert diz.field_ListListQueue_allP ++ method_NodeList_toSeq__NodeList(globals, diz.field_ListListQueue_filling) == old((unfolding acc(method_ListListQueue_producer(diz, globals), write) in diz.field_ListListQueue_allP ++ method_NodeList_toSeq__NodeList(globals, diz.field_ListListQueue_filling))) ++ Seq(node)
  // assert
  assert method_Util_isPrefix__Sequence$Node$__Sequence$Node$(old((unfolding acc(method_ListListQueue_producer(diz, globals), write) in diz.field_ListListQueue_allP ++ method_NodeList_toSeq__NodeList(globals, diz.field_ListListQueue_filling))), diz.field_ListListQueue_allP ++ method_NodeList_toSeq__NodeList(globals, diz.field_ListListQueue_filling))
  // assert
  assert method_Util_toBagPrefixLemma__Sequence$Node$__Sequence$Node$__Integer__Integer__Bag$Node$(old((unfolding acc(method_ListListQueue_producer(diz, globals), write) in diz.field_ListListQueue_allP ++ method_NodeList_toSeq__NodeList(globals, diz.field_ListListQueue_filling))), diz.field_ListListQueue_allP ++ method_NodeList_toSeq__NodeList(globals, diz.field_ListListQueue_filling), 0, |old((unfolding acc(method_ListListQueue_producer(diz, globals), write) in diz.field_ListListQueue_allP ++ method_NodeList_toSeq__NodeList(globals, diz.field_ListListQueue_filling)))|, old(method_ListListQueue_toBagP(diz, globals)))
  // assert
  assert method_Util_toBagMaxIdxIncrLemma__Sequence$Node$__Integer__Integer__Bag$Node$(diz.field_ListListQueue_allP ++ method_NodeList_toSeq__NodeList(globals, diz.field_ListListQueue_filling), 0, |old((unfolding acc(method_ListListQueue_producer(diz, globals), write) in diz.field_ListListQueue_allP ++ method_NodeList_toSeq__NodeList(globals, diz.field_ListListQueue_filling)))|, old(method_ListListQueue_toBagP(diz, globals)))
  __flatten_63__28 := method_ListListQueue_maxLength()
  __flatten_158__30 := new_frac(1 / 2)
  __flatten_64__29 := method_NodeList_length(diz.field_ListListQueue_filling, current_thread_id, globals, __flatten_158__30)
  if (__flatten_63__28 <= __flatten_64__29) {
    method_ListListQueue_submitFilling(diz, current_thread_id, globals)
  }
  fold acc(method_ListListQueue_producer(diz, globals), write)
  label method_end_method_ListListQueue_append__Node_5
}

method __contract_unsatisfiable__method_ListListQueue_submitFilling(diz: Ref, current_thread_id: Int, globals: Ref)
  requires diz != null
  requires 0 <= current_thread_id
{
  inhale true && (acc(diz.field_ListListQueue_finalised, 1 / 2) && acc(diz.field_ListListQueue_filling, write) && acc(diz.field_ListListQueue_allP, 1 / 2) && acc(diz.field_ListListQueue_keysP, 1 / 2) && acc(diz.field_ListListQueue_maxKey, 1 / 2) && acc(diz.field_ListListQueue_maxKeyBatches, 1 / 2) && acc(method_NodeList_list_perm__NodeList(globals, diz.field_ListListQueue_filling), write) && diz.field_ListListQueue_maxKeyBatches <= diz.field_ListListQueue_maxKey && !diz.field_ListListQueue_finalised && (forall i__31: Int :: { diz.field_ListListQueue_keysP[i__31] } 0 <= i__31 && i__31 < |diz.field_ListListQueue_keysP| ==> diz.field_ListListQueue_keysP[i__31] <= diz.field_ListListQueue_maxKeyBatches) && diz.field_ListListQueue_filling != null && method_Util_sorted__Sequence$Integer$(diz.field_ListListQueue_keysP) && method_NodeList_sorted__NodeList(globals, diz.field_ListListQueue_filling) && (let newKeys__32 == (method_NodeList_toSeqKeys__NodeList(globals, diz.field_ListListQueue_filling)) in (forall i__33: Int :: { newKeys__32[i__33] } 0 <= i__33 && i__33 < |newKeys__32| ==> diz.field_ListListQueue_maxKeyBatches <= newKeys__32[i__33]) && (forall i__34: Int :: { newKeys__32[i__34] } 0 <= i__34 && i__34 < |newKeys__32| ==> newKeys__32[i__34] <= diz.field_ListListQueue_maxKey)))
  // assert
  assert false
  inhale false
  label method_end___contract_unsatisfiable__method_ListListQueue_submitFilling_6
}

method method_ListListQueue_submitFilling(diz: Ref, current_thread_id: Int, globals: Ref)
  requires diz != null
  requires 0 <= current_thread_id
  requires acc(diz.field_ListListQueue_finalised, 1 / 2)
  requires acc(diz.field_ListListQueue_filling, write)
  requires acc(diz.field_ListListQueue_allP, 1 / 2)
  requires acc(diz.field_ListListQueue_keysP, 1 / 2)
  requires acc(diz.field_ListListQueue_maxKey, 1 / 2)
  requires acc(diz.field_ListListQueue_maxKeyBatches, 1 / 2)
  requires acc(method_NodeList_list_perm__NodeList(globals, diz.field_ListListQueue_filling), write)
  requires diz.field_ListListQueue_maxKeyBatches <= diz.field_ListListQueue_maxKey
  requires !diz.field_ListListQueue_finalised
  requires (forall i: Int :: { diz.field_ListListQueue_keysP[i] } 0 <= i && i < |diz.field_ListListQueue_keysP| ==> diz.field_ListListQueue_keysP[i] <= diz.field_ListListQueue_maxKeyBatches)
  requires diz.field_ListListQueue_filling != null
  requires method_Util_sorted__Sequence$Integer$(diz.field_ListListQueue_keysP)
  requires method_NodeList_sorted__NodeList(globals, diz.field_ListListQueue_filling)
  requires (let newKeys == (method_NodeList_toSeqKeys__NodeList(globals, diz.field_ListListQueue_filling)) in (forall i: Int :: { newKeys[i] } 0 <= i && i < |newKeys| ==> diz.field_ListListQueue_maxKeyBatches <= newKeys[i]) && (forall i: Int :: { newKeys[i] } 0 <= i && i < |newKeys| ==> newKeys[i] <= diz.field_ListListQueue_maxKey))
  ensures acc(diz.field_ListListQueue_finalised, 1 / 2)
  ensures acc(diz.field_ListListQueue_filling, write)
  ensures acc(diz.field_ListListQueue_allP, 1 / 2)
  ensures acc(diz.field_ListListQueue_keysP, 1 / 2)
  ensures acc(diz.field_ListListQueue_maxKey, 1 / 2)
  ensures acc(diz.field_ListListQueue_maxKeyBatches, 1 / 2)
  ensures acc(method_NodeList_list_perm__NodeList(globals, diz.field_ListListQueue_filling), write)
  ensures diz.field_ListListQueue_maxKeyBatches <= diz.field_ListListQueue_maxKey
  ensures !diz.field_ListListQueue_finalised
  ensures (forall i: Int :: { diz.field_ListListQueue_keysP[i] } 0 <= i && i < |diz.field_ListListQueue_keysP| ==> diz.field_ListListQueue_keysP[i] <= diz.field_ListListQueue_maxKeyBatches)
  ensures diz.field_ListListQueue_filling == null
  ensures diz.field_ListListQueue_allP == old(diz.field_ListListQueue_allP) ++ old(method_NodeList_toSeq__NodeList(globals, diz.field_ListListQueue_filling))
  ensures diz.field_ListListQueue_keysP == old(diz.field_ListListQueue_keysP) ++ old(method_NodeList_toSeqKeys__NodeList(globals, diz.field_ListListQueue_filling))
  ensures method_Util_toBag__Sequence$Node$(diz.field_ListListQueue_allP ++ method_NodeList_toSeq__NodeList(globals, diz.field_ListListQueue_filling)) == old(method_Util_toBag__Sequence$Node$(diz.field_ListListQueue_allP ++ method_NodeList_toSeq__NodeList(globals, diz.field_ListListQueue_filling)))
  ensures method_Util_sorted__Sequence$Integer$(diz.field_ListListQueue_keysP)
{
  var sys__exc__35: Ref
  var __sync_0__36: Ref
  var __flatten_67__37: Seq[Ref]
  var __flatten_68__38: Seq[Int]
  var __flatten_69__39: Seq[Int]
  var __flatten_70__40: Int
  var __flatten_71__41: Ref
  var old__sys_exc_10__42: Ref
  var newSeq__43: Seq[Ref]
  sys__exc__35 := null
  __sync_0__36 := diz
  inhale acc(method_ListListQueue_lock_invariant(__sync_0__36, globals), write)
  unfold acc(method_ListListQueue_lock_invariant(__sync_0__36, globals), write)
  inhale acc(method_ListListQueue_lock_held(__sync_0__36, globals), write)
  old__sys_exc_10__42 := sys__exc__35
  inhale acc(method_ListListQueue_lock_invariant(diz, globals), write)
  unfold acc(method_ListListQueue_lock_invariant(diz, globals), write)
  newSeq__43 := method_NodeList_toSeq__NodeList(globals, diz.field_ListListQueue_filling)
  __flatten_67__37 := diz.field_ListListQueue_allP ++ newSeq__43
  diz.field_ListListQueue_allP := __flatten_67__37
  __flatten_69__39 := method_NodeList_toSeqKeys__NodeList(globals, diz.field_ListListQueue_filling)
  __flatten_68__38 := diz.field_ListListQueue_keysP ++ __flatten_69__39
  diz.field_ListListQueue_keysP := __flatten_68__38
  __flatten_70__40 := diz.field_ListListQueue_maxKey
  diz.field_ListListQueue_maxKeyBatches := __flatten_70__40
  // assert
  assert method_Util_prefixExtensionLemma__Sequence$Node$__Sequence$Node$__Sequence$Node$__Sequence$Node$(diz.field_ListListQueue_allC, old(diz.field_ListListQueue_allP), newSeq__43, diz.field_ListListQueue_allP)
  // assert
  assert method_ListList_seqSizeLemma__ListList(globals, diz.field_ListListQueue_batches)
  if (diz.field_ListListQueue_batches == null) {
    __flatten_71__41 := constructor_ListList_ListList__NodeList(current_thread_id, globals, diz.field_ListListQueue_filling)
    diz.field_ListListQueue_batches := __flatten_71__41
  } else {
    method_ListList_append__NodeList(diz.field_ListListQueue_batches, current_thread_id, globals, diz.field_ListListQueue_filling)
  }
  // assert
  assert !diz.field_ListListQueue_finalised
  diz.field_ListListQueue_filling := null
  fold acc(method_NodeList_list_perm__NodeList(globals, diz.field_ListListQueue_filling), write)
  fold acc(method_ListListQueue_lock_invariant(diz, globals), write)
  goto finally_8
  label finally_8
  exhale acc(method_ListListQueue_lock_held(__sync_0__36, globals), write)
  fold acc(method_ListListQueue_lock_invariant(__sync_0__36, globals), write)
  exhale acc(method_ListListQueue_lock_invariant(__sync_0__36, globals), write)
  if (sys__exc__35 != old__sys_exc_10__42) {
    goto method_end_method_ListListQueue_submitFilling_7
  }
  goto try_end_9
  label try_end_9
  label method_end_method_ListListQueue_submitFilling_7
  // assert
  assert sys__exc__35 == null
}

method __contract_unsatisfiable__method_ListListQueue_finalise(diz: Ref, current_thread_id: Int, globals: Ref)
  requires diz != null
  requires 0 <= current_thread_id
{
  inhale true && (acc(method_ListListQueue_producer(diz, globals), write) && (unfolding acc(method_ListListQueue_producer(diz, globals), write) in !diz.field_ListListQueue_finalised))
  // assert
  assert false
  inhale false
  label method_end___contract_unsatisfiable__method_ListListQueue_finalise_11
}

method method_ListListQueue_finalise(diz: Ref, current_thread_id: Int, globals: Ref)
  requires diz != null
  requires 0 <= current_thread_id
  requires acc(method_ListListQueue_producer(diz, globals), write)
  requires (unfolding acc(method_ListListQueue_producer(diz, globals), write) in !diz.field_ListListQueue_finalised)
  ensures acc(method_ListListQueue_producer(diz, globals), write)
  ensures (unfolding acc(method_ListListQueue_producer(diz, globals), write) in diz.field_ListListQueue_finalised)
  ensures (unfolding acc(method_ListListQueue_producer(diz, globals), write) in diz.field_ListListQueue_allP == old((unfolding acc(method_ListListQueue_producer(diz, globals), write) in diz.field_ListListQueue_allP ++ method_NodeList_toSeq__NodeList(globals, diz.field_ListListQueue_filling))))
  ensures (unfolding acc(method_ListListQueue_producer(diz, globals), write) in diz.field_ListListQueue_keysP == old((unfolding acc(method_ListListQueue_producer(diz, globals), write) in diz.field_ListListQueue_keysP ++ method_NodeList_toSeqKeys__NodeList(globals, diz.field_ListListQueue_filling))))
  ensures method_ListListQueue_toBagP(diz, globals) == old(method_ListListQueue_toBagP(diz, globals))
{
  unfold acc(method_ListListQueue_producer(diz, globals), write)
  if (diz.field_ListListQueue_filling != null) {
    method_ListListQueue_submitFilling(diz, current_thread_id, globals)
  }
  inhale acc(method_ListListQueue_lock_invariant(diz, globals), write)
  unfold acc(method_ListListQueue_lock_invariant(diz, globals), write)
  diz.field_ListListQueue_finalised := true
  fold acc(method_ListListQueue_lock_invariant(diz, globals), write)
  fold acc(method_ListListQueue_producer(diz, globals), write)
  label method_end_method_ListListQueue_finalise_12
}

method __contract_unsatisfiable__method_ListListQueue_hasNext(diz: Ref, current_thread_id: Int, globals: Ref) returns (sys__result: Bool)
  requires diz != null
  requires 0 <= current_thread_id
{
  inhale true && acc(method_ListListQueue_consumer(diz, globals), write)
  // assert
  assert false
  inhale false
  label method_end___contract_unsatisfiable__method_ListListQueue_hasNext_13
}

method method_ListListQueue_hasNext(diz: Ref, current_thread_id: Int, globals: Ref) returns (sys__result: Bool)
  requires diz != null
  requires 0 <= current_thread_id
  requires acc(method_ListListQueue_consumer(diz, globals), write)
  ensures acc(method_ListListQueue_consumer(diz, globals), write)
  ensures (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead)))
  ensures method_Util_isPrefix__Sequence$Node$__Sequence$Node$(old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC)), (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC))
  ensures method_Util_isPrefix__Sequence$Integer$__Sequence$Integer$(old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC)), (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC))
  ensures method_ListListQueue_toBagC(diz, globals) == old(method_ListListQueue_toBagC(diz, globals))
  ensures sys__result ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead < |diz.field_ListListQueue_allC| && diz.field_ListListQueue_readHead < |diz.field_ListListQueue_keysC|)
  ensures !sys__result ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_isLastBatch && diz.field_ListListQueue_curNLIterator == null)
{
  var sys__local__result__44: Bool
  var __flatten_75__45: Bool
  var res__46: Bool
  unfold acc(method_ListListQueue_consumer(diz, globals), write)
  if (diz.field_ListListQueue_curNLIterator == null) {
    if (diz.field_ListListQueue_isLastBatch) {
      fold acc(method_ListListQueue_consumer(diz, globals), write)
      sys__local__result__44 := false
      // assert
      assert acc(method_ListListQueue_consumer(diz, globals), write) && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead))) && method_Util_isPrefix__Sequence$Node$__Sequence$Node$(old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC)), (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC)) && method_Util_isPrefix__Sequence$Integer$__Sequence$Integer$(old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC)), (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC)) && method_ListListQueue_toBagC(diz, globals) == old(method_ListListQueue_toBagC(diz, globals)) && (sys__local__result__44 ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead < |diz.field_ListListQueue_allC| && diz.field_ListListQueue_readHead < |diz.field_ListListQueue_keysC|)) && (!sys__local__result__44 ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_isLastBatch && diz.field_ListListQueue_curNLIterator == null))
      goto __return_hasNext
    }
    fold acc(method_ListListQueue_consumer(diz, globals), write)
    __flatten_75__45 := method_ListListQueue_getBatch(diz, current_thread_id, globals)
    unfold acc(method_ListListQueue_consumer(diz, globals), write)
  }
  res__46 := diz.field_ListListQueue_curNLIterator != null
  fold acc(method_ListListQueue_consumer(diz, globals), write)
  sys__local__result__44 := res__46
  // assert
  assert acc(method_ListListQueue_consumer(diz, globals), write) && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead))) && method_Util_isPrefix__Sequence$Node$__Sequence$Node$(old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC)), (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC)) && method_Util_isPrefix__Sequence$Integer$__Sequence$Integer$(old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC)), (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC)) && method_ListListQueue_toBagC(diz, globals) == old(method_ListListQueue_toBagC(diz, globals)) && (sys__local__result__44 ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead < |diz.field_ListListQueue_allC| && diz.field_ListListQueue_readHead < |diz.field_ListListQueue_keysC|)) && (!sys__local__result__44 ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_isLastBatch && diz.field_ListListQueue_curNLIterator == null))
  goto __return_hasNext
  label __return_hasNext
  sys__result := sys__local__result__44
  // assert
  assert acc(method_ListListQueue_consumer(diz, globals), write) && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead))) && method_Util_isPrefix__Sequence$Node$__Sequence$Node$(old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC)), (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC)) && method_Util_isPrefix__Sequence$Integer$__Sequence$Integer$(old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC)), (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC)) && method_ListListQueue_toBagC(diz, globals) == old(method_ListListQueue_toBagC(diz, globals)) && (sys__result ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead < |diz.field_ListListQueue_allC| && diz.field_ListListQueue_readHead < |diz.field_ListListQueue_keysC|)) && (!sys__result ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_isLastBatch && diz.field_ListListQueue_curNLIterator == null))
  inhale false
  label method_end_method_ListListQueue_hasNext_14
}

method __contract_unsatisfiable__method_ListListQueue_getNext(diz: Ref, current_thread_id: Int, globals: Ref) returns (sys__result: Ref)
  requires diz != null
  requires 0 <= current_thread_id
{
  inhale true && acc(method_ListListQueue_consumer(diz, globals), write)
  // assert
  assert false
  inhale false
  label method_end___contract_unsatisfiable__method_ListListQueue_getNext_15
}

method method_ListListQueue_getNext(diz: Ref, current_thread_id: Int, globals: Ref) returns (sys__result: Ref)
  requires diz != null
  requires 0 <= current_thread_id
  requires acc(method_ListListQueue_consumer(diz, globals), write)
  ensures acc(method_ListListQueue_consumer(diz, globals), write)
  ensures old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_finalisedC)) ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_finalisedC && old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in |diz.field_ListListQueue_allC|)) == |diz.field_ListListQueue_allC|)
  ensures method_Util_isPrefix__Sequence$Node$__Sequence$Node$(old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC)), (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC))
  ensures method_Util_isPrefix__Sequence$Integer$__Sequence$Integer$(old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC)), (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC))
  ensures sys__result != null ==> acc(sys__result.field_Node_key, write) && acc(sys__result.field_Node_left, write) && acc(sys__result.field_Node_right, write) && acc(sys__result.field_Node_color, write) && acc(sys__result.field_Node_dblack, write) && acc(sys__result.field_Node_dblackNull, write) && acc(globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE, wildcard) && globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE <= sys__result.field_Node_key
  ensures sys__result != null ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead)) + 1)
  ensures sys__result != null ==> sys__result == (let idx == (old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead))) in (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC[idx]))
  ensures sys__result != null ==> sys__result.field_Node_key == (let idx == (old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead))) in (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC[idx]))
  ensures sys__result != null ==> method_ListListQueue_toBagC(diz, globals) == (old(method_ListListQueue_toBagC(diz, globals)) union Multiset(sys__result))
  ensures sys__result == null ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_isLastBatch && diz.field_ListListQueue_curNLIterator == null) && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead)) && |diz.field_ListListQueue_allC| == diz.field_ListListQueue_readHead)
  ensures sys__result == null ==> method_ListListQueue_toBagC(diz, globals) == old(method_ListListQueue_toBagC(diz, globals))
{
  var sys__local__result__47: Ref
  var __flatten_76__48: Bool
  var res__49: Ref
  var __flatten_78__50: Int
  var __flatten_79__51: Bool
  var __flatten_169__52: frac
  unfold acc(method_ListListQueue_consumer(diz, globals), write)
  if (diz.field_ListListQueue_curNLIterator == null) {
    if (diz.field_ListListQueue_isLastBatch) {
      // assert
      assert diz.field_ListListQueue_allC == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC))
      // assert
      assert method_Util_isPrefix__Sequence$Node$__Sequence$Node$(old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC)), diz.field_ListListQueue_allC)
      fold acc(method_ListListQueue_consumer(diz, globals), write)
      sys__local__result__47 := null
      // assert
      assert acc(method_ListListQueue_consumer(diz, globals), write) && (old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_finalisedC)) ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_finalisedC && old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in |diz.field_ListListQueue_allC|)) == |diz.field_ListListQueue_allC|)) && method_Util_isPrefix__Sequence$Node$__Sequence$Node$(old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC)), (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC)) && method_Util_isPrefix__Sequence$Integer$__Sequence$Integer$(old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC)), (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC)) && (sys__local__result__47 != null ==> acc(sys__local__result__47.field_Node_key, write) && acc(sys__local__result__47.field_Node_left, write) && acc(sys__local__result__47.field_Node_right, write) && acc(sys__local__result__47.field_Node_color, write) && acc(sys__local__result__47.field_Node_dblack, write) && acc(sys__local__result__47.field_Node_dblackNull, write) && acc(globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE, wildcard) && globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE <= sys__local__result__47.field_Node_key) && (sys__local__result__47 != null ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead)) + 1)) && (sys__local__result__47 != null ==> sys__local__result__47 == (let idx__53 == (old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead))) in (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC[idx__53]))) && (sys__local__result__47 != null ==> sys__local__result__47.field_Node_key == (let idx__54 == (old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead))) in (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC[idx__54]))) && (sys__local__result__47 != null ==> method_ListListQueue_toBagC(diz, globals) == (old(method_ListListQueue_toBagC(diz, globals)) union Multiset(sys__local__result__47))) && (sys__local__result__47 == null ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_isLastBatch && diz.field_ListListQueue_curNLIterator == null) && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead)) && |diz.field_ListListQueue_allC| == diz.field_ListListQueue_readHead)) && (sys__local__result__47 == null ==> method_ListListQueue_toBagC(diz, globals) == old(method_ListListQueue_toBagC(diz, globals)))
      goto __return_getNext
    }
    fold acc(method_ListListQueue_consumer(diz, globals), write)
    __flatten_76__48 := method_ListListQueue_getBatch(diz, current_thread_id, globals)
    if (!__flatten_76__48) {
      unfold acc(method_ListListQueue_consumer(diz, globals), write)
      // assert
      assert diz.field_ListListQueue_allC == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC))
      // assert
      assert method_Util_isPrefix__Sequence$Node$__Sequence$Node$(old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC)), diz.field_ListListQueue_allC)
      fold acc(method_ListListQueue_consumer(diz, globals), write)
      sys__local__result__47 := null
      // assert
      assert acc(method_ListListQueue_consumer(diz, globals), write) && (old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_finalisedC)) ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_finalisedC && old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in |diz.field_ListListQueue_allC|)) == |diz.field_ListListQueue_allC|)) && method_Util_isPrefix__Sequence$Node$__Sequence$Node$(old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC)), (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC)) && method_Util_isPrefix__Sequence$Integer$__Sequence$Integer$(old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC)), (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC)) && (sys__local__result__47 != null ==> acc(sys__local__result__47.field_Node_key, write) && acc(sys__local__result__47.field_Node_left, write) && acc(sys__local__result__47.field_Node_right, write) && acc(sys__local__result__47.field_Node_color, write) && acc(sys__local__result__47.field_Node_dblack, write) && acc(sys__local__result__47.field_Node_dblackNull, write) && acc(globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE, wildcard) && globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE <= sys__local__result__47.field_Node_key) && (sys__local__result__47 != null ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead)) + 1)) && (sys__local__result__47 != null ==> sys__local__result__47 == (let idx__55 == (old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead))) in (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC[idx__55]))) && (sys__local__result__47 != null ==> sys__local__result__47.field_Node_key == (let idx__56 == (old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead))) in (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC[idx__56]))) && (sys__local__result__47 != null ==> method_ListListQueue_toBagC(diz, globals) == (old(method_ListListQueue_toBagC(diz, globals)) union Multiset(sys__local__result__47))) && (sys__local__result__47 == null ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_isLastBatch && diz.field_ListListQueue_curNLIterator == null) && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead)) && |diz.field_ListListQueue_allC| == diz.field_ListListQueue_readHead)) && (sys__local__result__47 == null ==> method_ListListQueue_toBagC(diz, globals) == old(method_ListListQueue_toBagC(diz, globals)))
      goto __return_getNext
    }
    unfold acc(method_ListListQueue_consumer(diz, globals), write)
  }
  // assert
  assert method_Util_infixTailLemma__Sequence$Node$__Sequence$Node$__Integer(method_NodeListIterator_toSeq__NodeListIterator(globals, diz.field_ListListQueue_curNLIterator), diz.field_ListListQueue_allC, diz.field_ListListQueue_readHead)
  res__49 := method_NodeListIterator_getNext(diz.field_ListListQueue_curNLIterator, current_thread_id, globals)
  // assert
  assert method_Util_toBagMaxIdxIncrLemma__Sequence$Node$__Integer__Integer__Bag$Node$(diz.field_ListListQueue_allC, 0, diz.field_ListListQueue_readHead, old(method_ListListQueue_toBagC(diz, globals)))
  __flatten_78__50 := diz.field_ListListQueue_readHead + 1
  diz.field_ListListQueue_readHead := __flatten_78__50
  __flatten_169__52 := new_frac(1 / 2)
  __flatten_79__51 := method_NodeListIterator_hasNext(diz.field_ListListQueue_curNLIterator, current_thread_id, globals, __flatten_169__52)
  if (!__flatten_79__51) {
    diz.field_ListListQueue_curNLIterator := null
  }
  fold acc(method_ListListQueue_consumer(diz, globals), write)
  sys__local__result__47 := res__49
  // assert
  assert acc(method_ListListQueue_consumer(diz, globals), write) && (old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_finalisedC)) ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_finalisedC && old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in |diz.field_ListListQueue_allC|)) == |diz.field_ListListQueue_allC|)) && method_Util_isPrefix__Sequence$Node$__Sequence$Node$(old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC)), (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC)) && method_Util_isPrefix__Sequence$Integer$__Sequence$Integer$(old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC)), (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC)) && (sys__local__result__47 != null ==> acc(sys__local__result__47.field_Node_key, write) && acc(sys__local__result__47.field_Node_left, write) && acc(sys__local__result__47.field_Node_right, write) && acc(sys__local__result__47.field_Node_color, write) && acc(sys__local__result__47.field_Node_dblack, write) && acc(sys__local__result__47.field_Node_dblackNull, write) && acc(globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE, wildcard) && globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE <= sys__local__result__47.field_Node_key) && (sys__local__result__47 != null ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead)) + 1)) && (sys__local__result__47 != null ==> sys__local__result__47 == (let idx__57 == (old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead))) in (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC[idx__57]))) && (sys__local__result__47 != null ==> sys__local__result__47.field_Node_key == (let idx__58 == (old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead))) in (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC[idx__58]))) && (sys__local__result__47 != null ==> method_ListListQueue_toBagC(diz, globals) == (old(method_ListListQueue_toBagC(diz, globals)) union Multiset(sys__local__result__47))) && (sys__local__result__47 == null ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_isLastBatch && diz.field_ListListQueue_curNLIterator == null) && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead)) && |diz.field_ListListQueue_allC| == diz.field_ListListQueue_readHead)) && (sys__local__result__47 == null ==> method_ListListQueue_toBagC(diz, globals) == old(method_ListListQueue_toBagC(diz, globals)))
  goto __return_getNext
  label __return_getNext
  sys__result := sys__local__result__47
  // assert
  assert acc(method_ListListQueue_consumer(diz, globals), write) && (old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_finalisedC)) ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_finalisedC && old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in |diz.field_ListListQueue_allC|)) == |diz.field_ListListQueue_allC|)) && method_Util_isPrefix__Sequence$Node$__Sequence$Node$(old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC)), (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC)) && method_Util_isPrefix__Sequence$Integer$__Sequence$Integer$(old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC)), (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC)) && (sys__result != null ==> acc(sys__result.field_Node_key, write) && acc(sys__result.field_Node_left, write) && acc(sys__result.field_Node_right, write) && acc(sys__result.field_Node_color, write) && acc(sys__result.field_Node_dblack, write) && acc(sys__result.field_Node_dblackNull, write) && acc(globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE, wildcard) && globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE <= sys__result.field_Node_key) && (sys__result != null ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead)) + 1)) && (sys__result != null ==> sys__result == (let idx__59 == (old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead))) in (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC[idx__59]))) && (sys__result != null ==> sys__result.field_Node_key == (let idx__60 == (old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead))) in (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC[idx__60]))) && (sys__result != null ==> method_ListListQueue_toBagC(diz, globals) == (old(method_ListListQueue_toBagC(diz, globals)) union Multiset(sys__result))) && (sys__result == null ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_isLastBatch && diz.field_ListListQueue_curNLIterator == null) && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead)) && |diz.field_ListListQueue_allC| == diz.field_ListListQueue_readHead)) && (sys__result == null ==> method_ListListQueue_toBagC(diz, globals) == old(method_ListListQueue_toBagC(diz, globals)))
  inhale false
  label method_end_method_ListListQueue_getNext_16
}

method __contract_unsatisfiable__method_ListListQueue_getBatch(diz: Ref, current_thread_id: Int, globals: Ref) returns (sys__result: Bool)
  requires diz != null
  requires 0 <= current_thread_id
{
  inhale true && (acc(method_ListListQueue_consumer(diz, globals), write) && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_curNLIterator == null && diz.field_ListListQueue_readHead == diz.field_ListListQueue_batchHead && !diz.field_ListListQueue_isLastBatch))
  // assert
  assert false
  inhale false
  label method_end___contract_unsatisfiable__method_ListListQueue_getBatch_17
}

method method_ListListQueue_getBatch(diz: Ref, current_thread_id: Int, globals: Ref) returns (sys__result: Bool)
  requires diz != null
  requires 0 <= current_thread_id
  requires acc(method_ListListQueue_consumer(diz, globals), write)
  requires (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_curNLIterator == null && diz.field_ListListQueue_readHead == diz.field_ListListQueue_batchHead && !diz.field_ListListQueue_isLastBatch)
  ensures acc(method_ListListQueue_consumer(diz, globals), write)
  ensures old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_finalisedC)) ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_finalisedC && old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in |diz.field_ListListQueue_allC|)) == |diz.field_ListListQueue_allC|)
  ensures method_Util_isPrefix__Sequence$Node$__Sequence$Node$(old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC)), (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC))
  ensures method_Util_isPrefix__Sequence$Integer$__Sequence$Integer$(old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC)), (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC))
  ensures (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead)))
  ensures (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_batchHead == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_batchHead)) + |method_NodeListIterator_toSeq__NodeListIterator(globals, diz.field_ListListQueue_curNLIterator)|)
  ensures method_ListListQueue_toBagC(diz, globals) == old(method_ListListQueue_toBagC(diz, globals))
  ensures sys__result ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_curNLIterator != null && diz.field_ListListQueue_readHead < |diz.field_ListListQueue_allC|)
  ensures !sys__result ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_isLastBatch && diz.field_ListListQueue_curNLIterator == null)
{
  var batchKeys__79: Seq[Int]
  var oldSeq__78: Seq[Ref]
  var sys__local__result__61: Bool
  var __flatten_80__62: Bool
  var head__63: Ref
  var waiting__64: Bool
  var __flatten_83__65: Ref
  var __flatten_84__66: Ref
  var __flatten_85__67: Ref
  var __flatten_86__68: Int
  var __flatten_87__69: Seq[Ref]
  var __flatten_88__70: Ref
  var __flatten_90__71: Seq[Ref]
  var __flatten_91__72: Seq[Int]
  var __flatten_92__73: Bool
  var __flatten_93__74: Seq[Ref]
  var __flatten_94__75: Seq[Int]
  var __flatten_95__76: Bool
  var res__77: Bool
  inhale acc(method_ListListQueue_lock_invariant(diz, globals), write)
  unfold acc(method_ListListQueue_lock_invariant(diz, globals), write)
  if (diz.field_ListListQueue_finalised && diz.field_ListListQueue_batches == null) {
    unfold acc(method_ListListQueue_consumer(diz, globals), write)
    diz.field_ListListQueue_isLastBatch := true
    __flatten_80__62 := diz.field_ListListQueue_finalised
    diz.field_ListListQueue_finalisedC := __flatten_80__62
    fold acc(method_ListListQueue_consumer(diz, globals), write)
    fold acc(method_ListListQueue_lock_invariant(diz, globals), write)
    sys__local__result__61 := false
    // assert
    assert acc(method_ListListQueue_consumer(diz, globals), write) && (old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_finalisedC)) ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_finalisedC && old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in |diz.field_ListListQueue_allC|)) == |diz.field_ListListQueue_allC|)) && method_Util_isPrefix__Sequence$Node$__Sequence$Node$(old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC)), (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC)) && method_Util_isPrefix__Sequence$Integer$__Sequence$Integer$(old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC)), (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC)) && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead))) && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_batchHead == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_batchHead)) + |method_NodeListIterator_toSeq__NodeListIterator(globals, diz.field_ListListQueue_curNLIterator)|) && method_ListListQueue_toBagC(diz, globals) == old(method_ListListQueue_toBagC(diz, globals)) && (sys__local__result__61 ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_curNLIterator != null && diz.field_ListListQueue_readHead < |diz.field_ListListQueue_allC|)) && (!sys__local__result__61 ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_isLastBatch && diz.field_ListListQueue_curNLIterator == null))
    goto __return_getBatch
  }
  fold acc(method_ListListQueue_lock_invariant(diz, globals), write)
  head__63 := null
  fold acc(method_NodeList_list_perm__NodeList(globals, head__63), write)
  waiting__64 := true
  while (waiting__64)
    invariant acc(method_ListListQueue_consumer(diz, globals), write)
    invariant method_Util_isPrefix__Sequence$Node$__Sequence$Node$(old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC)), (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC))
    invariant method_Util_isPrefix__Sequence$Integer$__Sequence$Integer$(old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC)), (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC))
    invariant old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_finalisedC)) ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_finalisedC && old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in |diz.field_ListListQueue_allC|)) == |diz.field_ListListQueue_allC|)
    invariant method_ListListQueue_toBagC(diz, globals) == old(method_ListListQueue_toBagC(diz, globals))
    invariant waiting__64 ==> head__63 == null
    invariant waiting__64 ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead == diz.field_ListListQueue_batchHead)
    invariant waiting__64 ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_curNLIterator == null)
    invariant waiting__64 ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in !diz.field_ListListQueue_isLastBatch)
    invariant !waiting__64 && head__63 != null ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_curNLIterator != null && diz.field_ListListQueue_readHead < |diz.field_ListListQueue_allC|)
    invariant !waiting__64 && head__63 == null ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_isLastBatch && diz.field_ListListQueue_curNLIterator == null)
    invariant (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in (waiting__64 ? diz.field_ListListQueue_batchHead == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_batchHead)) : diz.field_ListListQueue_batchHead == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_batchHead)) + |method_NodeListIterator_toSeq__NodeListIterator(globals, diz.field_ListListQueue_curNLIterator)|)) 
  {
    inhale acc(method_ListListQueue_lock_invariant(diz, globals), write)
    unfold acc(method_ListListQueue_lock_invariant(diz, globals), write)
    unfold acc(method_ListListQueue_consumer(diz, globals), write)
    if (diz.field_ListListQueue_batches != null) {
      oldSeq__78 := method_ListList_toSeq__ListList(globals, diz.field_ListListQueue_batches)
      batchKeys__79 := method_ListList_toSeqKeys__ListList(globals, diz.field_ListListQueue_batches)
      unfold acc(method_ListList_list_perm__ListList(globals, diz.field_ListListQueue_batches), write)
      // assert
      assert method_Util_sortedLemma__Sequence$Integer$__Sequence$Integer$__Sequence$Integer$__Sequence$Integer$(batchKeys__79, method_NodeList_toSeqKeys__NodeList(globals, diz.field_ListListQueue_batches.field_ListList_nodeList), method_ListList_toSeqKeys__ListList(globals, diz.field_ListListQueue_batches.field_ListList_next), Seq[Int]())
      __flatten_83__65 := diz.field_ListListQueue_batches
      head__63 := __flatten_83__65.field_ListList_nodeList
      __flatten_85__67 := diz.field_ListListQueue_batches
      __flatten_84__66 := __flatten_85__67.field_ListList_next
      diz.field_ListListQueue_batches := __flatten_84__66
      waiting__64 := false
      // assert
      assert oldSeq__78 == method_NodeList_toSeq__NodeList(globals, head__63) ++ method_ListList_toSeq__ListList(globals, diz.field_ListListQueue_batches)
      // assert
      assert batchKeys__79 == method_NodeList_toSeqKeys__NodeList(globals, head__63) ++ method_ListList_toSeqKeys__ListList(globals, diz.field_ListListQueue_batches)
      // assert
      assert (forall i__80: Int :: { method_ListList_toSeqKeys__ListList(globals, diz.field_ListListQueue_batches)[i__80] } 0 <= i__80 && i__80 < |method_ListList_toSeqKeys__ListList(globals, diz.field_ListListQueue_batches)| ==> method_ListList_toSeqKeys__ListList(globals, diz.field_ListListQueue_batches)[i__80] == batchKeys__79[i__80 + |method_NodeList_toSeqKeys__NodeList(globals, head__63)|])
      // assert
      assert method_Util_suffixShortenLemma__Sequence$Node$__Sequence$Node$__Sequence$Node$__Sequence$Node$(oldSeq__78, diz.field_ListListQueue_allP, method_NodeList_toSeq__NodeList(globals, head__63), method_ListList_toSeq__ListList(globals, diz.field_ListListQueue_batches))
      // assert
      assert method_Util_infixSuffixLemma__Sequence$Integer$__Sequence$Integer$__Sequence$Integer$__Sequence$Integer$__Integer(batchKeys__79, diz.field_ListListQueue_keysP, method_NodeList_toSeqKeys__NodeList(globals, head__63), method_ListList_toSeqKeys__ListList(globals, diz.field_ListListQueue_batches), diz.field_ListListQueue_batchHead)
      __flatten_87__69 := method_NodeList_toSeq__NodeList(globals, head__63)
      __flatten_86__68 := diz.field_ListListQueue_batchHead + |__flatten_87__69|
      diz.field_ListListQueue_batchHead := __flatten_86__68
      __flatten_88__70 := constructor_NodeListIterator_NodeListIterator__NodeList(current_thread_id, globals, head__63)
      diz.field_ListListQueue_curNLIterator := __flatten_88__70
      // assert
      assert method_Util_toBagPrefixLemma__Sequence$Node$__Sequence$Node$__Integer__Integer__Bag$Node$(diz.field_ListListQueue_allC, diz.field_ListListQueue_allP, 0, diz.field_ListListQueue_readHead, old(method_ListListQueue_toBagC(diz, globals)))
      __flatten_90__71 := diz.field_ListListQueue_allP
      diz.field_ListListQueue_allC := __flatten_90__71
      __flatten_91__72 := diz.field_ListListQueue_keysP
      diz.field_ListListQueue_keysC := __flatten_91__72
      __flatten_92__73 := diz.field_ListListQueue_finalised
      diz.field_ListListQueue_finalisedC := __flatten_92__73
    }
    if (diz.field_ListListQueue_finalised && diz.field_ListListQueue_batches == null) {
      waiting__64 := false
      diz.field_ListListQueue_isLastBatch := true
      // assert
      assert method_Util_toBagPrefixLemma__Sequence$Node$__Sequence$Node$__Integer__Integer__Bag$Node$(diz.field_ListListQueue_allC, diz.field_ListListQueue_allP, 0, diz.field_ListListQueue_readHead, old(method_ListListQueue_toBagC(diz, globals)))
      __flatten_93__74 := diz.field_ListListQueue_allP
      diz.field_ListListQueue_allC := __flatten_93__74
      __flatten_94__75 := diz.field_ListListQueue_keysP
      diz.field_ListListQueue_keysC := __flatten_94__75
      __flatten_95__76 := diz.field_ListListQueue_finalised
      diz.field_ListListQueue_finalisedC := __flatten_95__76
    }
    fold acc(method_ListListQueue_consumer(diz, globals), write)
    fold acc(method_ListListQueue_lock_invariant(diz, globals), write)
    if (waiting__64) {
      
    }
  }
  unfold acc(method_ListListQueue_consumer(diz, globals), write)
  res__77 := diz.field_ListListQueue_curNLIterator != null
  fold acc(method_ListListQueue_consumer(diz, globals), write)
  sys__local__result__61 := res__77
  // assert
  assert acc(method_ListListQueue_consumer(diz, globals), write) && (old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_finalisedC)) ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_finalisedC && old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in |diz.field_ListListQueue_allC|)) == |diz.field_ListListQueue_allC|)) && method_Util_isPrefix__Sequence$Node$__Sequence$Node$(old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC)), (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC)) && method_Util_isPrefix__Sequence$Integer$__Sequence$Integer$(old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC)), (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC)) && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead))) && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_batchHead == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_batchHead)) + |method_NodeListIterator_toSeq__NodeListIterator(globals, diz.field_ListListQueue_curNLIterator)|) && method_ListListQueue_toBagC(diz, globals) == old(method_ListListQueue_toBagC(diz, globals)) && (sys__local__result__61 ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_curNLIterator != null && diz.field_ListListQueue_readHead < |diz.field_ListListQueue_allC|)) && (!sys__local__result__61 ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_isLastBatch && diz.field_ListListQueue_curNLIterator == null))
  goto __return_getBatch
  label __return_getBatch
  sys__result := sys__local__result__61
  // assert
  assert acc(method_ListListQueue_consumer(diz, globals), write) && (old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_finalisedC)) ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_finalisedC && old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in |diz.field_ListListQueue_allC|)) == |diz.field_ListListQueue_allC|)) && method_Util_isPrefix__Sequence$Node$__Sequence$Node$(old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC)), (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC)) && method_Util_isPrefix__Sequence$Integer$__Sequence$Integer$(old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC)), (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC)) && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead))) && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_batchHead == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_batchHead)) + |method_NodeListIterator_toSeq__NodeListIterator(globals, diz.field_ListListQueue_curNLIterator)|) && method_ListListQueue_toBagC(diz, globals) == old(method_ListListQueue_toBagC(diz, globals)) && (sys__result ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_curNLIterator != null && diz.field_ListListQueue_readHead < |diz.field_ListListQueue_allC|)) && (!sys__result ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_isLastBatch && diz.field_ListListQueue_curNLIterator == null))
  inhale false
  label method_end_method_ListListQueue_getBatch_18
}

method __contract_unsatisfiable__method_ListListQueue_toTree(diz: Ref, current_thread_id: Int, globals: Ref) returns (sys__result: Ref)
  requires diz != null
  requires 0 <= current_thread_id
{
  inhale true && (acc(method_ListListQueue_consumer(diz, globals), write) && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead == 0))
  // assert
  assert false
  inhale false
  label method_end___contract_unsatisfiable__method_ListListQueue_toTree_19
}

method method_ListListQueue_toTree(diz: Ref, current_thread_id: Int, globals: Ref) returns (sys__result: Ref)
  requires diz != null
  requires 0 <= current_thread_id
  requires acc(method_ListListQueue_consumer(diz, globals), write)
  requires (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead == 0)
  ensures acc(method_ListListQueue_consumer(diz, globals), write)
  ensures (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_isLastBatch && diz.field_ListListQueue_curNLIterator == null)
  ensures acc(method_Tree_tree_perm__Node(globals, sys__result), write)
  ensures method_Tree_toSeq__Node(globals, sys__result) == (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC)
  ensures method_Tree_validTree__Node(globals, sys__result)
{
  var height__92: Int
  var sys__local__result__81: Ref
  var waiting__82: Bool
  var numNodes__83: Int
  var __flatten_96__84: Seq[Ref]
  var __flatten_97__85: Seq[Int]
  var __flatten_98__86: Bool
  var __flatten_100__87: Ref
  var __flatten_101__88: Int
  var res__89: Ref
  var __flatten_175__90: frac
  var __flatten_177__91: frac
  waiting__82 := true
  numNodes__83 := 0
  while (waiting__82)
    invariant acc(method_ListListQueue_consumer(diz, globals), write)
    invariant (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead == 0)
    invariant waiting__82 ==> numNodes__83 == 0
    invariant !waiting__82 ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in numNodes__83 == |diz.field_ListListQueue_allC|)
    invariant !waiting__82 ==> (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_finalisedC) 
  {
    inhale acc(method_ListListQueue_lock_invariant(diz, globals), write)
    unfold acc(method_ListListQueue_lock_invariant(diz, globals), write)
    if (diz.field_ListListQueue_finalised) {
      waiting__82 := false
      unfold acc(method_ListListQueue_consumer(diz, globals), write)
      __flatten_96__84 := diz.field_ListListQueue_allP
      diz.field_ListListQueue_allC := __flatten_96__84
      __flatten_97__85 := diz.field_ListListQueue_keysP
      diz.field_ListListQueue_keysC := __flatten_97__85
      __flatten_98__86 := diz.field_ListListQueue_finalised
      diz.field_ListListQueue_finalisedC := __flatten_98__86
      if (diz.field_ListListQueue_batches != null) {
        __flatten_175__90 := new_frac(1 / 2)
        numNodes__83 := method_ListList_size(diz.field_ListListQueue_batches, current_thread_id, globals, __flatten_175__90)
      }
      if (numNodes__83 <= 0) {
        diz.field_ListListQueue_isLastBatch := true
      }
      if (diz.field_ListListQueue_curNLIterator != null) {
        __flatten_100__87 := diz.field_ListListQueue_curNLIterator
        __flatten_177__91 := new_frac(1 / 2)
        __flatten_101__88 := method_NodeList_length(__flatten_100__87.field_NodeListIterator_current, current_thread_id, globals, __flatten_177__91)
        numNodes__83 := numNodes__83 + __flatten_101__88
      }
      // assert
      assert method_ListList_seqSizeLemma__ListList(globals, diz.field_ListListQueue_batches)
      fold acc(method_ListListQueue_consumer(diz, globals), write)
    }
    fold acc(method_ListListQueue_lock_invariant(diz, globals), write)
  }
  res__89 := null
  fold acc(method_Tree_tree_perm__Node(globals, res__89), write)
  if (0 < numNodes__83) {
    height__92 := method_ListListQueue_log2__Integer(diz, numNodes__83)
    res__89 := method_ListListQueue_makeTree__Integer__Integer(diz, current_thread_id, globals, height__92, numNodes__83)
    unfold acc(method_Tree_tree_perm__Node(globals, res__89), write)
    res__89.field_Node_color := false
    fold acc(method_Tree_tree_perm__Node(globals, res__89), write)
  }
  sys__local__result__81 := res__89
  // assert
  assert acc(method_ListListQueue_consumer(diz, globals), write) && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_isLastBatch && diz.field_ListListQueue_curNLIterator == null) && acc(method_Tree_tree_perm__Node(globals, sys__local__result__81), write) && method_Tree_toSeq__Node(globals, sys__local__result__81) == (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC) && method_Tree_validTree__Node(globals, sys__local__result__81)
  goto __return_toTree
  label __return_toTree
  sys__result := sys__local__result__81
  // assert
  assert acc(method_ListListQueue_consumer(diz, globals), write) && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_isLastBatch && diz.field_ListListQueue_curNLIterator == null) && acc(method_Tree_tree_perm__Node(globals, sys__result), write) && method_Tree_toSeq__Node(globals, sys__result) == (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC) && method_Tree_validTree__Node(globals, sys__result)
  inhale false
  label method_end_method_ListListQueue_toTree_20
}

method __contract_unsatisfiable__method_ListListQueue_makeTree__Integer__Integer(diz: Ref, current_thread_id: Int, globals: Ref, height: Int, numNodes: Int) returns (sys__result: Ref)
  requires diz != null
  requires 0 <= current_thread_id
{
  inhale true && (acc(method_ListListQueue_consumer(diz, globals), write) && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_finalisedC) && (0 <= height && 0 < numNodes) && (method_ListListQueue_pow2__Integer(height) - 2 < numNodes && numNodes < method_ListListQueue_pow2__Integer(height + 1)) && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in numNodes <= |diz.field_ListListQueue_allC| - diz.field_ListListQueue_readHead))
  // assert
  assert false
  inhale false
  label method_end___contract_unsatisfiable__method_ListListQueue_makeTree__Integer__Integer_21
}

method method_ListListQueue_makeTree__Integer__Integer(diz: Ref, current_thread_id: Int, globals: Ref, height: Int, numNodes: Int) returns (sys__result: Ref)
  requires diz != null
  requires 0 <= current_thread_id
  requires acc(method_ListListQueue_consumer(diz, globals), write)
  requires (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_finalisedC)
  requires 0 <= height && 0 < numNodes
  requires method_ListListQueue_pow2__Integer(height) - 2 < numNodes && numNodes < method_ListListQueue_pow2__Integer(height + 1)
  requires (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in numNodes <= |diz.field_ListListQueue_allC| - diz.field_ListListQueue_readHead)
  ensures acc(method_ListListQueue_consumer(diz, globals), write)
  ensures (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_finalisedC)
  ensures acc(method_Tree_tree_perm__Node(globals, sys__result), write)
  ensures sys__result != null
  ensures |method_Tree_toSeq__Node(globals, sys__result)| == numNodes
  ensures (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC)))
  ensures (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC)))
  ensures (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead)) + numNodes)
  ensures (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in method_Util_isInfix__Sequence$Node$__Sequence$Node$__Integer(method_Tree_toSeq__Node(globals, sys__result), diz.field_ListListQueue_allC, old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead))))
  ensures (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in method_Util_isInfix__Sequence$Integer$__Sequence$Integer$__Integer(method_Tree_toSeqKeys__Node(globals, sys__result), diz.field_ListListQueue_keysC, old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead))))
  ensures (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in sys__result.field_Node_color == (height % 2 == 0))
  ensures method_Tree_blackHeight__Node(globals, sys__result) == (height + 1) / 2 + 1
  ensures method_Tree_blackBalanced__Node(globals, sys__result)
  ensures method_Tree_noDBlack__Node(globals, sys__result)
  ensures method_Tree_noDoubleRed__Node(globals, sys__result)
  ensures method_Tree_sortedKeySeq__Node(globals, sys__result)
{
  var newNum__101: Int
  var sys__local__result__93: Ref
  var left__94: Ref
  var right__95: Ref
  var startIdx__96: Int
  var leftSeq__97: Seq[Ref]
  var leftKeys__98: Seq[Int]
  var res__99: Ref
  var __flatten_109__100: Bool
  left__94 := null
  right__95 := null
  fold acc(method_Tree_tree_perm__Node(globals, left__94), write)
  fold acc(method_Tree_tree_perm__Node(globals, right__95), write)
  unfold acc(method_ListListQueue_consumer(diz, globals), write)
  startIdx__96 := diz.field_ListListQueue_readHead
  fold acc(method_ListListQueue_consumer(diz, globals), write)
  if (1 < numNodes) {
    left__94 := method_ListListQueue_makeTree__Integer__Integer(diz, current_thread_id, globals, height - 1, numNodes / 2)
  }
  leftSeq__97 := method_Tree_toSeq__Node(globals, left__94)
  leftKeys__98 := method_Tree_toSeqKeys__Node(globals, left__94)
  res__99 := method_ListListQueue_getNext(diz, current_thread_id, globals)
  // assert
  assert (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in method_Util_infixAdditionLemma__Sequence$Node$__Sequence$Node$__Sequence$Node$__Integer(leftSeq__97, Seq(res__99), diz.field_ListListQueue_allC, startIdx__96))
  // assert
  assert res__99.field_Node_key == (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC[startIdx__96 + |leftKeys__98|])
  // assert
  assert (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in method_Util_infixAdditionLemma__Sequence$Integer$__Sequence$Integer$__Sequence$Integer$__Integer(leftKeys__98, Seq(res__99.field_Node_key), diz.field_ListListQueue_keysC, startIdx__96))
  if (2 < numNodes) {
    newNum__101 := numNodes - numNodes / 2 - 1
    right__95 := method_ListListQueue_makeTree__Integer__Integer(diz, current_thread_id, globals, height - 1, newNum__101)
  }
  // assert
  assert (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in method_Util_infixAdditionLemma__Sequence$Node$__Sequence$Node$__Sequence$Node$__Integer(leftSeq__97 ++ Seq(res__99), method_Tree_toSeq__Node(globals, right__95), diz.field_ListListQueue_allC, startIdx__96))
  // assert
  assert (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in method_Util_infixAdditionLemma__Sequence$Integer$__Sequence$Integer$__Sequence$Integer$__Integer(leftKeys__98 ++ Seq(res__99.field_Node_key), method_Tree_toSeqKeys__Node(globals, right__95), diz.field_ListListQueue_keysC, startIdx__96))
  res__99.field_Node_left := left__94
  res__99.field_Node_right := right__95
  __flatten_109__100 := height % 2 == 0
  res__99.field_Node_color := __flatten_109__100
  res__99.field_Node_dblack := false
  res__99.field_Node_dblackNull := false
  fold acc(method_Tree_tree_perm__Node(globals, res__99), write)
  sys__local__result__93 := res__99
  // assert
  assert acc(method_ListListQueue_consumer(diz, globals), write) && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_finalisedC) && acc(method_Tree_tree_perm__Node(globals, sys__local__result__93), write) && sys__local__result__93 != null && |method_Tree_toSeq__Node(globals, sys__local__result__93)| == numNodes && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC))) && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC))) && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead)) + numNodes) && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in method_Util_isInfix__Sequence$Node$__Sequence$Node$__Integer(method_Tree_toSeq__Node(globals, sys__local__result__93), diz.field_ListListQueue_allC, old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead)))) && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in method_Util_isInfix__Sequence$Integer$__Sequence$Integer$__Integer(method_Tree_toSeqKeys__Node(globals, sys__local__result__93), diz.field_ListListQueue_keysC, old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead)))) && (unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__93), write) in sys__local__result__93.field_Node_color == (height % 2 == 0)) && method_Tree_blackHeight__Node(globals, sys__local__result__93) == (height + 1) / 2 + 1 && method_Tree_blackBalanced__Node(globals, sys__local__result__93) && method_Tree_noDBlack__Node(globals, sys__local__result__93) && method_Tree_noDoubleRed__Node(globals, sys__local__result__93) && method_Tree_sortedKeySeq__Node(globals, sys__local__result__93)
  goto __return_makeTree
  label __return_makeTree
  sys__result := sys__local__result__93
  // assert
  assert acc(method_ListListQueue_consumer(diz, globals), write) && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_finalisedC) && acc(method_Tree_tree_perm__Node(globals, sys__result), write) && sys__result != null && |method_Tree_toSeq__Node(globals, sys__result)| == numNodes && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_allC))) && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_keysC))) && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead == old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead)) + numNodes) && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in method_Util_isInfix__Sequence$Node$__Sequence$Node$__Integer(method_Tree_toSeq__Node(globals, sys__result), diz.field_ListListQueue_allC, old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead)))) && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in method_Util_isInfix__Sequence$Integer$__Sequence$Integer$__Integer(method_Tree_toSeqKeys__Node(globals, sys__result), diz.field_ListListQueue_keysC, old((unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_readHead)))) && (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in sys__result.field_Node_color == (height % 2 == 0)) && method_Tree_blackHeight__Node(globals, sys__result) == (height + 1) / 2 + 1 && method_Tree_blackBalanced__Node(globals, sys__result) && method_Tree_noDBlack__Node(globals, sys__result) && method_Tree_noDoubleRed__Node(globals, sys__result) && method_Tree_sortedKeySeq__Node(globals, sys__result)
  inhale false
  label method_end_method_ListListQueue_makeTree__Integer__Integer_22
}

method __contract_unsatisfiable__method_ListListQueue_joinPC(diz: Ref, current_thread_id: Int, globals: Ref)
  requires diz != null
  requires 0 <= current_thread_id
{
  inhale true && (acc(method_ListListQueue_producer(diz, globals), write) && acc(method_ListListQueue_consumer(diz, globals), write) && (unfolding acc(method_ListListQueue_producer(diz, globals), write) in diz.field_ListListQueue_finalised) && (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_isLastBatch && diz.field_ListListQueue_curNLIterator == null) == true)
  // assert
  assert false
  inhale false
  label method_end___contract_unsatisfiable__method_ListListQueue_joinPC_23
}

method method_ListListQueue_joinPC(diz: Ref, current_thread_id: Int, globals: Ref)
  requires diz != null
  requires 0 <= current_thread_id
  requires acc(method_ListListQueue_producer(diz, globals), write)
  requires acc(method_ListListQueue_consumer(diz, globals), write)
  requires (unfolding acc(method_ListListQueue_producer(diz, globals), write) in diz.field_ListListQueue_finalised)
  requires (unfolding acc(method_ListListQueue_consumer(diz, globals), write) in diz.field_ListListQueue_isLastBatch && diz.field_ListListQueue_curNLIterator == null) == true
  ensures acc(diz.field_ListListQueue_allP, 1 / 2)
  ensures diz.field_ListListQueue_allP == old((unfolding acc(method_ListListQueue_producer(diz, globals), write) in diz.field_ListListQueue_allP))
  ensures method_Util_toBag__Sequence$Node$(diz.field_ListListQueue_allP) == old(method_ListListQueue_toBagP(diz, globals))
  ensures method_Util_toBag__Sequence$Node$(diz.field_ListListQueue_allP) == old(method_ListListQueue_toBagC(diz, globals))
{
  var sys__exc__102: Ref
  var __sync_1__103: Ref
  var old__sys_exc_27__104: Ref
  sys__exc__102 := null
  __sync_1__103 := diz
  inhale acc(method_ListListQueue_lock_invariant(__sync_1__103, globals), write)
  unfold acc(method_ListListQueue_lock_invariant(__sync_1__103, globals), write)
  inhale acc(method_ListListQueue_lock_held(__sync_1__103, globals), write)
  old__sys_exc_27__104 := sys__exc__102
  inhale acc(method_ListListQueue_lock_invariant(diz, globals), write)
  unfold acc(method_ListListQueue_lock_invariant(diz, globals), write)
  unfold acc(method_ListListQueue_producer(diz, globals), write)
  goto finally_25
  label finally_25
  exhale acc(method_ListListQueue_lock_held(__sync_1__103, globals), write)
  fold acc(method_ListListQueue_lock_invariant(__sync_1__103, globals), write)
  exhale acc(method_ListListQueue_lock_invariant(__sync_1__103, globals), write)
  if (sys__exc__102 != old__sys_exc_27__104) {
    goto method_end_method_ListListQueue_joinPC_24
  }
  goto try_end_26
  label try_end_26
  label method_end_method_ListListQueue_joinPC_24
  // assert
  assert sys__exc__102 == null
}

method constructor_NodeListIterator_NodeListIterator__NodeList(current_thread_id: Int, globals: Ref, list: Ref) returns (sys__result: Ref)
  requires 0 <= current_thread_id
  requires acc(method_NodeList_list_perm__NodeList(globals, list), write)
  requires method_NodeList_sorted__NodeList(globals, list)
  ensures sys__result != null
  ensures type_of(sys__result) == class_NodeListIterator()
  ensures acc(sys__result.field_NodeListIterator_current, write)
  ensures acc(method_NodeList_list_perm__NodeList(globals, sys__result.field_NodeListIterator_current), write)
  ensures method_NodeListIterator_sorted__NodeListIterator(globals, sys__result)
  ensures sys__result.field_NodeListIterator_current == list
  ensures method_NodeListIterator_toSeq__NodeListIterator(globals, sys__result) == old(method_NodeList_toSeq__NodeList(globals, list))
  ensures method_NodeListIterator_toSeqKeys__NodeListIterator(globals, sys__result) == old(method_NodeList_toSeqKeys__NodeList(globals, list))
{
  inhale false
}

method method_NodeListIterator_hasNext(diz: Ref, current_thread_id: Int, globals: Ref, p: frac) returns (sys__result: Bool)
  requires diz != null
  requires 0 <= current_thread_id
  requires acc(diz.field_NodeListIterator_current, frac_val(p))
  requires acc(method_NodeList_list_perm__NodeList(globals, diz.field_NodeListIterator_current), frac_val(p))
  requires method_NodeListIterator_sorted__NodeListIterator(globals, diz)
  ensures acc(diz.field_NodeListIterator_current, frac_val(p))
  ensures acc(method_NodeList_list_perm__NodeList(globals, diz.field_NodeListIterator_current), frac_val(p))
  ensures method_NodeListIterator_sorted__NodeListIterator(globals, diz)
  ensures sys__result == (diz.field_NodeListIterator_current != null)
  ensures !sys__result ==> |method_NodeListIterator_toSeq__NodeListIterator(globals, diz)| == 0
{
  inhale false
}

method method_NodeListIterator_getNext(diz: Ref, current_thread_id: Int, globals: Ref) returns (sys__result: Ref)
  requires diz != null
  requires 0 <= current_thread_id
  requires acc(diz.field_NodeListIterator_current, write)
  requires acc(method_NodeList_list_perm__NodeList(globals, diz.field_NodeListIterator_current), write)
  requires method_NodeListIterator_sorted__NodeListIterator(globals, diz)
  requires diz.field_NodeListIterator_current != null
  ensures acc(diz.field_NodeListIterator_current, write)
  ensures acc(method_NodeList_list_perm__NodeList(globals, diz.field_NodeListIterator_current), write)
  ensures method_NodeListIterator_sorted__NodeListIterator(globals, diz)
  ensures acc(sys__result.field_Node_key, write)
  ensures acc(sys__result.field_Node_left, write)
  ensures acc(sys__result.field_Node_right, write)
  ensures acc(sys__result.field_Node_color, write)
  ensures acc(sys__result.field_Node_dblack, write)
  ensures acc(sys__result.field_Node_dblackNull, write)
  ensures acc(globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE, wildcard)
  ensures globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE <= sys__result.field_Node_key
  ensures method_NodeListIterator_toSeq__NodeListIterator(globals, diz) == old(method_NodeListIterator_toSeq__NodeListIterator(globals, diz)[1..])
  ensures method_NodeListIterator_toSeqKeys__NodeListIterator(globals, diz) == old(method_NodeListIterator_toSeqKeys__NodeListIterator(globals, diz)[1..])
  ensures sys__result == old((unfolding acc(method_NodeList_list_perm__NodeList(globals, diz.field_NodeListIterator_current), write) in diz.field_NodeListIterator_current.field_NodeList_node))
  ensures sys__result.field_Node_key == old(method_NodeListIterator_toSeqKeys__NodeListIterator(globals, diz)[0])
  ensures sys__result != null
{
  inhale false
}

method constructor_ListList_ListList__NodeList(current_thread_id: Int, globals: Ref, nl: Ref) returns (sys__result: Ref)
  requires 0 <= current_thread_id
  requires nl != null
  requires acc(method_NodeList_list_perm__NodeList(globals, nl), write)
  requires method_NodeList_sorted__NodeList(globals, nl)
  ensures sys__result != null
  ensures type_of(sys__result) == class_ListList()
  ensures acc(method_ListList_list_perm__ListList(globals, sys__result), write)
  ensures (unfolding acc(method_ListList_list_perm__ListList(globals, sys__result), write) in sys__result.field_ListList_nodeList == nl && sys__result.field_ListList_next == null)
  ensures method_ListList_toSeq__ListList(globals, sys__result) == old(method_NodeList_toSeq__NodeList(globals, nl))
  ensures method_ListList_toSeqKeys__ListList(globals, sys__result) == old(method_NodeList_toSeqKeys__NodeList(globals, nl))
  ensures method_ListList_sorted__ListList(globals, sys__result)
{
  inhale false
}

method method_ListList_size(diz: Ref, current_thread_id: Int, globals: Ref, p: frac) returns (sys__result: Int)
  requires diz != null
  requires 0 <= current_thread_id
  requires acc(method_ListList_list_perm__ListList(globals, diz), frac_val(p))
  ensures acc(method_ListList_list_perm__ListList(globals, diz), frac_val(p))
  ensures sys__result == method_ListList_size__ListList(globals, diz)
{
  inhale false
}

method method_ListList_append__NodeList(diz: Ref, current_thread_id: Int, globals: Ref, nl: Ref)
  requires diz != null
  requires 0 <= current_thread_id
  requires acc(method_ListList_list_perm__ListList(globals, diz), write)
  requires nl != null
  requires acc(method_NodeList_list_perm__NodeList(globals, nl), write)
  requires method_ListList_sorted__ListList(globals, diz)
  requires method_NodeList_sorted__NodeList(globals, nl)
  requires method_Util_smallerSeq__Sequence$Integer$__Sequence$Integer$(method_ListList_toSeqKeys__ListList(globals, diz), method_NodeList_toSeqKeys__NodeList(globals, nl))
  ensures acc(method_ListList_list_perm__ListList(globals, diz), write)
  ensures method_ListList_toSeq__ListList(globals, diz) == old(method_ListList_toSeq__ListList(globals, diz) ++ method_NodeList_toSeq__NodeList(globals, nl))
  ensures method_ListList_toSeqKeys__ListList(globals, diz) == old(method_ListList_toSeqKeys__ListList(globals, diz) ++ method_NodeList_toSeqKeys__NodeList(globals, nl))
  ensures method_ListList_sorted__ListList(globals, diz)
{
  inhale false
}

method method_ListList_appendRec__NodeList__ListList(diz: Ref, current_thread_id: Int, globals: Ref, nl: Ref, ll: Ref) returns (sys__result: Ref)
  requires diz != null
  requires 0 <= current_thread_id
  requires nl != null
  requires acc(method_ListList_list_perm__ListList(globals, ll), write)
  requires acc(method_NodeList_list_perm__NodeList(globals, nl), write)
  requires method_ListList_sorted__ListList(globals, ll)
  requires method_NodeList_sorted__NodeList(globals, nl)
  requires method_Util_smallerSeq__Sequence$Integer$__Sequence$Integer$(method_ListList_toSeqKeys__ListList(globals, ll), method_NodeList_toSeqKeys__NodeList(globals, nl))
  ensures acc(method_ListList_list_perm__ListList(globals, sys__result), write)
  ensures method_ListList_toSeq__ListList(globals, sys__result) == old(method_ListList_toSeq__ListList(globals, ll) ++ method_NodeList_toSeq__NodeList(globals, nl))
  ensures method_ListList_toSeqKeys__ListList(globals, sys__result) == old(method_ListList_toSeqKeys__ListList(globals, ll) ++ method_NodeList_toSeqKeys__NodeList(globals, nl))
  ensures method_ListList_sorted__ListList(globals, sys__result)
{
  inhale false
}

method method_NodeList_appendRec__Node__NodeList(current_thread_id: Int, globals: Ref, node: Ref, nl: Ref) returns (sys__result: Ref)
  requires 0 <= current_thread_id
  requires acc(method_NodeList_list_perm__NodeList(globals, nl), write)
  requires node != null
  requires acc(node.field_Node_key, write)
  requires acc(node.field_Node_left, write)
  requires acc(node.field_Node_right, write)
  requires acc(node.field_Node_color, write)
  requires acc(node.field_Node_dblack, write)
  requires acc(node.field_Node_dblackNull, write)
  requires acc(globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE, wildcard)
  requires globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE <= node.field_Node_key
  requires method_NodeList_sorted__NodeList(globals, nl) && (forall i: Int :: { method_NodeList_toSeqKeys__NodeList(globals, nl)[i] } 0 <= i && i < |method_NodeList_toSeqKeys__NodeList(globals, nl)| ==> method_NodeList_toSeqKeys__NodeList(globals, nl)[i] <= node.field_Node_key)
  ensures acc(method_NodeList_list_perm__NodeList(globals, sys__result), write)
  ensures method_NodeList_size__NodeList(globals, sys__result) == 1 + old(method_NodeList_size__NodeList(globals, nl))
  ensures method_NodeList_toSeq__NodeList(globals, sys__result) == old(method_NodeList_toSeq__NodeList(globals, nl) ++ Seq(node))
  ensures method_NodeList_toSeqKeys__NodeList(globals, sys__result) == old(method_NodeList_toSeqKeys__NodeList(globals, nl) ++ Seq(node.field_Node_key))
  ensures method_NodeList_sorted__NodeList(globals, sys__result)
{
  inhale false
}

method method_NodeList_extend__NodeList__NodeList(current_thread_id: Int, globals: Ref, front: Ref, back: Ref) returns (sys__result: Ref)
  requires 0 <= current_thread_id
  requires acc(method_NodeList_list_perm__NodeList(globals, front), write)
  requires acc(method_NodeList_list_perm__NodeList(globals, back), write)
  requires method_NodeList_sorted__NodeList(globals, front) && method_NodeList_sorted__NodeList(globals, back) && (forall i: Int, j: Int :: { method_NodeList_toSeqKeys__NodeList(globals, back)[j],method_NodeList_toSeqKeys__NodeList(globals, front)[i] } 0 <= i && i < |method_NodeList_toSeqKeys__NodeList(globals, front)| && (0 <= j && j < |method_NodeList_toSeqKeys__NodeList(globals, back)|) ==> method_NodeList_toSeqKeys__NodeList(globals, front)[i] <= method_NodeList_toSeqKeys__NodeList(globals, back)[j])
  ensures acc(method_NodeList_list_perm__NodeList(globals, sys__result), write)
  ensures method_NodeList_size__NodeList(globals, sys__result) == old(method_NodeList_size__NodeList(globals, front)) + old(method_NodeList_size__NodeList(globals, back))
  ensures method_NodeList_toSeq__NodeList(globals, sys__result) == old(method_NodeList_toSeq__NodeList(globals, front)) ++ old(method_NodeList_toSeq__NodeList(globals, back))
  ensures method_NodeList_toSeqKeys__NodeList(globals, sys__result) == old(method_NodeList_toSeqKeys__NodeList(globals, front)) ++ old(method_NodeList_toSeqKeys__NodeList(globals, back))
  ensures method_NodeList_sorted__NodeList(globals, sys__result)
{
  inhale false
}

method method_NodeList_fromTree__Node(current_thread_id: Int, globals: Ref, node: Ref) returns (sys__result: Ref)
  requires 0 <= current_thread_id
  requires acc(method_Tree_tree_perm__Node(globals, node), write)
  requires method_Tree_noDBlack__Node(globals, node)
  requires method_Tree_sortedKeySeq__Node(globals, node)
  ensures node != null ==> sys__result != null
  ensures acc(method_NodeList_list_perm__NodeList(globals, sys__result), write)
  ensures old(method_Tree_toSeq__Node(globals, node)) == method_NodeList_toSeq__NodeList(globals, sys__result)
  ensures old(method_Tree_toSeqKeys__Node(globals, node)) == method_NodeList_toSeqKeys__NodeList(globals, sys__result)
  ensures method_NodeList_sorted__NodeList(globals, sys__result)
{
  inhale false
}

method constructor_NodeList_NodeList__Node__NodeList(current_thread_id: Int, globals: Ref, node: Ref, nl: Ref) returns (sys__result: Ref)
  requires 0 <= current_thread_id
  requires node != null
  requires acc(node.field_Node_key, write)
  requires acc(node.field_Node_left, write)
  requires acc(node.field_Node_right, write)
  requires acc(node.field_Node_color, write)
  requires acc(node.field_Node_dblack, write)
  requires acc(node.field_Node_dblackNull, write)
  requires acc(globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE, wildcard)
  requires globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE <= node.field_Node_key
  requires acc(method_NodeList_list_perm__NodeList(globals, nl), write)
  requires method_NodeList_sorted__NodeList(globals, nl) && (let nlKeys == (method_NodeList_toSeqKeys__NodeList(globals, nl)) in (forall i: Int :: { nlKeys[i] } 0 <= i && i < |nlKeys| ==> node.field_Node_key <= nlKeys[i]))
  ensures sys__result != null
  ensures type_of(sys__result) == class_NodeList()
  ensures acc(method_NodeList_list_perm__NodeList(globals, sys__result), write)
  ensures method_NodeList_sorted__NodeList(globals, sys__result)
  ensures method_NodeList_size__NodeList(globals, sys__result) == old(method_NodeList_size__NodeList(globals, nl)) + 1
  ensures method_NodeList_toSeqKeys__NodeList(globals, sys__result) == old(Seq(node.field_Node_key) ++ method_NodeList_toSeqKeys__NodeList(globals, nl))
  ensures (unfolding acc(method_NodeList_list_perm__NodeList(globals, sys__result), write) in sys__result.field_NodeList_node == node && sys__result.field_NodeList_next == nl && method_NodeList_toSeq__NodeList(globals, sys__result.field_NodeList_next) == old(method_NodeList_toSeq__NodeList(globals, nl)))
{
  inhale false
}

method method_NodeList_length(diz: Ref, current_thread_id: Int, globals: Ref, p: frac) returns (sys__result: Int)
  requires diz != null
  requires 0 <= current_thread_id
  requires acc(method_NodeList_list_perm__NodeList(globals, diz), frac_val(p))
  ensures acc(method_NodeList_list_perm__NodeList(globals, diz), frac_val(p))
  ensures sys__result == method_NodeList_size__NodeList(globals, diz)
{
  inhale false
}

method method_NodeList_append__Node(diz: Ref, current_thread_id: Int, globals: Ref, node: Ref)
  requires diz != null
  requires 0 <= current_thread_id
  requires node != null
  requires acc(node.field_Node_key, write)
  requires acc(node.field_Node_left, write)
  requires acc(node.field_Node_right, write)
  requires acc(node.field_Node_color, write)
  requires acc(node.field_Node_dblack, write)
  requires acc(node.field_Node_dblackNull, write)
  requires acc(globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE, wildcard)
  requires globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE <= node.field_Node_key
  requires acc(method_NodeList_list_perm__NodeList(globals, diz), write)
  requires method_NodeList_sorted__NodeList(globals, diz) && (forall i: Int :: { method_NodeList_toSeqKeys__NodeList(globals, diz)[i] } 0 <= i && i < |method_NodeList_toSeqKeys__NodeList(globals, diz)| ==> method_NodeList_toSeqKeys__NodeList(globals, diz)[i] <= node.field_Node_key)
  ensures acc(method_NodeList_list_perm__NodeList(globals, diz), write)
  ensures method_NodeList_size__NodeList(globals, diz) == 1 + old(method_NodeList_size__NodeList(globals, diz))
  ensures method_NodeList_toSeq__NodeList(globals, diz) == old(method_NodeList_toSeq__NodeList(globals, diz) ++ Seq(node))
  ensures method_NodeList_toSeqKeys__NodeList(globals, diz) == old(method_NodeList_toSeqKeys__NodeList(globals, diz) ++ Seq(node.field_Node_key))
  ensures method_NodeList_sorted__NodeList(globals, diz)
{
  inhale false
}

method constructor_Node_Node__Integer(current_thread_id: Int, globals: Ref, item: Int) returns (sys__result: Ref)
  requires 0 <= current_thread_id
  requires acc(globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE, wildcard)
  requires globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE <= item
  ensures sys__result != null
  ensures type_of(sys__result) == class_Node()
  ensures acc(sys__result.field_Node_key, write)
  ensures acc(sys__result.field_Node_left, write)
  ensures acc(sys__result.field_Node_right, write)
  ensures acc(sys__result.field_Node_color, write)
  ensures acc(sys__result.field_Node_dblack, write)
  ensures acc(sys__result.field_Node_dblackNull, write)
  ensures acc(globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE, wildcard)
  ensures globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE <= sys__result.field_Node_key
  ensures sys__result.field_Node_key == item
  ensures sys__result.field_Node_left == null
  ensures sys__result.field_Node_right == null
  ensures sys__result.field_Node_color == true
  ensures sys__result.field_Node_dblack == false
  ensures sys__result.field_Node_dblackNull == false
{
  inhale false
}

method constructor_Util_Util(current_thread_id: Int, globals: Ref) returns (sys__result: Ref)
  requires 0 <= current_thread_id
  ensures sys__result != null
  ensures type_of(sys__result) == class_Util()
{
  inhale false
}

method internal_Util_Util(current_thread_id: Int, globals: Ref) returns (sys__result: Ref)
  requires 0 <= current_thread_id
  ensures sys__result != null
  ensures type_of(sys__result) == class_Util()
{
  inhale false
}

method method_Tree_subbagCompareLemma__Bag$Integer$__Bag$Integer$__Bag$Integer$__Integer(current_thread_id: Int, globals: Ref, bigBag: Multiset[Int], subBag: Multiset[Int], diff: Multiset[Int], key: Int)
  requires 0 <= current_thread_id
  requires bigBag == (subBag union diff)
  ensures method_Tree_smaller__Bag$Integer$__Integer(bigBag, key) ==> method_Tree_smaller__Bag$Integer$__Integer(subBag, key)
  ensures method_Tree_larger__Bag$Integer$__Integer(bigBag, key) ==> method_Tree_larger__Bag$Integer$__Integer(subBag, key)
{
  inhale false
}

method method_Tree_makeWand__Node__Node__Node__Node__Boolean__Integer__Bag$Integer$__Boolean__Integer__Bag$Integer$__Boolean__Integer__Bag$Integer$__Boolean(current_thread_id: Int, globals: Ref, res: Ref, current: Ref, containingSubtree: Ref, otherSubtree: Ref, oldColor: Bool, oldHeight: Int, oldBag: Multiset[Int], subColor: Bool, subHeight: Int, subBag: Multiset[Int], resColor: Bool, resHeight: Int, resBag: Multiset[Int], goLeft: Bool)
  requires 0 <= current_thread_id
  requires current != null
  requires acc(current.field_Node_key, write)
  requires acc(current.field_Node_left, write)
  requires acc(current.field_Node_right, write)
  requires acc(current.field_Node_color, write)
  requires acc(current.field_Node_dblack, write)
  requires acc(current.field_Node_dblackNull, write)
  requires acc(globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE, wildcard)
  requires globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE <= current.field_Node_key
  requires acc(method_Tree_tree_perm__Node(globals, otherSubtree), write)
  requires current.field_Node_dblackNull ==> current.field_Node_left == null && current.field_Node_right == null && !current.field_Node_color && current.field_Node_dblack
  requires current.field_Node_dblack ==> !current.field_Node_color
  requires (goLeft ? containingSubtree == current.field_Node_left && otherSubtree == current.field_Node_right : containingSubtree == current.field_Node_right && otherSubtree == current.field_Node_left)
  requires acc(Wand_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$_for_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(globals, res, globals, res, globals, res, resColor, resHeight, resBag, globals, containingSubtree, globals, containingSubtree, globals, containingSubtree, subColor, subHeight, subBag), write)
  requires subHeight == method_Tree_blackHeight__Node(globals, otherSubtree) && method_Tree_blackBalanced__Node(globals, otherSubtree)
  requires oldHeight == method_Tree_getBlacks__Node(globals, current) + subHeight
  requires method_Tree_noDBlack__Node(globals, otherSubtree)
  requires !current.field_Node_dblack
  requires current.field_Node_color == oldColor
  requires (!current.field_Node_color || !subColor && !method_Tree_getColor__Node(globals, otherSubtree)) && method_Tree_noDoubleRed__Node(globals, otherSubtree)
  requires oldBag == ((subBag union method_Tree_toBag__Node(globals, otherSubtree)) union Multiset(current.field_Node_key))
  requires (goLeft ? method_Tree_smaller__Bag$Integer$__Integer(subBag, current.field_Node_key) && method_Tree_larger__Bag$Integer$__Integer(method_Tree_toBag__Node(globals, otherSubtree), current.field_Node_key) : method_Tree_larger__Bag$Integer$__Integer(subBag, current.field_Node_key) && method_Tree_smaller__Bag$Integer$__Integer(method_Tree_toBag__Node(globals, otherSubtree), current.field_Node_key))
  requires method_Tree_sorted__Node(globals, otherSubtree)
  ensures acc(Wand_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$_for_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(globals, res, globals, res, globals, res, resColor, resHeight, resBag, globals, current, globals, current, globals, current, oldColor, oldHeight, oldBag), write)
{
  inhale false
}

method method_Tree_isBlack__Node(current_thread_id: Int, globals: Ref, node: Ref) returns (sys__result: Bool)
  requires 0 <= current_thread_id
  requires acc(method_Tree_tree_perm__Node(globals, node), 1 / 2)
  ensures acc(method_Tree_tree_perm__Node(globals, node), 1 / 2)
  ensures sys__result == (node == null || (unfolding acc(method_Tree_tree_perm__Node(globals, node), 1 / 2) in !node.field_Node_color))
{
  inhale false
}

method method_Tree_isRed__Node(current_thread_id: Int, globals: Ref, node: Ref) returns (sys__result: Bool)
  requires 0 <= current_thread_id
  requires acc(method_Tree_tree_perm__Node(globals, node), 1 / 2)
  ensures acc(method_Tree_tree_perm__Node(globals, node), 1 / 2)
  ensures sys__result == (node != null && (unfolding acc(method_Tree_tree_perm__Node(globals, node), 1 / 2) in node.field_Node_color))
{
  inhale false
}

method method_Tree_makeNodeSingleBlack__Node(current_thread_id: Int, globals: Ref, node: Ref) returns (sys__result: Ref)
  requires 0 <= current_thread_id
  requires acc(method_Tree_tree_perm__Node(globals, node), write)
  requires node != null
  ensures acc(method_Tree_tree_perm__Node(globals, sys__result), write)
  ensures (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_getBlacks__Node(globals, sys__result) == 1)
  ensures old(method_Tree_sorted__Node(globals, node)) ==> method_Tree_sorted__Node(globals, sys__result)
  ensures old(method_Tree_blackBalanced__Node(globals, node)) ==> method_Tree_blackBalanced__Node(globals, sys__result)
  ensures old(method_Tree_noDoubleRed__Node(globals, node) || (method_Tree_dbRedAtLeft__Node(globals, node) || method_Tree_dbRedAtRight__Node(globals, node))) ==> method_Tree_noDoubleRed__Node(globals, sys__result)
  ensures old(method_Tree_toBag__Node(globals, node)) == method_Tree_toBag__Node(globals, sys__result)
  ensures (old((unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_getBlacks__Node(globals, node))) == 2 ? old(method_Tree_blackHeight__Node(globals, node)) - 1 == method_Tree_blackHeight__Node(globals, sys__result) : (old((unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_getBlacks__Node(globals, node))) == 1 ? old(method_Tree_blackHeight__Node(globals, node)) == method_Tree_blackHeight__Node(globals, sys__result) : old(method_Tree_blackHeight__Node(globals, node)) + 1 == method_Tree_blackHeight__Node(globals, sys__result)))
  ensures old(method_Tree_dblackAtTop__Node(globals, node)) ==> method_Tree_noDBlack__Node(globals, sys__result)
  ensures old(method_Tree_noDBlack__Node(globals, node)) ==> method_Tree_noDBlack__Node(globals, sys__result)
{
  inhale false
}

method method_Tree_insert__Integer(diz: Ref, current_thread_id: Int, globals: Ref, key: Int)
  requires diz != null
  requires 0 <= current_thread_id
  requires acc(diz.field_Tree_root, write)
  requires acc(method_Tree_tree_perm__Node(globals, diz.field_Tree_root), write)
  requires method_Tree_noDBlack__Node(globals, diz.field_Tree_root)
  requires method_Tree_sorted__Node(globals, diz.field_Tree_root)
  requires method_Tree_noDoubleRed__Node(globals, diz.field_Tree_root)
  requires method_Tree_blackBalanced__Node(globals, diz.field_Tree_root)
  requires acc(globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE, wildcard)
  requires globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE <= key
  ensures acc(diz.field_Tree_root, write)
  ensures acc(method_Tree_tree_perm__Node(globals, diz.field_Tree_root), write)
  ensures method_Tree_noDBlack__Node(globals, diz.field_Tree_root)
  ensures method_Tree_sorted__Node(globals, diz.field_Tree_root)
  ensures method_Tree_noDoubleRed__Node(globals, diz.field_Tree_root)
  ensures method_Tree_blackBalanced__Node(globals, diz.field_Tree_root)
{
  inhale false
}

method method_Tree_insertRec__Node__Integer(diz: Ref, current_thread_id: Int, globals: Ref, current: Ref, key: Int) returns (sys__result: Ref)
  requires diz != null
  requires 0 <= current_thread_id
  requires acc(method_Tree_tree_perm__Node(globals, current), write)
  requires acc(globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE, wildcard)
  requires globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE <= key
  requires method_Tree_sorted__Node(globals, current)
  requires method_Tree_noDBlack__Node(globals, current)
  requires method_Tree_blackBalanced__Node(globals, current)
  requires method_Tree_noDoubleRed__Node(globals, current)
  ensures sys__result != null
  ensures acc(method_Tree_tree_perm__Node(globals, sys__result), write)
  ensures method_Tree_sorted__Node(globals, sys__result)
  ensures method_Tree_noDBlack__Node(globals, sys__result)
  ensures method_Tree_blackBalanced__Node(globals, sys__result)
  ensures method_Tree_noDoubleRed__Node(globals, sys__result) || (method_Tree_dbRedAtLeft__Node(globals, sys__result) || method_Tree_dbRedAtRight__Node(globals, sys__result))
  ensures old(method_Tree_blackHeight__Node(globals, current)) == method_Tree_blackHeight__Node(globals, sys__result)
  ensures (old(method_Tree_toBag__Node(globals, current)) union Multiset(key)) == method_Tree_toBag__Node(globals, sys__result)
  ensures old(method_Tree_getColor__Node(globals, current)) == method_Tree_getColor__Node(globals, sys__result) || method_Tree_getColor__Node(globals, sys__result) && !(unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_getColor__Node(globals, sys__result.field_Node_left)) && !(unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_getColor__Node(globals, sys__result.field_Node_right))
{
  inhale false
}

method method_Tree_deleteKey__Integer(diz: Ref, current_thread_id: Int, globals: Ref, key: Int)
  requires diz != null
  requires 0 <= current_thread_id
  requires acc(diz.field_Tree_root, write)
  requires acc(method_Tree_tree_perm__Node(globals, diz.field_Tree_root), write)
  requires method_Tree_sorted__Node(globals, diz.field_Tree_root)
  requires method_Tree_noDoubleRed__Node(globals, diz.field_Tree_root)
  requires method_Tree_noDBlack__Node(globals, diz.field_Tree_root)
  requires method_Tree_blackBalanced__Node(globals, diz.field_Tree_root)
  ensures acc(diz.field_Tree_root, write)
  ensures acc(method_Tree_tree_perm__Node(globals, diz.field_Tree_root), write)
  ensures method_Tree_sorted__Node(globals, diz.field_Tree_root)
  ensures method_Tree_noDoubleRed__Node(globals, diz.field_Tree_root)
  ensures method_Tree_noDBlack__Node(globals, diz.field_Tree_root)
  ensures method_Tree_blackBalanced__Node(globals, diz.field_Tree_root)
{
  inhale false
}

method method_Tree_fixDBlackLeft__Node(diz: Ref, current_thread_id: Int, globals: Ref, current: Ref) returns (sys__result: Ref)
  requires diz != null
  requires 0 <= current_thread_id
  requires current != null
  requires acc(method_Tree_tree_perm__Node(globals, current), write)
  requires method_Tree_sorted__Node(globals, current)
  requires method_Tree_noDoubleRed__Node(globals, current)
  requires method_Tree_blackBalanced__Node(globals, current)
  requires method_Tree_dblackAtLeft__Node(globals, current)
  ensures acc(method_Tree_tree_perm__Node(globals, sys__result), write)
  ensures method_Tree_sorted__Node(globals, sys__result)
  ensures method_Tree_noDoubleRed__Node(globals, sys__result)
  ensures method_Tree_blackBalanced__Node(globals, sys__result)
  ensures method_Tree_noDBlack__Node(globals, sys__result) || method_Tree_dblackAtTop__Node(globals, sys__result)
  ensures old(method_Tree_toBag__Node(globals, current)) == method_Tree_toBag__Node(globals, sys__result)
  ensures !old(method_Tree_getColor__Node(globals, current)) ==> !method_Tree_getColor__Node(globals, sys__result)
  ensures old(method_Tree_blackHeight__Node(globals, current)) == method_Tree_blackHeight__Node(globals, sys__result)
{
  inhale false
}

method method_Tree_fixDBlackRight__Node(diz: Ref, current_thread_id: Int, globals: Ref, current: Ref) returns (sys__result: Ref)
  requires diz != null
  requires 0 <= current_thread_id
  requires current != null
  requires acc(method_Tree_tree_perm__Node(globals, current), write)
  requires method_Tree_sorted__Node(globals, current)
  requires method_Tree_noDoubleRed__Node(globals, current)
  requires method_Tree_blackBalanced__Node(globals, current)
  requires method_Tree_dblackAtRight__Node(globals, current)
  ensures acc(method_Tree_tree_perm__Node(globals, sys__result), write)
  ensures method_Tree_sorted__Node(globals, sys__result)
  ensures method_Tree_noDoubleRed__Node(globals, sys__result)
  ensures method_Tree_blackBalanced__Node(globals, sys__result)
  ensures method_Tree_noDBlack__Node(globals, sys__result) || method_Tree_dblackAtTop__Node(globals, sys__result)
  ensures old(method_Tree_toBag__Node(globals, current)) == method_Tree_toBag__Node(globals, sys__result)
  ensures !old(method_Tree_getColor__Node(globals, current)) ==> !method_Tree_getColor__Node(globals, sys__result)
  ensures old(method_Tree_blackHeight__Node(globals, current)) == method_Tree_blackHeight__Node(globals, sys__result)
{
  inhale false
}

method method_Tree_deleteRec__Node__Integer(diz: Ref, current_thread_id: Int, globals: Ref, current: Ref, key: Int) returns (sys__result: Ref)
  requires diz != null
  requires 0 <= current_thread_id
  requires current != null
  requires acc(method_Tree_tree_perm__Node(globals, current), write)
  requires method_Tree_sorted__Node(globals, current)
  requires method_Tree_noDoubleRed__Node(globals, current)
  requires method_Tree_blackBalanced__Node(globals, current)
  requires method_Tree_noDBlack__Node(globals, current)
  ensures acc(method_Tree_tree_perm__Node(globals, sys__result), write)
  ensures method_Tree_sorted__Node(globals, sys__result)
  ensures method_Tree_noDoubleRed__Node(globals, sys__result)
  ensures method_Tree_blackBalanced__Node(globals, sys__result)
  ensures method_Tree_noDBlack__Node(globals, sys__result) || method_Tree_dblackAtTop__Node(globals, sys__result)
  ensures ((key in old(method_Tree_toBag__Node(globals, current))) == 0 ? old(method_Tree_toBag__Node(globals, current)) == method_Tree_toBag__Node(globals, sys__result) : old(method_Tree_toBag__Node(globals, current)) == (method_Tree_toBag__Node(globals, sys__result) union Multiset(key)))
  ensures !old(method_Tree_getColor__Node(globals, current)) ==> !method_Tree_getColor__Node(globals, sys__result)
  ensures method_Tree_blackHeight__Node(globals, sys__result) == old(method_Tree_blackHeight__Node(globals, current))
{
  inhale false
}

method method_Tree_getMin__Node(diz: Ref, current_thread_id: Int, globals: Ref, current: Ref) returns (sys__result: Ref, resColor: Bool, resHeight: Int, resBag: Multiset[Int])
  requires diz != null
  requires 0 <= current_thread_id
  requires acc(method_Tree_tree_perm__Node(globals, current), write)
  requires method_Tree_validSubtree__Node(globals, current)
  ensures acc(method_Tree_tree_perm__Node(globals, sys__result), write)
  ensures method_Tree_validSubtree__Node(globals, sys__result)
  ensures acc(Wand_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$_for_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(globals, sys__result, globals, sys__result, globals, sys__result, resColor, resHeight, resBag, globals, current, globals, current, globals, current, old(method_Tree_getColor__Node(globals, current)), old(method_Tree_blackHeight__Node(globals, current)), old(method_Tree_toBag__Node(globals, current))), write)
  ensures current == null ==> sys__result == null
  ensures current != null ==> sys__result != null && (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in sys__result.field_Node_left == null) && method_Tree_larger__Bag$Integer$__Integer(old(method_Tree_toBag__Node(globals, current)), (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in sys__result.field_Node_key)) && 0 < (((unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in sys__result.field_Node_key) in old(method_Tree_toBag__Node(globals, current))))
  ensures resColor == method_Tree_getColor__Node(globals, sys__result)
  ensures resHeight == method_Tree_blackHeight__Node(globals, sys__result)
  ensures resBag == method_Tree_toBag__Node(globals, sys__result)
{
  inhale false
}

method method_Tree_search__Node__Integer(diz: Ref, current_thread_id: Int, globals: Ref, current: Ref, key: Int) returns (sys__result: Ref, resColor: Bool, resHeight: Int, resBag: Multiset[Int])
  requires diz != null
  requires 0 <= current_thread_id
  requires acc(method_Tree_tree_perm__Node(globals, current), write)
  requires method_Tree_validSubtree__Node(globals, current)
  ensures acc(method_Tree_tree_perm__Node(globals, sys__result), write)
  ensures method_Tree_validSubtree__Node(globals, sys__result)
  ensures current == null ==> sys__result == null
  ensures sys__result != null ==> (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in sys__result.field_Node_key == key)
  ensures acc(Wand_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$_for_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(globals, sys__result, globals, sys__result, globals, sys__result, resColor, resHeight, resBag, globals, current, globals, current, globals, current, old(method_Tree_getColor__Node(globals, current)), old(method_Tree_blackHeight__Node(globals, current)), old(method_Tree_toBag__Node(globals, current))), write)
  ensures resColor == method_Tree_getColor__Node(globals, sys__result)
  ensures resHeight == method_Tree_blackHeight__Node(globals, sys__result)
  ensures resBag == method_Tree_toBag__Node(globals, sys__result)
{
  inhale false
}

method method_Tree_rotateLeft__Node(diz: Ref, current_thread_id: Int, globals: Ref, node: Ref) returns (sys__result: Ref)
  requires diz != null
  requires 0 <= current_thread_id
  requires node != null
  requires acc(method_Tree_tree_perm__Node(globals, node), write)
  requires method_Tree_sorted__Node(globals, node)
  requires (unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in node.field_Node_right != null)
  requires !(unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_getColor__Node(globals, node.field_Node_left)) || !(unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_getColor__Node(globals, node.field_Node_right))
  requires !method_Tree_getColor__Node(globals, node) || (unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in !(unfolding acc(method_Tree_tree_perm__Node(globals, node.field_Node_right), write) in method_Tree_getColor__Node(globals, node.field_Node_right.field_Node_right)))
  requires method_Tree_noDoubleRed__Node(globals, node) || method_Tree_dbRedAtRight__Node(globals, node) || !method_Tree_getColor__Node(globals, node) && (unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_noDoubleRed__Node(globals, node.field_Node_left) && method_Tree_dbRedAtRight__Node(globals, node.field_Node_right))
  requires method_Tree_noDBlack__Node(globals, node) || method_Tree_dblackAtLeft__Node(globals, node)
  requires (unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_blackBalanced__Node(globals, node.field_Node_left) && method_Tree_blackBalanced__Node(globals, node.field_Node_right))
  requires (unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_blackHeight__Node(globals, node.field_Node_left) == (unfolding acc(method_Tree_tree_perm__Node(globals, node.field_Node_right), write) in method_Tree_blackHeight__Node(globals, node.field_Node_right.field_Node_left)))
  ensures sys__result != null
  ensures acc(method_Tree_tree_perm__Node(globals, sys__result), write)
  ensures method_Tree_sorted__Node(globals, sys__result)
  ensures (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in sys__result.field_Node_left != null)
  ensures old(method_Tree_toBag__Node(globals, node)) == method_Tree_toBag__Node(globals, sys__result)
  ensures old(method_Tree_getColor__Node(globals, node)) == method_Tree_getColor__Node(globals, sys__result)
  ensures old((unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_getColor__Node(globals, node.field_Node_right))) == (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_getColor__Node(globals, sys__result.field_Node_left))
  ensures old((unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in (unfolding acc(method_Tree_tree_perm__Node(globals, node.field_Node_right), write) in method_Tree_getColor__Node(globals, node.field_Node_right.field_Node_right)))) == (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_getColor__Node(globals, sys__result.field_Node_right))
  ensures old(method_Tree_blackHeight__Node(globals, node)) == method_Tree_blackHeight__Node(globals, sys__result)
  ensures (old(method_Tree_dbRedAtRight__Node(globals, node)) ? method_Tree_dbRedAtLeft__Node(globals, sys__result) : method_Tree_noDoubleRed__Node(globals, sys__result))
  ensures old(method_Tree_noDBlack__Node(globals, node)) ==> method_Tree_noDBlack__Node(globals, sys__result)
  ensures old(method_Tree_dblackAtLeft__Node(globals, node)) ==> method_Tree_dblackAtLeftLeft__Node(globals, sys__result)
  ensures (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_blackBalanced__Node(globals, sys__result.field_Node_left) && method_Tree_blackBalanced__Node(globals, sys__result.field_Node_right))
  ensures (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_blackHeight__Node(globals, sys__result.field_Node_right) == (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result.field_Node_left), write) in method_Tree_blackHeight__Node(globals, sys__result.field_Node_left.field_Node_right)))
{
  inhale false
}

method method_Tree_rotateRight__Node(diz: Ref, current_thread_id: Int, globals: Ref, node: Ref) returns (sys__result: Ref)
  requires diz != null
  requires 0 <= current_thread_id
  requires node != null
  requires acc(method_Tree_tree_perm__Node(globals, node), write)
  requires method_Tree_sorted__Node(globals, node)
  requires (unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in node.field_Node_left != null)
  requires !(unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_getColor__Node(globals, node.field_Node_left)) || !(unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_getColor__Node(globals, node.field_Node_right))
  requires !method_Tree_getColor__Node(globals, node) || (unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in !(unfolding acc(method_Tree_tree_perm__Node(globals, node.field_Node_left), write) in method_Tree_getColor__Node(globals, node.field_Node_left.field_Node_left)))
  requires method_Tree_noDoubleRed__Node(globals, node) || method_Tree_dbRedAtLeft__Node(globals, node) || !method_Tree_getColor__Node(globals, node) && (unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_noDoubleRed__Node(globals, node.field_Node_right) && method_Tree_dbRedAtLeft__Node(globals, node.field_Node_left))
  requires method_Tree_noDBlack__Node(globals, node) || method_Tree_dblackAtRight__Node(globals, node)
  requires (unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_blackBalanced__Node(globals, node.field_Node_left) && method_Tree_blackBalanced__Node(globals, node.field_Node_right))
  requires (unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_blackHeight__Node(globals, node.field_Node_right) == (unfolding acc(method_Tree_tree_perm__Node(globals, node.field_Node_left), write) in method_Tree_blackHeight__Node(globals, node.field_Node_left.field_Node_right)))
  ensures sys__result != null
  ensures acc(method_Tree_tree_perm__Node(globals, sys__result), write)
  ensures method_Tree_sorted__Node(globals, sys__result)
  ensures (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in sys__result.field_Node_right != null)
  ensures old(method_Tree_toBag__Node(globals, node)) == method_Tree_toBag__Node(globals, sys__result)
  ensures old(method_Tree_getColor__Node(globals, node)) == method_Tree_getColor__Node(globals, sys__result)
  ensures old((unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_getColor__Node(globals, node.field_Node_left))) == (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_getColor__Node(globals, sys__result.field_Node_right))
  ensures old((unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in (unfolding acc(method_Tree_tree_perm__Node(globals, node.field_Node_left), write) in method_Tree_getColor__Node(globals, node.field_Node_left.field_Node_left)))) == (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_getColor__Node(globals, sys__result.field_Node_left))
  ensures old(method_Tree_blackHeight__Node(globals, node)) == method_Tree_blackHeight__Node(globals, sys__result)
  ensures (old(method_Tree_dbRedAtLeft__Node(globals, node)) ? method_Tree_dbRedAtRight__Node(globals, sys__result) : method_Tree_noDoubleRed__Node(globals, sys__result))
  ensures old(method_Tree_noDBlack__Node(globals, node)) ==> method_Tree_noDBlack__Node(globals, sys__result)
  ensures old(method_Tree_dblackAtRight__Node(globals, node)) ==> method_Tree_dblackAtRightRight__Node(globals, sys__result)
  ensures (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_blackBalanced__Node(globals, sys__result.field_Node_left) && method_Tree_blackBalanced__Node(globals, sys__result.field_Node_right))
  ensures (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_blackHeight__Node(globals, sys__result.field_Node_left) == (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result.field_Node_right), write) in method_Tree_blackHeight__Node(globals, sys__result.field_Node_right.field_Node_left)))
{
  inhale false
}

method constructor_Tree_Tree(current_thread_id: Int, globals: Ref) returns (sys__result: Ref)
  requires 0 <= current_thread_id
  ensures sys__result != null
  ensures type_of(sys__result) == class_Tree()
  ensures acc(sys__result.field_Tree_root, write) && sys__result.field_Tree_root == null
{
  inhale false
}

method array_new_Bag_Integer_(size0: Int) returns (sys__result: Multiset[Int])
  ensures 0 < size0 ==> sys__result == Multiset[Int]()
{
  inhale false
}

method array_new_Bag_Node_(size0: Int) returns (sys__result: Multiset[Ref])
  ensures 0 < size0 ==> sys__result == Multiset[Ref]()
{
  inhale false
}

method array_new_Sequence_NodeList_(size0: Int) returns (sys__result: Seq[Ref])
  ensures 0 < size0 ==> sys__result == Seq[Ref]()
{
  inhale false
}

method array_new_Sequence_Integer_(size0: Int) returns (sys__result: Seq[Int])
  ensures 0 < size0 ==> sys__result == Seq[Int]()
{
  inhale false
}

method array_new_Sequence_Node_(size0: Int) returns (sys__result: Seq[Ref])
  ensures 0 < size0 ==> sys__result == Seq[Ref]()
{
  inhale false
}

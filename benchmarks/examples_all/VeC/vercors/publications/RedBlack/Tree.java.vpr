domain TYPE {
  
  unique function class_java_DOT_lang_DOT_Object(): TYPE
  
  unique function class_java_DOT_lang_DOT_Number(): TYPE
  
  unique function class_java_DOT_lang_DOT_Class(): TYPE
  
  unique function class_java_DOT_lang_DOT_Integer(): TYPE
  
  unique function class_Tree(): TYPE
  
  unique function class_Node(): TYPE
  
  unique function class_EncodedGlobalVariables(): TYPE
  
  unique function class_MagicWands(): TYPE
  
  function directSuperclass(t: TYPE): TYPE
  
  function type_of(val: Ref): TYPE
  
  axiom java_DOT_lang_DOT_Object_directSuperclass {
    directSuperclass(class_java_DOT_lang_DOT_Object()) == class_java_DOT_lang_DOT_Object()
  }
  
  axiom java_DOT_lang_DOT_Number_directSuperclass {
    directSuperclass(class_java_DOT_lang_DOT_Number()) == class_java_DOT_lang_DOT_Object()
  }
  
  axiom java_DOT_lang_DOT_Class_directSuperclass {
    directSuperclass(class_java_DOT_lang_DOT_Class()) == class_java_DOT_lang_DOT_Object()
  }
  
  axiom java_DOT_lang_DOT_Integer_directSuperclass {
    directSuperclass(class_java_DOT_lang_DOT_Integer()) == class_java_DOT_lang_DOT_Number()
  }
  
  axiom Tree_directSuperclass {
    directSuperclass(class_Tree()) == class_java_DOT_lang_DOT_Object()
  }
  
  axiom Node_directSuperclass {
    directSuperclass(class_Node()) == class_java_DOT_lang_DOT_Object()
  }
  
  axiom EncodedGlobalVariables_directSuperclass {
    directSuperclass(class_EncodedGlobalVariables()) == class_java_DOT_lang_DOT_Object()
  }
  
  axiom MagicWands_directSuperclass {
    directSuperclass(class_MagicWands()) == class_java_DOT_lang_DOT_Object()
  }
}

domain frac {
  
  function frac_val(a: frac): Perm
  
  axiom frac_eq {
    (forall a: frac, b: frac :: { frac_val(a),frac_val(b) } (frac_val(a) == frac_val(b)) == (a == b))
  }
  
  axiom frac_bound {
    (forall a: frac :: { frac_val(a) } 0 / 1 < frac_val(a) && frac_val(a) <= 1 / 1)
  }
}

domain zfrac {
  
  function zfrac_val(a: zfrac): Perm
  
  axiom zfrac_eq {
    (forall a: zfrac, b: zfrac :: { zfrac_val(a),zfrac_val(b) } (zfrac_val(a) == zfrac_val(b)) == (a == b))
  }
  
  axiom zfrac_bound {
    (forall a: zfrac :: { zfrac_val(a) } 0 / 1 <= zfrac_val(a) && zfrac_val(a) <= 1 / 1)
  }
}

//  a field 
field possibly_illegal_cast: Ref

//  a field 
field field_Tree_root: Ref

//  a field 
field field_Node_key: Int

//  a field 
field field_Node_left: Ref

//  a field 
field field_Node_right: Ref

//  a field 
field field_Node_color: Bool

//  a field 
field field_Node_dblack: Bool

//  a field 
field field_Node_dblackNull: Bool

//  a field 
field field_java_DOT_lang_DOT_Integer_MIN_VALUE: Int

//  a field 
field field_java_DOT_lang_DOT_Integer_MAX_VALUE: Int

//  a field 
field field_java_DOT_lang_DOT_Integer_TYPE: Ref

//  a field 
field field_java_DOT_lang_DOT_Integer_SIZE: Int

//  a field 
field field_java_DOT_lang_DOT_Integer_BYTES: Int

function instanceof(t: TYPE, u: TYPE): Bool
  ensures result == (t == u || directSuperclass(t) == u)


function method_Tree_validTree__Node(globals: Ref, current: Ref): Bool
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
{
  method_Tree_validSubtree__Node(globals, current) && !method_Tree_getColor__Node(globals, current)
}

function method_Tree_validSubtree__Node(globals: Ref, current: Ref): Bool
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
  requires method_Tree_sortedCritEqualLemma__Node(globals, current)
{
  method_Tree_blackBalanced__Node(globals, current) && method_Tree_noDBlack__Node(globals, current) && method_Tree_noDoubleRed__Node(globals, current) && method_Tree_sorted__Node(globals, current)
}

function method_Tree_blackHeight__Node(globals: Ref, current: Ref): Int
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
  ensures 1 <= result
{
  (unfolding acc(method_Tree_tree_perm__Node(globals, current), wildcard) in (current == null ? 1 : (current.field_Node_dblackNull ? 2 : method_Tree_getBlacks__Node(globals, current) + (method_Tree_blackHeight__Node(globals, current.field_Node_right) < method_Tree_blackHeight__Node(globals, current.field_Node_left) ? method_Tree_blackHeight__Node(globals, current.field_Node_left) : method_Tree_blackHeight__Node(globals, current.field_Node_right)))))
}

function method_Tree_getBlacks__Node(globals: Ref, current: Ref): Int
  requires current != null ==> acc(current.field_Node_color, wildcard) && acc(current.field_Node_dblack, wildcard)
{
  (current == null ? 1 : (current.field_Node_color ? 0 : (current.field_Node_dblack ? 2 : 1)))
}

function method_Tree_isDBlack__Node(globals: Ref, current: Ref): Bool
  requires current != null ==> acc(current.field_Node_dblack, wildcard)
{
  current != null && current.field_Node_dblack
}

function method_Tree_blackBalanced__Node(globals: Ref, current: Ref): Bool
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
{
  (unfolding acc(method_Tree_tree_perm__Node(globals, current), wildcard) in (current == null ? true : method_Tree_blackHeight__Node(globals, current.field_Node_left) == method_Tree_blackHeight__Node(globals, current.field_Node_right) && method_Tree_blackBalanced__Node(globals, current.field_Node_left) && method_Tree_blackBalanced__Node(globals, current.field_Node_right)))
}

function method_Tree_noDBlack__Node(globals: Ref, current: Ref): Bool
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
{
  current != null ==> (unfolding acc(method_Tree_tree_perm__Node(globals, current), wildcard) in !method_Tree_isDBlack__Node(globals, current) && method_Tree_noDBlack__Node(globals, current.field_Node_left) && method_Tree_noDBlack__Node(globals, current.field_Node_right))
}

function method_Tree_dblackAtTop__Node(globals: Ref, current: Ref): Bool
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
{
  (unfolding acc(method_Tree_tree_perm__Node(globals, current), wildcard) in method_Tree_isDBlack__Node(globals, current) && method_Tree_noDBlack__Node(globals, current.field_Node_left) && method_Tree_noDBlack__Node(globals, current.field_Node_right))
}

function method_Tree_dblackAtLeft__Node(globals: Ref, current: Ref): Bool
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
{
  (unfolding acc(method_Tree_tree_perm__Node(globals, current), wildcard) in current != null && !method_Tree_isDBlack__Node(globals, current) && method_Tree_dblackAtTop__Node(globals, current.field_Node_left) && method_Tree_noDBlack__Node(globals, current.field_Node_right))
}

function method_Tree_dblackAtLeftLeft__Node(globals: Ref, current: Ref): Bool
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
{
  (unfolding acc(method_Tree_tree_perm__Node(globals, current), wildcard) in current != null && !method_Tree_isDBlack__Node(globals, current) && method_Tree_dblackAtLeft__Node(globals, current.field_Node_left) && method_Tree_noDBlack__Node(globals, current.field_Node_right))
}

function method_Tree_dblackAtRight__Node(globals: Ref, current: Ref): Bool
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
{
  (unfolding acc(method_Tree_tree_perm__Node(globals, current), wildcard) in current != null && !method_Tree_isDBlack__Node(globals, current) && method_Tree_noDBlack__Node(globals, current.field_Node_left) && method_Tree_dblackAtTop__Node(globals, current.field_Node_right))
}

function method_Tree_dblackAtRightRight__Node(globals: Ref, current: Ref): Bool
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
{
  (unfolding acc(method_Tree_tree_perm__Node(globals, current), wildcard) in current != null && !method_Tree_isDBlack__Node(globals, current) && method_Tree_noDBlack__Node(globals, current.field_Node_left) && method_Tree_dblackAtRight__Node(globals, current.field_Node_right))
}

function method_Tree_noDoubleRed__Node(globals: Ref, current: Ref): Bool
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
{
  current != null ==> (unfolding acc(method_Tree_tree_perm__Node(globals, current), wildcard) in (!method_Tree_getColor__Node(globals, current) || !method_Tree_getColor__Node(globals, current.field_Node_left) && !method_Tree_getColor__Node(globals, current.field_Node_right)) && method_Tree_noDoubleRed__Node(globals, current.field_Node_left) && method_Tree_noDoubleRed__Node(globals, current.field_Node_right))
}

function method_Tree_dbRedAtLeft__Node(globals: Ref, current: Ref): Bool
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
{
  current != null && (unfolding acc(method_Tree_tree_perm__Node(globals, current), wildcard) in method_Tree_getColor__Node(globals, current) && (method_Tree_getColor__Node(globals, current.field_Node_left) && !method_Tree_getColor__Node(globals, current.field_Node_right)) && method_Tree_noDoubleRed__Node(globals, current.field_Node_left) && method_Tree_noDoubleRed__Node(globals, current.field_Node_right))
}

function method_Tree_dbRedAtRight__Node(globals: Ref, current: Ref): Bool
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
{
  current != null && (unfolding acc(method_Tree_tree_perm__Node(globals, current), wildcard) in method_Tree_getColor__Node(globals, current) && (!method_Tree_getColor__Node(globals, current.field_Node_left) && method_Tree_getColor__Node(globals, current.field_Node_right)) && method_Tree_noDoubleRed__Node(globals, current.field_Node_left) && method_Tree_noDoubleRed__Node(globals, current.field_Node_right))
}

function method_Tree_toBag__Node(globals: Ref, current: Ref): Multiset[Int]
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
{
  (current == null ? Multiset[Int]() : (unfolding acc(method_Tree_tree_perm__Node(globals, current), wildcard) in (current.field_Node_dblackNull ? Multiset[Int]() : ((method_Tree_toBag__Node(globals, current.field_Node_left) union Multiset(current.field_Node_key)) union method_Tree_toBag__Node(globals, current.field_Node_right)))))
}

function method_Tree_subbag__Bag$Integer$__Bag$Integer$(b1: Multiset[Int], b2: Multiset[Int]): Bool
{
  (forall i: Int :: { (i in b1) } { (i in b2) } (i in b1) != 0 ==> ((i in b1)) <= ((i in b2)))
}

function method_Tree_toSeq__Node(globals: Ref, current: Ref): Seq[Ref]
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
{
  (current == null ? Seq[Ref]() : (unfolding acc(method_Tree_tree_perm__Node(globals, current), wildcard) in (current.field_Node_dblackNull ? Seq[Ref]() : method_Tree_toSeq__Node(globals, current.field_Node_left) ++ Seq(current) ++ method_Tree_toSeq__Node(globals, current.field_Node_right))))
}

function method_Tree_toSeqKeys__Node(globals: Ref, current: Ref): Seq[Int]
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
  ensures |result| == |method_Tree_toSeq__Node(globals, current)|
{
  (current == null ? Seq[Int]() : (unfolding acc(method_Tree_tree_perm__Node(globals, current), wildcard) in (current.field_Node_dblackNull ? Seq[Int]() : method_Tree_toSeqKeys__Node(globals, current.field_Node_left) ++ Seq(current.field_Node_key) ++ method_Tree_toSeqKeys__Node(globals, current.field_Node_right))))
}

function method_Tree_smaller__Bag$Integer$__Integer(b: Multiset[Int], max: Int): Bool
{
  (forall i: Int :: { (i in b) } (i in b) != 0 ==> i <= max)
}

function method_Tree_larger__Bag$Integer$__Integer(b: Multiset[Int], min: Int): Bool
{
  (forall i: Int :: { (i in b) } (i in b) != 0 ==> min <= i)
}

function method_Tree_larger__Bag$Integer$__Bag$Integer$(b1: Multiset[Int], b2: Multiset[Int]): Bool
{
  (forall i: Int :: { (i in b2) } (i in b2) != 0 ==> method_Tree_larger__Bag$Integer$__Integer(b1, i))
}

function method_Tree_sorted__Node(globals: Ref, current: Ref): Bool
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
{
  current != null ==> (unfolding acc(method_Tree_tree_perm__Node(globals, current), wildcard) in method_Tree_smaller__Bag$Integer$__Integer(method_Tree_toBag__Node(globals, current.field_Node_left), current.field_Node_key) && method_Tree_larger__Bag$Integer$__Integer(method_Tree_toBag__Node(globals, current.field_Node_right), current.field_Node_key) && method_Tree_sorted__Node(globals, current.field_Node_left) && method_Tree_sorted__Node(globals, current.field_Node_right))
}

function method_Tree_sortedKeySeq__Node(globals: Ref, current: Ref): Bool
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
{
  current != null ==> (unfolding acc(method_Tree_tree_perm__Node(globals, current), wildcard) in (forall i: Int :: { method_Tree_toSeqKeys__Node(globals, current.field_Node_left)[i] } 0 <= i && i < |method_Tree_toSeqKeys__Node(globals, current.field_Node_left)| ==> method_Tree_toSeqKeys__Node(globals, current.field_Node_left)[i] <= current.field_Node_key) && (forall i: Int :: { method_Tree_toSeqKeys__Node(globals, current.field_Node_right)[i] } 0 <= i && i < |method_Tree_toSeqKeys__Node(globals, current.field_Node_right)| ==> current.field_Node_key <= method_Tree_toSeqKeys__Node(globals, current.field_Node_right)[i]) && method_Tree_sortedKeySeq__Node(globals, current.field_Node_left) && method_Tree_sortedKeySeq__Node(globals, current.field_Node_right))
}

function method_Tree_sortedCritEqualLemma__Node(globals: Ref, current: Ref): Bool
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
  ensures result
  ensures method_Tree_sorted__Node(globals, current) == method_Tree_sortedKeySeq__Node(globals, current)


function method_Tree_getColor__Node(globals: Ref, node: Ref): Bool
  requires acc(method_Tree_tree_perm__Node(globals, node), wildcard)
{
  node != null && (unfolding acc(method_Tree_tree_perm__Node(globals, node), wildcard) in node.field_Node_color)
}

function method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(globals: Ref, current: Ref, oldColor: Bool, oldHeight: Int, oldBag: Multiset[Int]): Bool
  requires acc(method_Tree_tree_perm__Node(globals, current), wildcard)
{
  method_Tree_getColor__Node(globals, current) == oldColor && method_Tree_blackHeight__Node(globals, current) == oldHeight && method_Tree_toBag__Node(globals, current) == oldBag
}

function new_frac(x: Perm): frac
  requires 0 / 1 < x && x <= 1 / 1
  ensures frac_val(result) == x


function new_zfrac(x: Perm): zfrac
  requires 0 / 1 <= x && x <= 1 / 1
  ensures zfrac_val(result) == x


predicate method_Tree_tree_perm__Node(globals: Ref, current: Ref) {
  current != null ==> acc(current.field_Node_key, write) && acc(current.field_Node_left, write) && acc(current.field_Node_right, write) && acc(current.field_Node_color, write) && acc(current.field_Node_dblack, write) && acc(current.field_Node_dblackNull, write) && acc(globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE, wildcard) && globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE <= current.field_Node_key && acc(method_Tree_tree_perm__Node(globals, current.field_Node_left), write) && acc(method_Tree_tree_perm__Node(globals, current.field_Node_right), write) && (current.field_Node_dblackNull ==> current.field_Node_left == null && current.field_Node_right == null && !current.field_Node_color && current.field_Node_dblack) && (current.field_Node_dblack ==> !current.field_Node_color)
}

predicate Wand_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$_for_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(x_0: Ref, x_1: Ref, x_2: Ref, x_3: Ref, x_4: Ref, x_5: Ref, x_6: Bool, x_7: Int, x_8: Multiset[Int], x_9: Ref, x_10: Ref, x_11: Ref, x_12: Ref, x_13: Ref, x_14: Ref, x_15: Bool, x_16: Int, x_17: Multiset[Int]) 

method constructor_java_DOT_lang_DOT_Object_java_DOT_lang_DOT_Object(current_thread_id: Int, globals: Ref) returns (sys__result: Ref)
  requires 0 <= current_thread_id
  ensures sys__result != null
  ensures type_of(sys__result) == class_java_DOT_lang_DOT_Object()
{
  inhale false
}

method internal_java_DOT_lang_DOT_Object_java_DOT_lang_DOT_Object(current_thread_id: Int, globals: Ref) returns (sys__result: Ref)
  requires 0 <= current_thread_id
  ensures sys__result != null
  ensures type_of(sys__result) == class_java_DOT_lang_DOT_Object()
{
  inhale false
}

method constructor_java_DOT_lang_DOT_Number_java_DOT_lang_DOT_Number(current_thread_id: Int, globals: Ref) returns (sys__result: Ref)
  requires 0 <= current_thread_id
  ensures sys__result != null
  ensures type_of(sys__result) == class_java_DOT_lang_DOT_Number()
{
  inhale false
}

method internal_java_DOT_lang_DOT_Number_java_DOT_lang_DOT_Number(current_thread_id: Int, globals: Ref) returns (sys__result: Ref)
  requires 0 <= current_thread_id
  ensures sys__result != null
  ensures type_of(sys__result) == class_java_DOT_lang_DOT_Number()
{
  inhale false
}

method method_Tree_subbagCompareLemma__Bag$Integer$__Bag$Integer$__Bag$Integer$__Integer(current_thread_id: Int, globals: Ref, bigBag: Multiset[Int], subBag: Multiset[Int], diff: Multiset[Int], key: Int)
  requires 0 <= current_thread_id
  requires bigBag == (subBag union diff)
  ensures method_Tree_smaller__Bag$Integer$__Integer(bigBag, key) ==> method_Tree_smaller__Bag$Integer$__Integer(subBag, key)
  ensures method_Tree_larger__Bag$Integer$__Integer(bigBag, key) ==> method_Tree_larger__Bag$Integer$__Integer(subBag, key)
{
  // assert
  assert (forall i__1: Int :: { (i__1 in subBag) } (i__1 in subBag) != 0 ==> (i__1 in bigBag) != 0)
  label method_end_method_Tree_subbagCompareLemma__Bag$Integer$__Bag$Integer$__Bag$Integer$__Integer_1
}

method method_Tree_makeWand__Node__Node__Node__Node__Boolean__Integer__Bag$Integer$__Boolean__Integer__Bag$Integer$__Boolean__Integer__Bag$Integer$__Boolean(current_thread_id: Int, globals: Ref, res: Ref, current: Ref, containingSubtree: Ref, otherSubtree: Ref, oldColor: Bool, oldHeight: Int, oldBag: Multiset[Int], subColor: Bool, subHeight: Int, subBag: Multiset[Int], resColor: Bool, resHeight: Int, resBag: Multiset[Int], goLeft: Bool)
  requires 0 <= current_thread_id
  requires current != null
  requires acc(current.field_Node_key, write)
  requires acc(current.field_Node_left, write)
  requires acc(current.field_Node_right, write)
  requires acc(current.field_Node_color, write)
  requires acc(current.field_Node_dblack, write)
  requires acc(current.field_Node_dblackNull, write)
  requires acc(globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE, wildcard)
  requires globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE <= current.field_Node_key
  requires acc(method_Tree_tree_perm__Node(globals, otherSubtree), write)
  requires current.field_Node_dblackNull ==> current.field_Node_left == null && current.field_Node_right == null && !current.field_Node_color && current.field_Node_dblack
  requires current.field_Node_dblack ==> !current.field_Node_color
  requires (goLeft ? containingSubtree == current.field_Node_left && otherSubtree == current.field_Node_right : containingSubtree == current.field_Node_right && otherSubtree == current.field_Node_left)
  requires acc(Wand_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$_for_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(globals, res, globals, res, globals, res, resColor, resHeight, resBag, globals, containingSubtree, globals, containingSubtree, globals, containingSubtree, subColor, subHeight, subBag), write)
  requires subHeight == method_Tree_blackHeight__Node(globals, otherSubtree) && method_Tree_blackBalanced__Node(globals, otherSubtree)
  requires oldHeight == method_Tree_getBlacks__Node(globals, current) + subHeight
  requires method_Tree_noDBlack__Node(globals, otherSubtree)
  requires !current.field_Node_dblack
  requires current.field_Node_color == oldColor
  requires (!current.field_Node_color || !subColor && !method_Tree_getColor__Node(globals, otherSubtree)) && method_Tree_noDoubleRed__Node(globals, otherSubtree)
  requires oldBag == ((subBag union method_Tree_toBag__Node(globals, otherSubtree)) union Multiset(current.field_Node_key))
  requires (goLeft ? method_Tree_smaller__Bag$Integer$__Integer(subBag, current.field_Node_key) && method_Tree_larger__Bag$Integer$__Integer(method_Tree_toBag__Node(globals, otherSubtree), current.field_Node_key) : method_Tree_larger__Bag$Integer$__Integer(subBag, current.field_Node_key) && method_Tree_smaller__Bag$Integer$__Integer(method_Tree_toBag__Node(globals, otherSubtree), current.field_Node_key))
  requires method_Tree_sorted__Node(globals, otherSubtree)
  ensures acc(Wand_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$_for_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(globals, res, globals, res, globals, res, resColor, resHeight, resBag, globals, current, globals, current, globals, current, oldColor, oldHeight, oldBag), write)
{
  exhale acc(current.field_Node_key, write) && acc(current.field_Node_left, write) && acc(current.field_Node_right, write) && acc(current.field_Node_color, write) && acc(current.field_Node_dblack, write) && acc(current.field_Node_dblackNull, write) && acc(globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE, wildcard) && globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE <= current.field_Node_key && acc(method_Tree_tree_perm__Node(globals, otherSubtree), write) && ((current.field_Node_dblackNull ==> current.field_Node_left == null && current.field_Node_right == null && !current.field_Node_color && current.field_Node_dblack) && (current.field_Node_dblack ==> !current.field_Node_color)) && (goLeft ? containingSubtree == current.field_Node_left && otherSubtree == current.field_Node_right : containingSubtree == current.field_Node_right && otherSubtree == current.field_Node_left) && acc(Wand_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$_for_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(globals, res, globals, res, globals, res, resColor, resHeight, resBag, globals, containingSubtree, globals, containingSubtree, globals, containingSubtree, subColor, subHeight, subBag), write) && (subHeight == method_Tree_blackHeight__Node(globals, otherSubtree) && method_Tree_blackBalanced__Node(globals, otherSubtree)) && oldHeight == method_Tree_getBlacks__Node(globals, current) + subHeight && (method_Tree_noDBlack__Node(globals, otherSubtree) && !current.field_Node_dblack) && current.field_Node_color == oldColor && ((!current.field_Node_color || !subColor && !method_Tree_getColor__Node(globals, otherSubtree)) && method_Tree_noDoubleRed__Node(globals, otherSubtree)) && oldBag == ((subBag union method_Tree_toBag__Node(globals, otherSubtree)) union Multiset(current.field_Node_key)) && (goLeft ? method_Tree_smaller__Bag$Integer$__Integer(subBag, current.field_Node_key) && method_Tree_larger__Bag$Integer$__Integer(method_Tree_toBag__Node(globals, otherSubtree), current.field_Node_key) : method_Tree_larger__Bag$Integer$__Integer(subBag, current.field_Node_key) && method_Tree_smaller__Bag$Integer$__Integer(method_Tree_toBag__Node(globals, otherSubtree), current.field_Node_key)) && method_Tree_sorted__Node(globals, otherSubtree)
  inhale acc(Wand_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$_for_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(globals, res, globals, res, globals, res, resColor, resHeight, resBag, globals, current, globals, current, globals, current, oldColor, oldHeight, oldBag), write)
  label method_end_method_Tree_makeWand__Node__Node__Node__Node__Boolean__Integer__Bag$Integer$__Boolean__Integer__Bag$Integer$__Boolean__Integer__Bag$Integer$__Boolean_4
}

method method_Tree_isBlack__Node(current_thread_id: Int, globals: Ref, node: Ref) returns (sys__result: Bool)
  requires 0 <= current_thread_id
  requires acc(method_Tree_tree_perm__Node(globals, node), 1 / 2)
  ensures acc(method_Tree_tree_perm__Node(globals, node), 1 / 2)
  ensures sys__result == (node == null || (unfolding acc(method_Tree_tree_perm__Node(globals, node), 1 / 2) in !node.field_Node_color))
{
  var sys__local__result__2: Bool
  var res__3: Bool
  unfold acc(method_Tree_tree_perm__Node(globals, node), 1 / 2)
  res__3 := node == null || !node.field_Node_color
  fold acc(method_Tree_tree_perm__Node(globals, node), 1 / 2)
  sys__local__result__2 := res__3
  // assert
  assert acc(method_Tree_tree_perm__Node(globals, node), 1 / 2) && sys__local__result__2 == (node == null || (unfolding acc(method_Tree_tree_perm__Node(globals, node), 1 / 2) in !node.field_Node_color))
  goto __return_isBlack
  label __return_isBlack
  sys__result := sys__local__result__2
  // assert
  assert acc(method_Tree_tree_perm__Node(globals, node), 1 / 2) && sys__result == (node == null || (unfolding acc(method_Tree_tree_perm__Node(globals, node), 1 / 2) in !node.field_Node_color))
  inhale false
  label method_end_method_Tree_isBlack__Node_6
}

method method_Tree_isRed__Node(current_thread_id: Int, globals: Ref, node: Ref) returns (sys__result: Bool)
  requires 0 <= current_thread_id
  requires acc(method_Tree_tree_perm__Node(globals, node), 1 / 2)
  ensures acc(method_Tree_tree_perm__Node(globals, node), 1 / 2)
  ensures sys__result == (node != null && (unfolding acc(method_Tree_tree_perm__Node(globals, node), 1 / 2) in node.field_Node_color))
{
  var sys__local__result__4: Bool
  var res__5: Bool
  unfold acc(method_Tree_tree_perm__Node(globals, node), 1 / 2)
  res__5 := node != null && node.field_Node_color
  fold acc(method_Tree_tree_perm__Node(globals, node), 1 / 2)
  sys__local__result__4 := res__5
  // assert
  assert acc(method_Tree_tree_perm__Node(globals, node), 1 / 2) && sys__local__result__4 == (node != null && (unfolding acc(method_Tree_tree_perm__Node(globals, node), 1 / 2) in node.field_Node_color))
  goto __return_isRed
  label __return_isRed
  sys__result := sys__local__result__4
  // assert
  assert acc(method_Tree_tree_perm__Node(globals, node), 1 / 2) && sys__result == (node != null && (unfolding acc(method_Tree_tree_perm__Node(globals, node), 1 / 2) in node.field_Node_color))
  inhale false
  label method_end_method_Tree_isRed__Node_8
}

method method_Tree_makeNodeSingleBlack__Node(current_thread_id: Int, globals: Ref, node: Ref) returns (sys__result: Ref)
  requires 0 <= current_thread_id
  requires acc(method_Tree_tree_perm__Node(globals, node), write)
  requires node != null
  ensures acc(method_Tree_tree_perm__Node(globals, sys__result), write)
  ensures (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_getBlacks__Node(globals, sys__result) == 1)
  ensures old(method_Tree_sorted__Node(globals, node)) ==> method_Tree_sorted__Node(globals, sys__result)
  ensures old(method_Tree_blackBalanced__Node(globals, node)) ==> method_Tree_blackBalanced__Node(globals, sys__result)
  ensures old(method_Tree_noDoubleRed__Node(globals, node) || (method_Tree_dbRedAtLeft__Node(globals, node) || method_Tree_dbRedAtRight__Node(globals, node))) ==> method_Tree_noDoubleRed__Node(globals, sys__result)
  ensures old(method_Tree_toBag__Node(globals, node)) == method_Tree_toBag__Node(globals, sys__result)
  ensures (old((unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_getBlacks__Node(globals, node))) == 2 ? old(method_Tree_blackHeight__Node(globals, node)) - 1 == method_Tree_blackHeight__Node(globals, sys__result) : (old((unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_getBlacks__Node(globals, node))) == 1 ? old(method_Tree_blackHeight__Node(globals, node)) == method_Tree_blackHeight__Node(globals, sys__result) : old(method_Tree_blackHeight__Node(globals, node)) + 1 == method_Tree_blackHeight__Node(globals, sys__result)))
  ensures old(method_Tree_dblackAtTop__Node(globals, node)) ==> method_Tree_noDBlack__Node(globals, sys__result)
  ensures old(method_Tree_noDBlack__Node(globals, node)) ==> method_Tree_noDBlack__Node(globals, sys__result)
{
  var res__7: Ref
  var sys__local__result__6: Ref
  unfold acc(method_Tree_tree_perm__Node(globals, node), write)
  if (node.field_Node_dblackNull) {
    fold acc(method_Tree_tree_perm__Node(globals, node), write)
    res__7 := null
    fold acc(method_Tree_tree_perm__Node(globals, res__7), write)
    sys__local__result__6 := res__7
    // assert
    assert acc(method_Tree_tree_perm__Node(globals, sys__local__result__6), write) && (unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__6), write) in method_Tree_getBlacks__Node(globals, sys__local__result__6) == 1) && (old(method_Tree_sorted__Node(globals, node)) ==> method_Tree_sorted__Node(globals, sys__local__result__6)) && (old(method_Tree_blackBalanced__Node(globals, node)) ==> method_Tree_blackBalanced__Node(globals, sys__local__result__6)) && (old(method_Tree_noDoubleRed__Node(globals, node) || (method_Tree_dbRedAtLeft__Node(globals, node) || method_Tree_dbRedAtRight__Node(globals, node))) ==> method_Tree_noDoubleRed__Node(globals, sys__local__result__6)) && old(method_Tree_toBag__Node(globals, node)) == method_Tree_toBag__Node(globals, sys__local__result__6) && (old((unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_getBlacks__Node(globals, node))) == 2 ? old(method_Tree_blackHeight__Node(globals, node)) - 1 == method_Tree_blackHeight__Node(globals, sys__local__result__6) : (old((unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_getBlacks__Node(globals, node))) == 1 ? old(method_Tree_blackHeight__Node(globals, node)) == method_Tree_blackHeight__Node(globals, sys__local__result__6) : old(method_Tree_blackHeight__Node(globals, node)) + 1 == method_Tree_blackHeight__Node(globals, sys__local__result__6))) && (old(method_Tree_dblackAtTop__Node(globals, node)) ==> method_Tree_noDBlack__Node(globals, sys__local__result__6)) && (old(method_Tree_noDBlack__Node(globals, node)) ==> method_Tree_noDBlack__Node(globals, sys__local__result__6))
    goto __return_makeNodeSingleBlack
  }
  node.field_Node_dblack := false
  node.field_Node_color := false
  fold acc(method_Tree_tree_perm__Node(globals, node), write)
  sys__local__result__6 := node
  // assert
  assert acc(method_Tree_tree_perm__Node(globals, sys__local__result__6), write) && (unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__6), write) in method_Tree_getBlacks__Node(globals, sys__local__result__6) == 1) && (old(method_Tree_sorted__Node(globals, node)) ==> method_Tree_sorted__Node(globals, sys__local__result__6)) && (old(method_Tree_blackBalanced__Node(globals, node)) ==> method_Tree_blackBalanced__Node(globals, sys__local__result__6)) && (old(method_Tree_noDoubleRed__Node(globals, node) || (method_Tree_dbRedAtLeft__Node(globals, node) || method_Tree_dbRedAtRight__Node(globals, node))) ==> method_Tree_noDoubleRed__Node(globals, sys__local__result__6)) && old(method_Tree_toBag__Node(globals, node)) == method_Tree_toBag__Node(globals, sys__local__result__6) && (old((unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_getBlacks__Node(globals, node))) == 2 ? old(method_Tree_blackHeight__Node(globals, node)) - 1 == method_Tree_blackHeight__Node(globals, sys__local__result__6) : (old((unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_getBlacks__Node(globals, node))) == 1 ? old(method_Tree_blackHeight__Node(globals, node)) == method_Tree_blackHeight__Node(globals, sys__local__result__6) : old(method_Tree_blackHeight__Node(globals, node)) + 1 == method_Tree_blackHeight__Node(globals, sys__local__result__6))) && (old(method_Tree_dblackAtTop__Node(globals, node)) ==> method_Tree_noDBlack__Node(globals, sys__local__result__6)) && (old(method_Tree_noDBlack__Node(globals, node)) ==> method_Tree_noDBlack__Node(globals, sys__local__result__6))
  goto __return_makeNodeSingleBlack
  label __return_makeNodeSingleBlack
  sys__result := sys__local__result__6
  // assert
  assert acc(method_Tree_tree_perm__Node(globals, sys__result), write) && (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_getBlacks__Node(globals, sys__result) == 1) && (old(method_Tree_sorted__Node(globals, node)) ==> method_Tree_sorted__Node(globals, sys__result)) && (old(method_Tree_blackBalanced__Node(globals, node)) ==> method_Tree_blackBalanced__Node(globals, sys__result)) && (old(method_Tree_noDoubleRed__Node(globals, node) || (method_Tree_dbRedAtLeft__Node(globals, node) || method_Tree_dbRedAtRight__Node(globals, node))) ==> method_Tree_noDoubleRed__Node(globals, sys__result)) && old(method_Tree_toBag__Node(globals, node)) == method_Tree_toBag__Node(globals, sys__result) && (old((unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_getBlacks__Node(globals, node))) == 2 ? old(method_Tree_blackHeight__Node(globals, node)) - 1 == method_Tree_blackHeight__Node(globals, sys__result) : (old((unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_getBlacks__Node(globals, node))) == 1 ? old(method_Tree_blackHeight__Node(globals, node)) == method_Tree_blackHeight__Node(globals, sys__result) : old(method_Tree_blackHeight__Node(globals, node)) + 1 == method_Tree_blackHeight__Node(globals, sys__result))) && (old(method_Tree_dblackAtTop__Node(globals, node)) ==> method_Tree_noDBlack__Node(globals, sys__result)) && (old(method_Tree_noDBlack__Node(globals, node)) ==> method_Tree_noDBlack__Node(globals, sys__result))
  inhale false
  label method_end_method_Tree_makeNodeSingleBlack__Node_10
}

method __contract_unsatisfiable__method_Tree_subbagCompareLemma__Bag$Integer$__Bag$Integer$__Bag$Integer$__Integer(diz: Ref, current_thread_id: Int, globals: Ref, bigBag: Multiset[Int], subBag: Multiset[Int], diff: Multiset[Int], key: Int)
  requires diz != null
  requires 0 <= current_thread_id
{
  inhale true && bigBag == (subBag union diff)
  // assert
  assert false
  inhale false
  label method_end___contract_unsatisfiable__method_Tree_subbagCompareLemma__Bag$Integer$__Bag$Integer$__Bag$Integer$__Integer_0
}

method __contract_unsatisfiable__method_Tree_makeWand__Node__Node__Node__Node__Boolean__Integer__Bag$Integer$__Boolean__Integer__Bag$Integer$__Boolean__Integer__Bag$Integer$__Boolean(diz: Ref, current_thread_id: Int, globals: Ref, res: Ref, current: Ref, containingSubtree: Ref, otherSubtree: Ref, oldColor: Bool, oldHeight: Int, oldBag: Multiset[Int], subColor: Bool, subHeight: Int, subBag: Multiset[Int], resColor: Bool, resHeight: Int, resBag: Multiset[Int], goLeft: Bool)
  requires diz != null
  requires 0 <= current_thread_id
{
  inhale true && (current != null && (acc(current.field_Node_key, write) && acc(current.field_Node_left, write) && acc(current.field_Node_right, write) && acc(current.field_Node_color, write) && acc(current.field_Node_dblack, write) && acc(current.field_Node_dblackNull, write) && acc(globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE, wildcard) && globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE <= current.field_Node_key) && acc(method_Tree_tree_perm__Node(globals, otherSubtree), write) && (current.field_Node_dblackNull ==> current.field_Node_left == null && current.field_Node_right == null && !current.field_Node_color && current.field_Node_dblack) && (current.field_Node_dblack ==> !current.field_Node_color) && (goLeft ? containingSubtree == current.field_Node_left && otherSubtree == current.field_Node_right : containingSubtree == current.field_Node_right && otherSubtree == current.field_Node_left) && acc(Wand_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$_for_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(globals, res, globals, res, globals, res, resColor, resHeight, resBag, globals, containingSubtree, globals, containingSubtree, globals, containingSubtree, subColor, subHeight, subBag), write) && (subHeight == method_Tree_blackHeight__Node(globals, otherSubtree) && method_Tree_blackBalanced__Node(globals, otherSubtree)) && oldHeight == method_Tree_getBlacks__Node(globals, current) + subHeight && method_Tree_noDBlack__Node(globals, otherSubtree) && !current.field_Node_dblack && current.field_Node_color == oldColor && ((!current.field_Node_color || !subColor && !method_Tree_getColor__Node(globals, otherSubtree)) && method_Tree_noDoubleRed__Node(globals, otherSubtree)) && oldBag == ((subBag union method_Tree_toBag__Node(globals, otherSubtree)) union Multiset(current.field_Node_key)) && (goLeft ? method_Tree_smaller__Bag$Integer$__Integer(subBag, current.field_Node_key) && method_Tree_larger__Bag$Integer$__Integer(method_Tree_toBag__Node(globals, otherSubtree), current.field_Node_key) : method_Tree_larger__Bag$Integer$__Integer(subBag, current.field_Node_key) && method_Tree_smaller__Bag$Integer$__Integer(method_Tree_toBag__Node(globals, otherSubtree), current.field_Node_key)) && method_Tree_sorted__Node(globals, otherSubtree))
  // assert
  assert false
  inhale false
  label method_end___contract_unsatisfiable__method_Tree_makeWand__Node__Node__Node__Node__Boolean__Integer__Bag$Integer$__Boolean__Integer__Bag$Integer$__Boolean__Integer__Bag$Integer$__Boolean_2
}

method lemma_1(diz: Ref, current_thread_id: Int, globals: Ref, current: Ref, otherSubtree: Ref, goLeft: Bool, containingSubtree: Ref, res: Ref, resColor: Bool, resHeight: Int, resBag: Multiset[Int], subColor: Bool, subHeight: Int, subBag: Multiset[Int], oldHeight: Int, oldColor: Bool, oldBag: Multiset[Int])
  requires diz != null
  requires 0 <= current_thread_id
  requires acc(current.field_Node_key, write)
  requires acc(current.field_Node_left, write)
  requires acc(current.field_Node_right, write)
  requires acc(current.field_Node_color, write)
  requires acc(current.field_Node_dblack, write)
  requires acc(current.field_Node_dblackNull, write)
  requires acc(globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE, wildcard)
  requires globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE <= current.field_Node_key
  requires acc(method_Tree_tree_perm__Node(globals, otherSubtree), write)
  requires current.field_Node_dblackNull ==> current.field_Node_left == null && current.field_Node_right == null && !current.field_Node_color && current.field_Node_dblack
  requires current.field_Node_dblack ==> !current.field_Node_color
  requires (goLeft ? containingSubtree == current.field_Node_left && otherSubtree == current.field_Node_right : containingSubtree == current.field_Node_right && otherSubtree == current.field_Node_left)
  requires acc(Wand_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$_for_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(globals, res, globals, res, globals, res, resColor, resHeight, resBag, globals, containingSubtree, globals, containingSubtree, globals, containingSubtree, subColor, subHeight, subBag), write)
  requires subHeight == method_Tree_blackHeight__Node(globals, otherSubtree) && method_Tree_blackBalanced__Node(globals, otherSubtree)
  requires oldHeight == method_Tree_getBlacks__Node(globals, current) + subHeight
  requires method_Tree_noDBlack__Node(globals, otherSubtree)
  requires !current.field_Node_dblack
  requires current.field_Node_color == oldColor
  requires (!current.field_Node_color || !subColor && !method_Tree_getColor__Node(globals, otherSubtree)) && method_Tree_noDoubleRed__Node(globals, otherSubtree)
  requires oldBag == ((subBag union method_Tree_toBag__Node(globals, otherSubtree)) union Multiset(current.field_Node_key))
  requires (goLeft ? method_Tree_smaller__Bag$Integer$__Integer(subBag, current.field_Node_key) && method_Tree_larger__Bag$Integer$__Integer(method_Tree_toBag__Node(globals, otherSubtree), current.field_Node_key) : method_Tree_larger__Bag$Integer$__Integer(subBag, current.field_Node_key) && method_Tree_smaller__Bag$Integer$__Integer(method_Tree_toBag__Node(globals, otherSubtree), current.field_Node_key))
  requires method_Tree_sorted__Node(globals, otherSubtree)
  requires acc(method_Tree_tree_perm__Node(globals, res), write)
  requires method_Tree_validSubtree__Node(globals, res)
  requires method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(globals, res, resColor, resHeight, resBag)
  ensures acc(method_Tree_tree_perm__Node(globals, current), write)
  ensures method_Tree_validSubtree__Node(globals, current)
  ensures method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(globals, current, oldColor, oldHeight, oldBag)
{
  exhale acc(Wand_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$_for_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(globals, res, globals, res, globals, res, resColor, resHeight, resBag, globals, containingSubtree, globals, containingSubtree, globals, containingSubtree, subColor, subHeight, subBag), write)
  exhale acc(method_Tree_tree_perm__Node(globals, res), write) && method_Tree_validSubtree__Node(globals, res) && method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(globals, res, resColor, resHeight, resBag)
  inhale acc(method_Tree_tree_perm__Node(globals, containingSubtree), write) && method_Tree_validSubtree__Node(globals, containingSubtree) && method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(globals, containingSubtree, subColor, subHeight, subBag)
  // assert
  assert (goLeft ? containingSubtree == current.field_Node_left && otherSubtree == current.field_Node_right && acc(method_Tree_tree_perm__Node(globals, current.field_Node_left), write) && acc(method_Tree_tree_perm__Node(globals, current.field_Node_right), write) : containingSubtree == current.field_Node_right && otherSubtree == current.field_Node_left && acc(method_Tree_tree_perm__Node(globals, current.field_Node_left), write) && acc(method_Tree_tree_perm__Node(globals, current.field_Node_right), write))
  fold acc(method_Tree_tree_perm__Node(globals, current), write)
  label method_end_lemma_1_3
}

method __contract_unsatisfiable__method_Tree_isBlack__Node(diz: Ref, current_thread_id: Int, globals: Ref, node: Ref) returns (sys__result: Bool)
  requires diz != null
  requires 0 <= current_thread_id
{
  inhale true && acc(method_Tree_tree_perm__Node(globals, node), 1 / 2)
  // assert
  assert false
  inhale false
  label method_end___contract_unsatisfiable__method_Tree_isBlack__Node_5
}

method __contract_unsatisfiable__method_Tree_isRed__Node(diz: Ref, current_thread_id: Int, globals: Ref, node: Ref) returns (sys__result: Bool)
  requires diz != null
  requires 0 <= current_thread_id
{
  inhale true && acc(method_Tree_tree_perm__Node(globals, node), 1 / 2)
  // assert
  assert false
  inhale false
  label method_end___contract_unsatisfiable__method_Tree_isRed__Node_7
}

method __contract_unsatisfiable__method_Tree_makeNodeSingleBlack__Node(diz: Ref, current_thread_id: Int, globals: Ref, node: Ref) returns (sys__result: Ref)
  requires diz != null
  requires 0 <= current_thread_id
{
  inhale true && (acc(method_Tree_tree_perm__Node(globals, node), write) && node != null)
  // assert
  assert false
  inhale false
  label method_end___contract_unsatisfiable__method_Tree_makeNodeSingleBlack__Node_9
}

method __contract_unsatisfiable__method_Tree_insert__Integer(diz: Ref, current_thread_id: Int, globals: Ref, key: Int)
  requires diz != null
  requires 0 <= current_thread_id
{
  inhale true && (acc(diz.field_Tree_root, write) && acc(method_Tree_tree_perm__Node(globals, diz.field_Tree_root), write) && method_Tree_noDBlack__Node(globals, diz.field_Tree_root) && method_Tree_sorted__Node(globals, diz.field_Tree_root) && method_Tree_noDoubleRed__Node(globals, diz.field_Tree_root) && method_Tree_blackBalanced__Node(globals, diz.field_Tree_root) && acc(globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE, wildcard) && globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE <= key)
  // assert
  assert false
  inhale false
  label method_end___contract_unsatisfiable__method_Tree_insert__Integer_11
}

method method_Tree_insert__Integer(diz: Ref, current_thread_id: Int, globals: Ref, key: Int)
  requires diz != null
  requires 0 <= current_thread_id
  requires acc(diz.field_Tree_root, write)
  requires acc(method_Tree_tree_perm__Node(globals, diz.field_Tree_root), write)
  requires method_Tree_noDBlack__Node(globals, diz.field_Tree_root)
  requires method_Tree_sorted__Node(globals, diz.field_Tree_root)
  requires method_Tree_noDoubleRed__Node(globals, diz.field_Tree_root)
  requires method_Tree_blackBalanced__Node(globals, diz.field_Tree_root)
  requires acc(globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE, wildcard)
  requires globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE <= key
  ensures acc(diz.field_Tree_root, write)
  ensures acc(method_Tree_tree_perm__Node(globals, diz.field_Tree_root), write)
  ensures method_Tree_noDBlack__Node(globals, diz.field_Tree_root)
  ensures method_Tree_sorted__Node(globals, diz.field_Tree_root)
  ensures method_Tree_noDoubleRed__Node(globals, diz.field_Tree_root)
  ensures method_Tree_blackBalanced__Node(globals, diz.field_Tree_root)
{
  var __flatten_25__8: Ref
  var __flatten_27__9: Ref
  __flatten_25__8 := method_Tree_insertRec__Node__Integer(diz, current_thread_id, globals, diz.field_Tree_root, key)
  diz.field_Tree_root := __flatten_25__8
  __flatten_27__9 := method_Tree_makeNodeSingleBlack__Node(current_thread_id, globals, diz.field_Tree_root)
  diz.field_Tree_root := __flatten_27__9
  label method_end_method_Tree_insert__Integer_12
}

method __contract_unsatisfiable__method_Tree_insertRec__Node__Integer(diz: Ref, current_thread_id: Int, globals: Ref, current: Ref, key: Int) returns (sys__result: Ref)
  requires diz != null
  requires 0 <= current_thread_id
{
  inhale true && (acc(method_Tree_tree_perm__Node(globals, current), write) && acc(globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE, wildcard) && globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE <= key && method_Tree_sorted__Node(globals, current) && method_Tree_noDBlack__Node(globals, current) && method_Tree_blackBalanced__Node(globals, current) && method_Tree_noDoubleRed__Node(globals, current))
  // assert
  assert false
  inhale false
  label method_end___contract_unsatisfiable__method_Tree_insertRec__Node__Integer_13
}

method method_Tree_insertRec__Node__Integer(diz: Ref, current_thread_id: Int, globals: Ref, current: Ref, key: Int) returns (sys__result: Ref)
  requires diz != null
  requires 0 <= current_thread_id
  requires acc(method_Tree_tree_perm__Node(globals, current), write)
  requires acc(globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE, wildcard)
  requires globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE <= key
  requires method_Tree_sorted__Node(globals, current)
  requires method_Tree_noDBlack__Node(globals, current)
  requires method_Tree_blackBalanced__Node(globals, current)
  requires method_Tree_noDoubleRed__Node(globals, current)
  ensures sys__result != null
  ensures acc(method_Tree_tree_perm__Node(globals, sys__result), write)
  ensures method_Tree_sorted__Node(globals, sys__result)
  ensures method_Tree_noDBlack__Node(globals, sys__result)
  ensures method_Tree_blackBalanced__Node(globals, sys__result)
  ensures method_Tree_noDoubleRed__Node(globals, sys__result) || (method_Tree_dbRedAtLeft__Node(globals, sys__result) || method_Tree_dbRedAtRight__Node(globals, sys__result))
  ensures old(method_Tree_blackHeight__Node(globals, current)) == method_Tree_blackHeight__Node(globals, sys__result)
  ensures (old(method_Tree_toBag__Node(globals, current)) union Multiset(key)) == method_Tree_toBag__Node(globals, sys__result)
  ensures old(method_Tree_getColor__Node(globals, current)) == method_Tree_getColor__Node(globals, sys__result) || method_Tree_getColor__Node(globals, sys__result) && !(unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_getColor__Node(globals, sys__result.field_Node_left)) && !(unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_getColor__Node(globals, sys__result.field_Node_right))
{
  var res__39: Ref
  var res__38: Ref
  var result__37: Ref
  var sys__local__result__10: Ref
  var __flatten_30__11: Ref
  var __flatten_32__12: Ref
  var __flatten_34__13: Bool
  var __flatten_35__14: Bool
  var __flatten_36__15: Ref
  var __flatten_37__16: Bool
  var __flatten_38__17: Ref
  var __flatten_39__18: Bool
  var __flatten_40__19: Ref
  var __flatten_41__20: Bool
  var __flatten_42__21: Ref
  var __flatten_43__22: Bool
  var __flatten_44__23: Ref
  var __flatten_45__24: Ref
  var __flatten_46__25: Bool
  var __flatten_47__26: Ref
  var __flatten_48__27: Bool
  var __flatten_49__28: Ref
  var __flatten_51__29: Ref
  var __flatten_52__30: Bool
  var __flatten_54__31: Bool
  var __flatten_55__32: Ref
  var __flatten_56__33: Bool
  var __flatten_57__34: Ref
  var __flatten_59__35: Ref
  var __flatten_60__36: Bool
  if (current == null) {
    result__37 := constructor_Node_Node__Integer(current_thread_id, globals, key)
    fold acc(method_Tree_tree_perm__Node(globals, result__37.field_Node_left), write)
    fold acc(method_Tree_tree_perm__Node(globals, result__37.field_Node_right), write)
    fold acc(method_Tree_tree_perm__Node(globals, result__37), write)
    sys__local__result__10 := result__37
    // assert
    assert sys__local__result__10 != null && acc(method_Tree_tree_perm__Node(globals, sys__local__result__10), write) && method_Tree_sorted__Node(globals, sys__local__result__10) && method_Tree_noDBlack__Node(globals, sys__local__result__10) && method_Tree_blackBalanced__Node(globals, sys__local__result__10) && (method_Tree_noDoubleRed__Node(globals, sys__local__result__10) || (method_Tree_dbRedAtLeft__Node(globals, sys__local__result__10) || method_Tree_dbRedAtRight__Node(globals, sys__local__result__10))) && old(method_Tree_blackHeight__Node(globals, current)) == method_Tree_blackHeight__Node(globals, sys__local__result__10) && (old(method_Tree_toBag__Node(globals, current)) union Multiset(key)) == method_Tree_toBag__Node(globals, sys__local__result__10) && (old(method_Tree_getColor__Node(globals, current)) == method_Tree_getColor__Node(globals, sys__local__result__10) || method_Tree_getColor__Node(globals, sys__local__result__10) && !(unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__10), write) in method_Tree_getColor__Node(globals, sys__local__result__10.field_Node_left)) && !(unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__10), write) in method_Tree_getColor__Node(globals, sys__local__result__10.field_Node_right)))
    goto __return_insertRec
  }
  unfold acc(method_Tree_tree_perm__Node(globals, current), write)
  if (key <= current.field_Node_key) {
    __flatten_30__11 := method_Tree_insertRec__Node__Integer(diz, current_thread_id, globals, current.field_Node_left, key)
    current.field_Node_left := __flatten_30__11
  } else {
    __flatten_32__12 := method_Tree_insertRec__Node__Integer(diz, current_thread_id, globals, current.field_Node_right, key)
    current.field_Node_right := __flatten_32__12
  }
  if (current.field_Node_color == false) {
    __flatten_34__13 := method_Tree_isRed__Node(current_thread_id, globals, current.field_Node_left)
    __flatten_35__14 := method_Tree_isRed__Node(current_thread_id, globals, current.field_Node_right)
    if (__flatten_34__13 && __flatten_35__14) {
      unfold acc(method_Tree_tree_perm__Node(globals, current.field_Node_left), write)
      unfold acc(method_Tree_tree_perm__Node(globals, current.field_Node_right), write)
      __flatten_36__15 := current.field_Node_left
      __flatten_37__16 := method_Tree_isRed__Node(current_thread_id, globals, __flatten_36__15.field_Node_left)
      __flatten_38__17 := current.field_Node_left
      __flatten_39__18 := method_Tree_isRed__Node(current_thread_id, globals, __flatten_38__17.field_Node_right)
      __flatten_40__19 := current.field_Node_right
      __flatten_41__20 := method_Tree_isRed__Node(current_thread_id, globals, __flatten_40__19.field_Node_left)
      __flatten_42__21 := current.field_Node_right
      __flatten_43__22 := method_Tree_isRed__Node(current_thread_id, globals, __flatten_42__21.field_Node_right)
      if (__flatten_37__16 || __flatten_39__18 || __flatten_41__20 || __flatten_43__22) {
        current.field_Node_color := true
        __flatten_44__23 := current.field_Node_left
        __flatten_44__23.field_Node_color := false
        __flatten_45__24 := current.field_Node_right
        __flatten_45__24.field_Node_color := false
      }
      fold acc(method_Tree_tree_perm__Node(globals, current.field_Node_left), write)
      fold acc(method_Tree_tree_perm__Node(globals, current.field_Node_right), write)
      fold acc(method_Tree_tree_perm__Node(globals, current), write)
      sys__local__result__10 := current
      // assert
      assert sys__local__result__10 != null && acc(method_Tree_tree_perm__Node(globals, sys__local__result__10), write) && method_Tree_sorted__Node(globals, sys__local__result__10) && method_Tree_noDBlack__Node(globals, sys__local__result__10) && method_Tree_blackBalanced__Node(globals, sys__local__result__10) && (method_Tree_noDoubleRed__Node(globals, sys__local__result__10) || (method_Tree_dbRedAtLeft__Node(globals, sys__local__result__10) || method_Tree_dbRedAtRight__Node(globals, sys__local__result__10))) && old(method_Tree_blackHeight__Node(globals, current)) == method_Tree_blackHeight__Node(globals, sys__local__result__10) && (old(method_Tree_toBag__Node(globals, current)) union Multiset(key)) == method_Tree_toBag__Node(globals, sys__local__result__10) && (old(method_Tree_getColor__Node(globals, current)) == method_Tree_getColor__Node(globals, sys__local__result__10) || method_Tree_getColor__Node(globals, sys__local__result__10) && !(unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__10), write) in method_Tree_getColor__Node(globals, sys__local__result__10.field_Node_left)) && !(unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__10), write) in method_Tree_getColor__Node(globals, sys__local__result__10.field_Node_right)))
      goto __return_insertRec
    }
    __flatten_46__25 := method_Tree_isRed__Node(current_thread_id, globals, current.field_Node_left)
    if (__flatten_46__25) {
      unfold acc(method_Tree_tree_perm__Node(globals, current.field_Node_left), write)
      __flatten_47__26 := current.field_Node_left
      __flatten_48__27 := method_Tree_isRed__Node(current_thread_id, globals, __flatten_47__26.field_Node_right)
      if (__flatten_48__27) {
        fold acc(method_Tree_tree_perm__Node(globals, current.field_Node_left), write)
        __flatten_49__28 := method_Tree_rotateLeft__Node(diz, current_thread_id, globals, current.field_Node_left)
        current.field_Node_left := __flatten_49__28
        unfold acc(method_Tree_tree_perm__Node(globals, current.field_Node_left), write)
      }
      __flatten_51__29 := current.field_Node_left
      __flatten_52__30 := method_Tree_isRed__Node(current_thread_id, globals, __flatten_51__29.field_Node_left)
      if (__flatten_52__30) {
        fold acc(method_Tree_tree_perm__Node(globals, current.field_Node_left), write)
        fold acc(method_Tree_tree_perm__Node(globals, current), write)
        res__38 := method_Tree_rotateRight__Node(diz, current_thread_id, globals, current)
        sys__local__result__10 := res__38
        // assert
        assert sys__local__result__10 != null && acc(method_Tree_tree_perm__Node(globals, sys__local__result__10), write) && method_Tree_sorted__Node(globals, sys__local__result__10) && method_Tree_noDBlack__Node(globals, sys__local__result__10) && method_Tree_blackBalanced__Node(globals, sys__local__result__10) && (method_Tree_noDoubleRed__Node(globals, sys__local__result__10) || (method_Tree_dbRedAtLeft__Node(globals, sys__local__result__10) || method_Tree_dbRedAtRight__Node(globals, sys__local__result__10))) && old(method_Tree_blackHeight__Node(globals, current)) == method_Tree_blackHeight__Node(globals, sys__local__result__10) && (old(method_Tree_toBag__Node(globals, current)) union Multiset(key)) == method_Tree_toBag__Node(globals, sys__local__result__10) && (old(method_Tree_getColor__Node(globals, current)) == method_Tree_getColor__Node(globals, sys__local__result__10) || method_Tree_getColor__Node(globals, sys__local__result__10) && !(unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__10), write) in method_Tree_getColor__Node(globals, sys__local__result__10.field_Node_left)) && !(unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__10), write) in method_Tree_getColor__Node(globals, sys__local__result__10.field_Node_right)))
        goto __return_insertRec
      }
      fold acc(method_Tree_tree_perm__Node(globals, current.field_Node_left), write)
      fold acc(method_Tree_tree_perm__Node(globals, current), write)
      sys__local__result__10 := current
      // assert
      assert sys__local__result__10 != null && acc(method_Tree_tree_perm__Node(globals, sys__local__result__10), write) && method_Tree_sorted__Node(globals, sys__local__result__10) && method_Tree_noDBlack__Node(globals, sys__local__result__10) && method_Tree_blackBalanced__Node(globals, sys__local__result__10) && (method_Tree_noDoubleRed__Node(globals, sys__local__result__10) || (method_Tree_dbRedAtLeft__Node(globals, sys__local__result__10) || method_Tree_dbRedAtRight__Node(globals, sys__local__result__10))) && old(method_Tree_blackHeight__Node(globals, current)) == method_Tree_blackHeight__Node(globals, sys__local__result__10) && (old(method_Tree_toBag__Node(globals, current)) union Multiset(key)) == method_Tree_toBag__Node(globals, sys__local__result__10) && (old(method_Tree_getColor__Node(globals, current)) == method_Tree_getColor__Node(globals, sys__local__result__10) || method_Tree_getColor__Node(globals, sys__local__result__10) && !(unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__10), write) in method_Tree_getColor__Node(globals, sys__local__result__10.field_Node_left)) && !(unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__10), write) in method_Tree_getColor__Node(globals, sys__local__result__10.field_Node_right)))
      goto __return_insertRec
    }
    __flatten_54__31 := method_Tree_isRed__Node(current_thread_id, globals, current.field_Node_right)
    if (__flatten_54__31) {
      unfold acc(method_Tree_tree_perm__Node(globals, current.field_Node_right), write)
      __flatten_55__32 := current.field_Node_right
      __flatten_56__33 := method_Tree_isRed__Node(current_thread_id, globals, __flatten_55__32.field_Node_left)
      if (__flatten_56__33) {
        fold acc(method_Tree_tree_perm__Node(globals, current.field_Node_right), write)
        __flatten_57__34 := method_Tree_rotateRight__Node(diz, current_thread_id, globals, current.field_Node_right)
        current.field_Node_right := __flatten_57__34
        unfold acc(method_Tree_tree_perm__Node(globals, current.field_Node_right), write)
      }
      __flatten_59__35 := current.field_Node_right
      __flatten_60__36 := method_Tree_isRed__Node(current_thread_id, globals, __flatten_59__35.field_Node_right)
      if (__flatten_60__36) {
        fold acc(method_Tree_tree_perm__Node(globals, current.field_Node_right), write)
        fold acc(method_Tree_tree_perm__Node(globals, current), write)
        res__39 := method_Tree_rotateLeft__Node(diz, current_thread_id, globals, current)
        sys__local__result__10 := res__39
        // assert
        assert sys__local__result__10 != null && acc(method_Tree_tree_perm__Node(globals, sys__local__result__10), write) && method_Tree_sorted__Node(globals, sys__local__result__10) && method_Tree_noDBlack__Node(globals, sys__local__result__10) && method_Tree_blackBalanced__Node(globals, sys__local__result__10) && (method_Tree_noDoubleRed__Node(globals, sys__local__result__10) || (method_Tree_dbRedAtLeft__Node(globals, sys__local__result__10) || method_Tree_dbRedAtRight__Node(globals, sys__local__result__10))) && old(method_Tree_blackHeight__Node(globals, current)) == method_Tree_blackHeight__Node(globals, sys__local__result__10) && (old(method_Tree_toBag__Node(globals, current)) union Multiset(key)) == method_Tree_toBag__Node(globals, sys__local__result__10) && (old(method_Tree_getColor__Node(globals, current)) == method_Tree_getColor__Node(globals, sys__local__result__10) || method_Tree_getColor__Node(globals, sys__local__result__10) && !(unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__10), write) in method_Tree_getColor__Node(globals, sys__local__result__10.field_Node_left)) && !(unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__10), write) in method_Tree_getColor__Node(globals, sys__local__result__10.field_Node_right)))
        goto __return_insertRec
      }
      fold acc(method_Tree_tree_perm__Node(globals, current.field_Node_right), write)
      fold acc(method_Tree_tree_perm__Node(globals, current), write)
      sys__local__result__10 := current
      // assert
      assert sys__local__result__10 != null && acc(method_Tree_tree_perm__Node(globals, sys__local__result__10), write) && method_Tree_sorted__Node(globals, sys__local__result__10) && method_Tree_noDBlack__Node(globals, sys__local__result__10) && method_Tree_blackBalanced__Node(globals, sys__local__result__10) && (method_Tree_noDoubleRed__Node(globals, sys__local__result__10) || (method_Tree_dbRedAtLeft__Node(globals, sys__local__result__10) || method_Tree_dbRedAtRight__Node(globals, sys__local__result__10))) && old(method_Tree_blackHeight__Node(globals, current)) == method_Tree_blackHeight__Node(globals, sys__local__result__10) && (old(method_Tree_toBag__Node(globals, current)) union Multiset(key)) == method_Tree_toBag__Node(globals, sys__local__result__10) && (old(method_Tree_getColor__Node(globals, current)) == method_Tree_getColor__Node(globals, sys__local__result__10) || method_Tree_getColor__Node(globals, sys__local__result__10) && !(unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__10), write) in method_Tree_getColor__Node(globals, sys__local__result__10.field_Node_left)) && !(unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__10), write) in method_Tree_getColor__Node(globals, sys__local__result__10.field_Node_right)))
      goto __return_insertRec
    }
  }
  fold acc(method_Tree_tree_perm__Node(globals, current), write)
  sys__local__result__10 := current
  // assert
  assert sys__local__result__10 != null && acc(method_Tree_tree_perm__Node(globals, sys__local__result__10), write) && method_Tree_sorted__Node(globals, sys__local__result__10) && method_Tree_noDBlack__Node(globals, sys__local__result__10) && method_Tree_blackBalanced__Node(globals, sys__local__result__10) && (method_Tree_noDoubleRed__Node(globals, sys__local__result__10) || (method_Tree_dbRedAtLeft__Node(globals, sys__local__result__10) || method_Tree_dbRedAtRight__Node(globals, sys__local__result__10))) && old(method_Tree_blackHeight__Node(globals, current)) == method_Tree_blackHeight__Node(globals, sys__local__result__10) && (old(method_Tree_toBag__Node(globals, current)) union Multiset(key)) == method_Tree_toBag__Node(globals, sys__local__result__10) && (old(method_Tree_getColor__Node(globals, current)) == method_Tree_getColor__Node(globals, sys__local__result__10) || method_Tree_getColor__Node(globals, sys__local__result__10) && !(unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__10), write) in method_Tree_getColor__Node(globals, sys__local__result__10.field_Node_left)) && !(unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__10), write) in method_Tree_getColor__Node(globals, sys__local__result__10.field_Node_right)))
  goto __return_insertRec
  label __return_insertRec
  sys__result := sys__local__result__10
  // assert
  assert sys__result != null && acc(method_Tree_tree_perm__Node(globals, sys__result), write) && method_Tree_sorted__Node(globals, sys__result) && method_Tree_noDBlack__Node(globals, sys__result) && method_Tree_blackBalanced__Node(globals, sys__result) && (method_Tree_noDoubleRed__Node(globals, sys__result) || (method_Tree_dbRedAtLeft__Node(globals, sys__result) || method_Tree_dbRedAtRight__Node(globals, sys__result))) && old(method_Tree_blackHeight__Node(globals, current)) == method_Tree_blackHeight__Node(globals, sys__result) && (old(method_Tree_toBag__Node(globals, current)) union Multiset(key)) == method_Tree_toBag__Node(globals, sys__result) && (old(method_Tree_getColor__Node(globals, current)) == method_Tree_getColor__Node(globals, sys__result) || method_Tree_getColor__Node(globals, sys__result) && !(unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_getColor__Node(globals, sys__result.field_Node_left)) && !(unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_getColor__Node(globals, sys__result.field_Node_right)))
  inhale false
  label method_end_method_Tree_insertRec__Node__Integer_14
}

method __contract_unsatisfiable__method_Tree_deleteKey__Integer(diz: Ref, current_thread_id: Int, globals: Ref, key: Int)
  requires diz != null
  requires 0 <= current_thread_id
{
  inhale true && (acc(diz.field_Tree_root, write) && acc(method_Tree_tree_perm__Node(globals, diz.field_Tree_root), write) && method_Tree_sorted__Node(globals, diz.field_Tree_root) && method_Tree_noDoubleRed__Node(globals, diz.field_Tree_root) && method_Tree_noDBlack__Node(globals, diz.field_Tree_root) && method_Tree_blackBalanced__Node(globals, diz.field_Tree_root))
  // assert
  assert false
  inhale false
  label method_end___contract_unsatisfiable__method_Tree_deleteKey__Integer_15
}

method method_Tree_deleteKey__Integer(diz: Ref, current_thread_id: Int, globals: Ref, key: Int)
  requires diz != null
  requires 0 <= current_thread_id
  requires acc(diz.field_Tree_root, write)
  requires acc(method_Tree_tree_perm__Node(globals, diz.field_Tree_root), write)
  requires method_Tree_sorted__Node(globals, diz.field_Tree_root)
  requires method_Tree_noDoubleRed__Node(globals, diz.field_Tree_root)
  requires method_Tree_noDBlack__Node(globals, diz.field_Tree_root)
  requires method_Tree_blackBalanced__Node(globals, diz.field_Tree_root)
  ensures acc(diz.field_Tree_root, write)
  ensures acc(method_Tree_tree_perm__Node(globals, diz.field_Tree_root), write)
  ensures method_Tree_sorted__Node(globals, diz.field_Tree_root)
  ensures method_Tree_noDoubleRed__Node(globals, diz.field_Tree_root)
  ensures method_Tree_noDBlack__Node(globals, diz.field_Tree_root)
  ensures method_Tree_blackBalanced__Node(globals, diz.field_Tree_root)
{
  var __flatten_62__40: Ref
  var __flatten_64__41: Ref
  if (diz.field_Tree_root != null) {
    __flatten_62__40 := method_Tree_deleteRec__Node__Integer(diz, current_thread_id, globals, diz.field_Tree_root, key)
    diz.field_Tree_root := __flatten_62__40
  }
  if (diz.field_Tree_root != null) {
    __flatten_64__41 := method_Tree_makeNodeSingleBlack__Node(current_thread_id, globals, diz.field_Tree_root)
    diz.field_Tree_root := __flatten_64__41
  }
  label method_end_method_Tree_deleteKey__Integer_16
}

method __contract_unsatisfiable__method_Tree_fixDBlackLeft__Node(diz: Ref, current_thread_id: Int, globals: Ref, current: Ref) returns (sys__result: Ref)
  requires diz != null
  requires 0 <= current_thread_id
{
  inhale true && (current != null && acc(method_Tree_tree_perm__Node(globals, current), write) && method_Tree_sorted__Node(globals, current) && method_Tree_noDoubleRed__Node(globals, current) && method_Tree_blackBalanced__Node(globals, current) && method_Tree_dblackAtLeft__Node(globals, current))
  // assert
  assert false
  inhale false
  label method_end___contract_unsatisfiable__method_Tree_fixDBlackLeft__Node_17
}

method method_Tree_fixDBlackLeft__Node(diz: Ref, current_thread_id: Int, globals: Ref, current: Ref) returns (sys__result: Ref)
  requires diz != null
  requires 0 <= current_thread_id
  requires current != null
  requires acc(method_Tree_tree_perm__Node(globals, current), write)
  requires method_Tree_sorted__Node(globals, current)
  requires method_Tree_noDoubleRed__Node(globals, current)
  requires method_Tree_blackBalanced__Node(globals, current)
  requires method_Tree_dblackAtLeft__Node(globals, current)
  ensures acc(method_Tree_tree_perm__Node(globals, sys__result), write)
  ensures method_Tree_sorted__Node(globals, sys__result)
  ensures method_Tree_noDoubleRed__Node(globals, sys__result)
  ensures method_Tree_blackBalanced__Node(globals, sys__result)
  ensures method_Tree_noDBlack__Node(globals, sys__result) || method_Tree_dblackAtTop__Node(globals, sys__result)
  ensures old(method_Tree_toBag__Node(globals, current)) == method_Tree_toBag__Node(globals, sys__result)
  ensures !old(method_Tree_getColor__Node(globals, current)) ==> !method_Tree_getColor__Node(globals, sys__result)
  ensures old(method_Tree_blackHeight__Node(globals, current)) == method_Tree_blackHeight__Node(globals, sys__result)
{
  var result__78: Ref
  var curColor__77: Bool
  var newCur__76: Ref
  var result__75: Ref
  var sys__local__result__42: Ref
  var __flatten_66__43: Bool
  var __flatten_68__44: Ref
  var __flatten_70__45: Ref
  var __flatten_71__46: Bool
  var __flatten_72__47: Ref
  var __flatten_73__48: Bool
  var __flatten_74__49: Ref
  var __flatten_75__50: Ref
  var __flatten_76__51: Bool
  var __flatten_77__52: Ref
  var __flatten_78__53: Bool
  var __flatten_79__54: Ref
  var __flatten_81__55: Ref
  var __flatten_82__56: Bool
  var __flatten_83__57: Ref
  var __flatten_85__58: Ref
  var __flatten_86__59: Ref
  var __flatten_87__60: Ref
  var __flatten_88__61: Ref
  var __flatten_90__62: Ref
  var __flatten_91__63: Bool
  var __flatten_92__64: Ref
  var __flatten_93__65: Bool
  var __flatten_94__66: Ref
  var __flatten_95__67: Ref
  var __flatten_96__68: Bool
  var __flatten_97__69: Ref
  var __flatten_98__70: Bool
  var __flatten_99__71: Ref
  var __flatten_101__72: Ref
  var __flatten_102__73: Bool
  var __flatten_104__74: Ref
  unfold acc(method_Tree_tree_perm__Node(globals, current), write)
  __flatten_66__43 := method_Tree_isRed__Node(current_thread_id, globals, current.field_Node_right)
  if (__flatten_66__43) {
    unfold acc(method_Tree_tree_perm__Node(globals, current.field_Node_left), write)
    fold acc(method_Tree_tree_perm__Node(globals, current.field_Node_left), write)
    fold acc(method_Tree_tree_perm__Node(globals, current), write)
    result__75 := method_Tree_rotateLeft__Node(diz, current_thread_id, globals, current)
    unfold acc(method_Tree_tree_perm__Node(globals, result__75), write)
    newCur__76 := result__75.field_Node_left
    unfold acc(method_Tree_tree_perm__Node(globals, newCur__76), write)
    __flatten_68__44 := method_Tree_makeNodeSingleBlack__Node(current_thread_id, globals, newCur__76.field_Node_left)
    newCur__76.field_Node_left := __flatten_68__44
    unfold acc(method_Tree_tree_perm__Node(globals, newCur__76.field_Node_right), write)
    __flatten_70__45 := newCur__76.field_Node_right
    __flatten_71__46 := method_Tree_isBlack__Node(current_thread_id, globals, __flatten_70__45.field_Node_left)
    __flatten_72__47 := newCur__76.field_Node_right
    __flatten_73__48 := method_Tree_isBlack__Node(current_thread_id, globals, __flatten_72__47.field_Node_right)
    if (__flatten_71__46 && __flatten_73__48) {
      __flatten_74__49 := newCur__76.field_Node_right
      __flatten_74__49.field_Node_color := true
      fold acc(method_Tree_tree_perm__Node(globals, newCur__76.field_Node_right), write)
      newCur__76.field_Node_color := false
      fold acc(method_Tree_tree_perm__Node(globals, newCur__76), write)
      fold acc(method_Tree_tree_perm__Node(globals, result__75), write)
      sys__local__result__42 := result__75
      // assert
      assert acc(method_Tree_tree_perm__Node(globals, sys__local__result__42), write) && method_Tree_sorted__Node(globals, sys__local__result__42) && method_Tree_noDoubleRed__Node(globals, sys__local__result__42) && method_Tree_blackBalanced__Node(globals, sys__local__result__42) && (method_Tree_noDBlack__Node(globals, sys__local__result__42) || method_Tree_dblackAtTop__Node(globals, sys__local__result__42)) && old(method_Tree_toBag__Node(globals, current)) == method_Tree_toBag__Node(globals, sys__local__result__42) && (!old(method_Tree_getColor__Node(globals, current)) ==> !method_Tree_getColor__Node(globals, sys__local__result__42)) && old(method_Tree_blackHeight__Node(globals, current)) == method_Tree_blackHeight__Node(globals, sys__local__result__42)
      goto __return_fixDBlackLeft
    }
    __flatten_75__50 := newCur__76.field_Node_right
    __flatten_76__51 := method_Tree_isRed__Node(current_thread_id, globals, __flatten_75__50.field_Node_left)
    __flatten_77__52 := newCur__76.field_Node_right
    __flatten_78__53 := method_Tree_isBlack__Node(current_thread_id, globals, __flatten_77__52.field_Node_right)
    if (__flatten_76__51 && __flatten_78__53) {
      fold acc(method_Tree_tree_perm__Node(globals, newCur__76.field_Node_right), write)
      __flatten_79__54 := method_Tree_rotateRight__Node(diz, current_thread_id, globals, newCur__76.field_Node_right)
      newCur__76.field_Node_right := __flatten_79__54
      unfold acc(method_Tree_tree_perm__Node(globals, newCur__76.field_Node_right), write)
    }
    __flatten_81__55 := newCur__76.field_Node_right
    __flatten_82__56 := method_Tree_isRed__Node(current_thread_id, globals, __flatten_81__55.field_Node_right)
    if (__flatten_82__56) {
      fold acc(method_Tree_tree_perm__Node(globals, newCur__76.field_Node_right), write)
      newCur__76.field_Node_color := false
      fold acc(method_Tree_tree_perm__Node(globals, newCur__76), write)
      __flatten_83__57 := method_Tree_rotateLeft__Node(diz, current_thread_id, globals, newCur__76)
      result__75.field_Node_left := __flatten_83__57
      unfold acc(method_Tree_tree_perm__Node(globals, result__75.field_Node_left), write)
      __flatten_85__58 := result__75.field_Node_left
      __flatten_85__58.field_Node_color := true
      unfold acc(method_Tree_tree_perm__Node(globals, result__75.field_Node_left.field_Node_right), write)
      __flatten_87__60 := result__75.field_Node_left
      __flatten_86__59 := __flatten_87__60.field_Node_right
      __flatten_86__59.field_Node_color := false
      fold acc(method_Tree_tree_perm__Node(globals, result__75.field_Node_left.field_Node_right), write)
      fold acc(method_Tree_tree_perm__Node(globals, result__75.field_Node_left), write)
      fold acc(method_Tree_tree_perm__Node(globals, result__75), write)
      sys__local__result__42 := result__75
      // assert
      assert acc(method_Tree_tree_perm__Node(globals, sys__local__result__42), write) && method_Tree_sorted__Node(globals, sys__local__result__42) && method_Tree_noDoubleRed__Node(globals, sys__local__result__42) && method_Tree_blackBalanced__Node(globals, sys__local__result__42) && (method_Tree_noDBlack__Node(globals, sys__local__result__42) || method_Tree_dblackAtTop__Node(globals, sys__local__result__42)) && old(method_Tree_toBag__Node(globals, current)) == method_Tree_toBag__Node(globals, sys__local__result__42) && (!old(method_Tree_getColor__Node(globals, current)) ==> !method_Tree_getColor__Node(globals, sys__local__result__42)) && old(method_Tree_blackHeight__Node(globals, current)) == method_Tree_blackHeight__Node(globals, sys__local__result__42)
      goto __return_fixDBlackLeft
    }
    fold acc(method_Tree_tree_perm__Node(globals, newCur__76.field_Node_right), write)
    fold acc(method_Tree_tree_perm__Node(globals, newCur__76), write)
    fold acc(method_Tree_tree_perm__Node(globals, result__75), write)
    sys__local__result__42 := result__75
    // assert
    assert acc(method_Tree_tree_perm__Node(globals, sys__local__result__42), write) && method_Tree_sorted__Node(globals, sys__local__result__42) && method_Tree_noDoubleRed__Node(globals, sys__local__result__42) && method_Tree_blackBalanced__Node(globals, sys__local__result__42) && (method_Tree_noDBlack__Node(globals, sys__local__result__42) || method_Tree_dblackAtTop__Node(globals, sys__local__result__42)) && old(method_Tree_toBag__Node(globals, current)) == method_Tree_toBag__Node(globals, sys__local__result__42) && (!old(method_Tree_getColor__Node(globals, current)) ==> !method_Tree_getColor__Node(globals, sys__local__result__42)) && old(method_Tree_blackHeight__Node(globals, current)) == method_Tree_blackHeight__Node(globals, sys__local__result__42)
    goto __return_fixDBlackLeft
  }
  __flatten_88__61 := method_Tree_makeNodeSingleBlack__Node(current_thread_id, globals, current.field_Node_left)
  current.field_Node_left := __flatten_88__61
  unfold acc(method_Tree_tree_perm__Node(globals, current.field_Node_right), write)
  __flatten_90__62 := current.field_Node_right
  __flatten_91__63 := method_Tree_isBlack__Node(current_thread_id, globals, __flatten_90__62.field_Node_left)
  __flatten_92__64 := current.field_Node_right
  __flatten_93__65 := method_Tree_isBlack__Node(current_thread_id, globals, __flatten_92__64.field_Node_right)
  if (__flatten_91__63 && __flatten_93__65) {
    __flatten_94__66 := current.field_Node_right
    __flatten_94__66.field_Node_color := true
    if (current.field_Node_color == true) {
      current.field_Node_color := false
    } else {
      current.field_Node_dblack := true
    }
    fold acc(method_Tree_tree_perm__Node(globals, current.field_Node_right), write)
    fold acc(method_Tree_tree_perm__Node(globals, current), write)
    sys__local__result__42 := current
    // assert
    assert acc(method_Tree_tree_perm__Node(globals, sys__local__result__42), write) && method_Tree_sorted__Node(globals, sys__local__result__42) && method_Tree_noDoubleRed__Node(globals, sys__local__result__42) && method_Tree_blackBalanced__Node(globals, sys__local__result__42) && (method_Tree_noDBlack__Node(globals, sys__local__result__42) || method_Tree_dblackAtTop__Node(globals, sys__local__result__42)) && old(method_Tree_toBag__Node(globals, current)) == method_Tree_toBag__Node(globals, sys__local__result__42) && (!old(method_Tree_getColor__Node(globals, current)) ==> !method_Tree_getColor__Node(globals, sys__local__result__42)) && old(method_Tree_blackHeight__Node(globals, current)) == method_Tree_blackHeight__Node(globals, sys__local__result__42)
    goto __return_fixDBlackLeft
  }
  __flatten_95__67 := current.field_Node_right
  __flatten_96__68 := method_Tree_isRed__Node(current_thread_id, globals, __flatten_95__67.field_Node_left)
  __flatten_97__69 := current.field_Node_right
  __flatten_98__70 := method_Tree_isBlack__Node(current_thread_id, globals, __flatten_97__69.field_Node_right)
  if (__flatten_96__68 && __flatten_98__70) {
    fold acc(method_Tree_tree_perm__Node(globals, current.field_Node_right), write)
    __flatten_99__71 := method_Tree_rotateRight__Node(diz, current_thread_id, globals, current.field_Node_right)
    current.field_Node_right := __flatten_99__71
    unfold acc(method_Tree_tree_perm__Node(globals, current.field_Node_right), write)
  }
  __flatten_101__72 := current.field_Node_right
  __flatten_102__73 := method_Tree_isRed__Node(current_thread_id, globals, __flatten_101__72.field_Node_right)
  if (__flatten_102__73) {
    fold acc(method_Tree_tree_perm__Node(globals, current.field_Node_right), write)
    curColor__77 := current.field_Node_color
    current.field_Node_color := false
    fold acc(method_Tree_tree_perm__Node(globals, current), write)
    result__78 := method_Tree_rotateLeft__Node(diz, current_thread_id, globals, current)
    unfold acc(method_Tree_tree_perm__Node(globals, result__78), write)
    result__78.field_Node_color := curColor__77
    unfold acc(method_Tree_tree_perm__Node(globals, result__78.field_Node_right), write)
    __flatten_104__74 := result__78.field_Node_right
    __flatten_104__74.field_Node_color := false
    fold acc(method_Tree_tree_perm__Node(globals, result__78.field_Node_right), write)
    fold acc(method_Tree_tree_perm__Node(globals, result__78), write)
    sys__local__result__42 := result__78
    // assert
    assert acc(method_Tree_tree_perm__Node(globals, sys__local__result__42), write) && method_Tree_sorted__Node(globals, sys__local__result__42) && method_Tree_noDoubleRed__Node(globals, sys__local__result__42) && method_Tree_blackBalanced__Node(globals, sys__local__result__42) && (method_Tree_noDBlack__Node(globals, sys__local__result__42) || method_Tree_dblackAtTop__Node(globals, sys__local__result__42)) && old(method_Tree_toBag__Node(globals, current)) == method_Tree_toBag__Node(globals, sys__local__result__42) && (!old(method_Tree_getColor__Node(globals, current)) ==> !method_Tree_getColor__Node(globals, sys__local__result__42)) && old(method_Tree_blackHeight__Node(globals, current)) == method_Tree_blackHeight__Node(globals, sys__local__result__42)
    goto __return_fixDBlackLeft
  }
  fold acc(method_Tree_tree_perm__Node(globals, current.field_Node_right), write)
  fold acc(method_Tree_tree_perm__Node(globals, current), write)
  sys__local__result__42 := current
  // assert
  assert acc(method_Tree_tree_perm__Node(globals, sys__local__result__42), write) && method_Tree_sorted__Node(globals, sys__local__result__42) && method_Tree_noDoubleRed__Node(globals, sys__local__result__42) && method_Tree_blackBalanced__Node(globals, sys__local__result__42) && (method_Tree_noDBlack__Node(globals, sys__local__result__42) || method_Tree_dblackAtTop__Node(globals, sys__local__result__42)) && old(method_Tree_toBag__Node(globals, current)) == method_Tree_toBag__Node(globals, sys__local__result__42) && (!old(method_Tree_getColor__Node(globals, current)) ==> !method_Tree_getColor__Node(globals, sys__local__result__42)) && old(method_Tree_blackHeight__Node(globals, current)) == method_Tree_blackHeight__Node(globals, sys__local__result__42)
  goto __return_fixDBlackLeft
  label __return_fixDBlackLeft
  sys__result := sys__local__result__42
  // assert
  assert acc(method_Tree_tree_perm__Node(globals, sys__result), write) && method_Tree_sorted__Node(globals, sys__result) && method_Tree_noDoubleRed__Node(globals, sys__result) && method_Tree_blackBalanced__Node(globals, sys__result) && (method_Tree_noDBlack__Node(globals, sys__result) || method_Tree_dblackAtTop__Node(globals, sys__result)) && old(method_Tree_toBag__Node(globals, current)) == method_Tree_toBag__Node(globals, sys__result) && (!old(method_Tree_getColor__Node(globals, current)) ==> !method_Tree_getColor__Node(globals, sys__result)) && old(method_Tree_blackHeight__Node(globals, current)) == method_Tree_blackHeight__Node(globals, sys__result)
  inhale false
  label method_end_method_Tree_fixDBlackLeft__Node_18
}

method __contract_unsatisfiable__method_Tree_fixDBlackRight__Node(diz: Ref, current_thread_id: Int, globals: Ref, current: Ref) returns (sys__result: Ref)
  requires diz != null
  requires 0 <= current_thread_id
{
  inhale true && (current != null && acc(method_Tree_tree_perm__Node(globals, current), write) && method_Tree_sorted__Node(globals, current) && method_Tree_noDoubleRed__Node(globals, current) && method_Tree_blackBalanced__Node(globals, current) && method_Tree_dblackAtRight__Node(globals, current))
  // assert
  assert false
  inhale false
  label method_end___contract_unsatisfiable__method_Tree_fixDBlackRight__Node_19
}

method method_Tree_fixDBlackRight__Node(diz: Ref, current_thread_id: Int, globals: Ref, current: Ref) returns (sys__result: Ref)
  requires diz != null
  requires 0 <= current_thread_id
  requires current != null
  requires acc(method_Tree_tree_perm__Node(globals, current), write)
  requires method_Tree_sorted__Node(globals, current)
  requires method_Tree_noDoubleRed__Node(globals, current)
  requires method_Tree_blackBalanced__Node(globals, current)
  requires method_Tree_dblackAtRight__Node(globals, current)
  ensures acc(method_Tree_tree_perm__Node(globals, sys__result), write)
  ensures method_Tree_sorted__Node(globals, sys__result)
  ensures method_Tree_noDoubleRed__Node(globals, sys__result)
  ensures method_Tree_blackBalanced__Node(globals, sys__result)
  ensures method_Tree_noDBlack__Node(globals, sys__result) || method_Tree_dblackAtTop__Node(globals, sys__result)
  ensures old(method_Tree_toBag__Node(globals, current)) == method_Tree_toBag__Node(globals, sys__result)
  ensures !old(method_Tree_getColor__Node(globals, current)) ==> !method_Tree_getColor__Node(globals, sys__result)
  ensures old(method_Tree_blackHeight__Node(globals, current)) == method_Tree_blackHeight__Node(globals, sys__result)
{
  var result__116: Ref
  var curColor__115: Bool
  var newCur__114: Ref
  var result__113: Ref
  var sys__local__result__79: Ref
  var __flatten_105__80: Bool
  var __flatten_107__81: Ref
  var __flatten_109__82: Ref
  var __flatten_110__83: Bool
  var __flatten_111__84: Ref
  var __flatten_112__85: Bool
  var __flatten_113__86: Ref
  var __flatten_114__87: Ref
  var __flatten_115__88: Bool
  var __flatten_116__89: Ref
  var __flatten_117__90: Bool
  var __flatten_118__91: Ref
  var __flatten_120__92: Ref
  var __flatten_121__93: Bool
  var __flatten_122__94: Ref
  var __flatten_124__95: Ref
  var __flatten_125__96: Ref
  var __flatten_126__97: Ref
  var __flatten_127__98: Ref
  var __flatten_129__99: Ref
  var __flatten_130__100: Ref
  var __flatten_131__101: Bool
  var __flatten_132__102: Ref
  var __flatten_133__103: Bool
  var __flatten_134__104: Ref
  var __flatten_135__105: Ref
  var __flatten_136__106: Bool
  var __flatten_137__107: Ref
  var __flatten_138__108: Bool
  var __flatten_139__109: Ref
  var __flatten_141__110: Ref
  var __flatten_142__111: Bool
  var __flatten_144__112: Ref
  unfold acc(method_Tree_tree_perm__Node(globals, current), write)
  __flatten_105__80 := method_Tree_isRed__Node(current_thread_id, globals, current.field_Node_left)
  if (__flatten_105__80) {
    unfold acc(method_Tree_tree_perm__Node(globals, current.field_Node_right), write)
    fold acc(method_Tree_tree_perm__Node(globals, current.field_Node_right), write)
    fold acc(method_Tree_tree_perm__Node(globals, current), write)
    result__113 := method_Tree_rotateRight__Node(diz, current_thread_id, globals, current)
    unfold acc(method_Tree_tree_perm__Node(globals, result__113), write)
    newCur__114 := result__113.field_Node_right
    unfold acc(method_Tree_tree_perm__Node(globals, newCur__114), write)
    __flatten_107__81 := method_Tree_makeNodeSingleBlack__Node(current_thread_id, globals, newCur__114.field_Node_right)
    newCur__114.field_Node_right := __flatten_107__81
    unfold acc(method_Tree_tree_perm__Node(globals, newCur__114.field_Node_left), write)
    __flatten_109__82 := newCur__114.field_Node_left
    __flatten_110__83 := method_Tree_isBlack__Node(current_thread_id, globals, __flatten_109__82.field_Node_left)
    __flatten_111__84 := newCur__114.field_Node_left
    __flatten_112__85 := method_Tree_isBlack__Node(current_thread_id, globals, __flatten_111__84.field_Node_right)
    if (__flatten_110__83 && __flatten_112__85) {
      __flatten_113__86 := newCur__114.field_Node_left
      __flatten_113__86.field_Node_color := true
      newCur__114.field_Node_color := false
      fold acc(method_Tree_tree_perm__Node(globals, newCur__114.field_Node_left), write)
      fold acc(method_Tree_tree_perm__Node(globals, newCur__114), write)
      fold acc(method_Tree_tree_perm__Node(globals, result__113), write)
      sys__local__result__79 := result__113
      // assert
      assert acc(method_Tree_tree_perm__Node(globals, sys__local__result__79), write) && method_Tree_sorted__Node(globals, sys__local__result__79) && method_Tree_noDoubleRed__Node(globals, sys__local__result__79) && method_Tree_blackBalanced__Node(globals, sys__local__result__79) && (method_Tree_noDBlack__Node(globals, sys__local__result__79) || method_Tree_dblackAtTop__Node(globals, sys__local__result__79)) && old(method_Tree_toBag__Node(globals, current)) == method_Tree_toBag__Node(globals, sys__local__result__79) && (!old(method_Tree_getColor__Node(globals, current)) ==> !method_Tree_getColor__Node(globals, sys__local__result__79)) && old(method_Tree_blackHeight__Node(globals, current)) == method_Tree_blackHeight__Node(globals, sys__local__result__79)
      goto __return_fixDBlackRight
    }
    __flatten_114__87 := newCur__114.field_Node_left
    __flatten_115__88 := method_Tree_isBlack__Node(current_thread_id, globals, __flatten_114__87.field_Node_left)
    __flatten_116__89 := newCur__114.field_Node_left
    __flatten_117__90 := method_Tree_isRed__Node(current_thread_id, globals, __flatten_116__89.field_Node_right)
    if (__flatten_115__88 && __flatten_117__90) {
      fold acc(method_Tree_tree_perm__Node(globals, newCur__114.field_Node_left), write)
      __flatten_118__91 := method_Tree_rotateLeft__Node(diz, current_thread_id, globals, newCur__114.field_Node_left)
      newCur__114.field_Node_left := __flatten_118__91
      unfold acc(method_Tree_tree_perm__Node(globals, newCur__114.field_Node_left), write)
    }
    __flatten_120__92 := newCur__114.field_Node_left
    __flatten_121__93 := method_Tree_isRed__Node(current_thread_id, globals, __flatten_120__92.field_Node_left)
    if (__flatten_121__93) {
      fold acc(method_Tree_tree_perm__Node(globals, newCur__114.field_Node_left), write)
      newCur__114.field_Node_color := false
      fold acc(method_Tree_tree_perm__Node(globals, newCur__114), write)
      __flatten_122__94 := method_Tree_rotateRight__Node(diz, current_thread_id, globals, newCur__114)
      result__113.field_Node_right := __flatten_122__94
      unfold acc(method_Tree_tree_perm__Node(globals, result__113.field_Node_right), write)
      __flatten_124__95 := result__113.field_Node_right
      __flatten_124__95.field_Node_color := true
      unfold acc(method_Tree_tree_perm__Node(globals, result__113.field_Node_right.field_Node_left), write)
      __flatten_126__97 := result__113.field_Node_right
      __flatten_125__96 := __flatten_126__97.field_Node_left
      __flatten_125__96.field_Node_color := false
      fold acc(method_Tree_tree_perm__Node(globals, result__113.field_Node_right.field_Node_left), write)
      fold acc(method_Tree_tree_perm__Node(globals, result__113.field_Node_right), write)
      fold acc(method_Tree_tree_perm__Node(globals, result__113), write)
      sys__local__result__79 := result__113
      // assert
      assert acc(method_Tree_tree_perm__Node(globals, sys__local__result__79), write) && method_Tree_sorted__Node(globals, sys__local__result__79) && method_Tree_noDoubleRed__Node(globals, sys__local__result__79) && method_Tree_blackBalanced__Node(globals, sys__local__result__79) && (method_Tree_noDBlack__Node(globals, sys__local__result__79) || method_Tree_dblackAtTop__Node(globals, sys__local__result__79)) && old(method_Tree_toBag__Node(globals, current)) == method_Tree_toBag__Node(globals, sys__local__result__79) && (!old(method_Tree_getColor__Node(globals, current)) ==> !method_Tree_getColor__Node(globals, sys__local__result__79)) && old(method_Tree_blackHeight__Node(globals, current)) == method_Tree_blackHeight__Node(globals, sys__local__result__79)
      goto __return_fixDBlackRight
    }
    fold acc(method_Tree_tree_perm__Node(globals, newCur__114.field_Node_left), write)
    fold acc(method_Tree_tree_perm__Node(globals, newCur__114), write)
    fold acc(method_Tree_tree_perm__Node(globals, result__113), write)
    sys__local__result__79 := result__113
    // assert
    assert acc(method_Tree_tree_perm__Node(globals, sys__local__result__79), write) && method_Tree_sorted__Node(globals, sys__local__result__79) && method_Tree_noDoubleRed__Node(globals, sys__local__result__79) && method_Tree_blackBalanced__Node(globals, sys__local__result__79) && (method_Tree_noDBlack__Node(globals, sys__local__result__79) || method_Tree_dblackAtTop__Node(globals, sys__local__result__79)) && old(method_Tree_toBag__Node(globals, current)) == method_Tree_toBag__Node(globals, sys__local__result__79) && (!old(method_Tree_getColor__Node(globals, current)) ==> !method_Tree_getColor__Node(globals, sys__local__result__79)) && old(method_Tree_blackHeight__Node(globals, current)) == method_Tree_blackHeight__Node(globals, sys__local__result__79)
    goto __return_fixDBlackRight
  }
  __flatten_127__98 := method_Tree_makeNodeSingleBlack__Node(current_thread_id, globals, current.field_Node_right)
  current.field_Node_right := __flatten_127__98
  unfold acc(method_Tree_tree_perm__Node(globals, current.field_Node_left), write)
  __flatten_129__99 := current.field_Node_left
  __flatten_130__100 := current.field_Node_left
  __flatten_131__101 := method_Tree_isBlack__Node(current_thread_id, globals, __flatten_130__100.field_Node_left)
  __flatten_132__102 := current.field_Node_left
  __flatten_133__103 := method_Tree_isBlack__Node(current_thread_id, globals, __flatten_132__102.field_Node_right)
  if (__flatten_129__99.field_Node_color == false && __flatten_131__101 && __flatten_133__103) {
    __flatten_134__104 := current.field_Node_left
    __flatten_134__104.field_Node_color := true
    if (current.field_Node_color == true) {
      current.field_Node_color := false
    } else {
      current.field_Node_dblack := true
    }
    fold acc(method_Tree_tree_perm__Node(globals, current.field_Node_left), write)
    fold acc(method_Tree_tree_perm__Node(globals, current), write)
    sys__local__result__79 := current
    // assert
    assert acc(method_Tree_tree_perm__Node(globals, sys__local__result__79), write) && method_Tree_sorted__Node(globals, sys__local__result__79) && method_Tree_noDoubleRed__Node(globals, sys__local__result__79) && method_Tree_blackBalanced__Node(globals, sys__local__result__79) && (method_Tree_noDBlack__Node(globals, sys__local__result__79) || method_Tree_dblackAtTop__Node(globals, sys__local__result__79)) && old(method_Tree_toBag__Node(globals, current)) == method_Tree_toBag__Node(globals, sys__local__result__79) && (!old(method_Tree_getColor__Node(globals, current)) ==> !method_Tree_getColor__Node(globals, sys__local__result__79)) && old(method_Tree_blackHeight__Node(globals, current)) == method_Tree_blackHeight__Node(globals, sys__local__result__79)
    goto __return_fixDBlackRight
  }
  __flatten_135__105 := current.field_Node_left
  __flatten_136__106 := method_Tree_isBlack__Node(current_thread_id, globals, __flatten_135__105.field_Node_left)
  __flatten_137__107 := current.field_Node_left
  __flatten_138__108 := method_Tree_isRed__Node(current_thread_id, globals, __flatten_137__107.field_Node_right)
  if (__flatten_136__106 && __flatten_138__108) {
    fold acc(method_Tree_tree_perm__Node(globals, current.field_Node_left), write)
    __flatten_139__109 := method_Tree_rotateLeft__Node(diz, current_thread_id, globals, current.field_Node_left)
    current.field_Node_left := __flatten_139__109
    unfold acc(method_Tree_tree_perm__Node(globals, current.field_Node_left), write)
  }
  __flatten_141__110 := current.field_Node_left
  __flatten_142__111 := method_Tree_isRed__Node(current_thread_id, globals, __flatten_141__110.field_Node_left)
  if (__flatten_142__111) {
    fold acc(method_Tree_tree_perm__Node(globals, current.field_Node_left), write)
    curColor__115 := current.field_Node_color
    current.field_Node_color := false
    fold acc(method_Tree_tree_perm__Node(globals, current), write)
    result__116 := method_Tree_rotateRight__Node(diz, current_thread_id, globals, current)
    unfold acc(method_Tree_tree_perm__Node(globals, result__116), write)
    result__116.field_Node_color := curColor__115
    unfold acc(method_Tree_tree_perm__Node(globals, result__116.field_Node_left), write)
    __flatten_144__112 := result__116.field_Node_left
    __flatten_144__112.field_Node_color := false
    fold acc(method_Tree_tree_perm__Node(globals, result__116.field_Node_left), write)
    fold acc(method_Tree_tree_perm__Node(globals, result__116), write)
    sys__local__result__79 := result__116
    // assert
    assert acc(method_Tree_tree_perm__Node(globals, sys__local__result__79), write) && method_Tree_sorted__Node(globals, sys__local__result__79) && method_Tree_noDoubleRed__Node(globals, sys__local__result__79) && method_Tree_blackBalanced__Node(globals, sys__local__result__79) && (method_Tree_noDBlack__Node(globals, sys__local__result__79) || method_Tree_dblackAtTop__Node(globals, sys__local__result__79)) && old(method_Tree_toBag__Node(globals, current)) == method_Tree_toBag__Node(globals, sys__local__result__79) && (!old(method_Tree_getColor__Node(globals, current)) ==> !method_Tree_getColor__Node(globals, sys__local__result__79)) && old(method_Tree_blackHeight__Node(globals, current)) == method_Tree_blackHeight__Node(globals, sys__local__result__79)
    goto __return_fixDBlackRight
  }
  fold acc(method_Tree_tree_perm__Node(globals, current.field_Node_left), write)
  fold acc(method_Tree_tree_perm__Node(globals, current), write)
  sys__local__result__79 := current
  // assert
  assert acc(method_Tree_tree_perm__Node(globals, sys__local__result__79), write) && method_Tree_sorted__Node(globals, sys__local__result__79) && method_Tree_noDoubleRed__Node(globals, sys__local__result__79) && method_Tree_blackBalanced__Node(globals, sys__local__result__79) && (method_Tree_noDBlack__Node(globals, sys__local__result__79) || method_Tree_dblackAtTop__Node(globals, sys__local__result__79)) && old(method_Tree_toBag__Node(globals, current)) == method_Tree_toBag__Node(globals, sys__local__result__79) && (!old(method_Tree_getColor__Node(globals, current)) ==> !method_Tree_getColor__Node(globals, sys__local__result__79)) && old(method_Tree_blackHeight__Node(globals, current)) == method_Tree_blackHeight__Node(globals, sys__local__result__79)
  goto __return_fixDBlackRight
  label __return_fixDBlackRight
  sys__result := sys__local__result__79
  // assert
  assert acc(method_Tree_tree_perm__Node(globals, sys__result), write) && method_Tree_sorted__Node(globals, sys__result) && method_Tree_noDoubleRed__Node(globals, sys__result) && method_Tree_blackBalanced__Node(globals, sys__result) && (method_Tree_noDBlack__Node(globals, sys__result) || method_Tree_dblackAtTop__Node(globals, sys__result)) && old(method_Tree_toBag__Node(globals, current)) == method_Tree_toBag__Node(globals, sys__result) && (!old(method_Tree_getColor__Node(globals, current)) ==> !method_Tree_getColor__Node(globals, sys__result)) && old(method_Tree_blackHeight__Node(globals, current)) == method_Tree_blackHeight__Node(globals, sys__result)
  inhale false
  label method_end_method_Tree_fixDBlackRight__Node_20
}

method __contract_unsatisfiable__method_Tree_deleteRec__Node__Integer(diz: Ref, current_thread_id: Int, globals: Ref, current: Ref, key: Int) returns (sys__result: Ref)
  requires diz != null
  requires 0 <= current_thread_id
{
  inhale true && (current != null && acc(method_Tree_tree_perm__Node(globals, current), write) && method_Tree_sorted__Node(globals, current) && method_Tree_noDoubleRed__Node(globals, current) && method_Tree_blackBalanced__Node(globals, current) && method_Tree_noDBlack__Node(globals, current))
  // assert
  assert false
  inhale false
  label method_end___contract_unsatisfiable__method_Tree_deleteRec__Node__Integer_21
}

method method_Tree_deleteRec__Node__Integer(diz: Ref, current_thread_id: Int, globals: Ref, current: Ref, key: Int) returns (sys__result: Ref)
  requires diz != null
  requires 0 <= current_thread_id
  requires current != null
  requires acc(method_Tree_tree_perm__Node(globals, current), write)
  requires method_Tree_sorted__Node(globals, current)
  requires method_Tree_noDoubleRed__Node(globals, current)
  requires method_Tree_blackBalanced__Node(globals, current)
  requires method_Tree_noDBlack__Node(globals, current)
  ensures acc(method_Tree_tree_perm__Node(globals, sys__result), write)
  ensures method_Tree_sorted__Node(globals, sys__result)
  ensures method_Tree_noDoubleRed__Node(globals, sys__result)
  ensures method_Tree_blackBalanced__Node(globals, sys__result)
  ensures method_Tree_noDBlack__Node(globals, sys__result) || method_Tree_dblackAtTop__Node(globals, sys__result)
  ensures ((key in old(method_Tree_toBag__Node(globals, current))) == 0 ? old(method_Tree_toBag__Node(globals, current)) == method_Tree_toBag__Node(globals, sys__result) : old(method_Tree_toBag__Node(globals, current)) == (method_Tree_toBag__Node(globals, sys__result) union Multiset(key)))
  ensures !old(method_Tree_getColor__Node(globals, current)) ==> !method_Tree_getColor__Node(globals, sys__result)
  ensures method_Tree_blackHeight__Node(globals, sys__result) == old(method_Tree_blackHeight__Node(globals, current))
{
  var fixed__144: Ref
  var result__143: Ref
  var result__142: Ref
  var fixed__141: Ref
  var rightAfter__140: Multiset[Int]
  var rightBefore__139: Multiset[Int]
  var fixed__138: Ref
  var leftAfter__137: Multiset[Int]
  var leftBefore__136: Multiset[Int]
  var dummy_yields_3__117: Multiset[Int]
  var dummy_yields_2__118: Int
  var dummy_yields_1__119: Bool
  var sys__local__result__120: Ref
  var __flatten_146__121: Ref
  var __flatten_149__122: Ref
  var __flatten_150__123: Ref
  var __flatten_153__124: Ref
  var __flatten_156__125: Ref
  var __flatten_157__126: Ref
  var rightColor__127: Bool
  var rightHeight__128: Int
  var rightBag__129: Multiset[Int]
  var successor__130: Ref
  var __flatten_163__131: Int
  var __flatten_164__132: Ref
  var rightAfter__133: Multiset[Int]
  var __flatten_167__134: Ref
  var __flatten_168__135: Ref
  unfold acc(method_Tree_tree_perm__Node(globals, current), write)
  if (key < current.field_Node_key) {
    if (current.field_Node_left == null) {
      fold acc(method_Tree_tree_perm__Node(globals, current), write)
      sys__local__result__120 := current
      // assert
      assert acc(method_Tree_tree_perm__Node(globals, sys__local__result__120), write) && method_Tree_sorted__Node(globals, sys__local__result__120) && method_Tree_noDoubleRed__Node(globals, sys__local__result__120) && method_Tree_blackBalanced__Node(globals, sys__local__result__120) && (method_Tree_noDBlack__Node(globals, sys__local__result__120) || method_Tree_dblackAtTop__Node(globals, sys__local__result__120)) && ((key in old(method_Tree_toBag__Node(globals, current))) == 0 ? old(method_Tree_toBag__Node(globals, current)) == method_Tree_toBag__Node(globals, sys__local__result__120) : old(method_Tree_toBag__Node(globals, current)) == (method_Tree_toBag__Node(globals, sys__local__result__120) union Multiset(key))) && (!old(method_Tree_getColor__Node(globals, current)) ==> !method_Tree_getColor__Node(globals, sys__local__result__120)) && method_Tree_blackHeight__Node(globals, sys__local__result__120) == old(method_Tree_blackHeight__Node(globals, current))
      goto __return_deleteRec
    }
    leftBefore__136 := method_Tree_toBag__Node(globals, current.field_Node_left)
    __flatten_146__121 := method_Tree_deleteRec__Node__Integer(diz, current_thread_id, globals, current.field_Node_left, key)
    current.field_Node_left := __flatten_146__121
    leftAfter__137 := method_Tree_toBag__Node(globals, current.field_Node_left)
    // assert
    assert method_Tree_subbag__Bag$Integer$__Bag$Integer$(leftAfter__137, leftBefore__136)
    unfold acc(method_Tree_tree_perm__Node(globals, current.field_Node_left), write)
    __flatten_149__122 := current.field_Node_left
    __flatten_150__123 := current.field_Node_left
    if (current.field_Node_right != null && current.field_Node_left != null && __flatten_149__122.field_Node_color == false && __flatten_150__123.field_Node_dblack == true) {
      fold acc(method_Tree_tree_perm__Node(globals, current.field_Node_left), write)
      fold acc(method_Tree_tree_perm__Node(globals, current), write)
      fixed__138 := method_Tree_fixDBlackLeft__Node(diz, current_thread_id, globals, current)
      sys__local__result__120 := fixed__138
      // assert
      assert acc(method_Tree_tree_perm__Node(globals, sys__local__result__120), write) && method_Tree_sorted__Node(globals, sys__local__result__120) && method_Tree_noDoubleRed__Node(globals, sys__local__result__120) && method_Tree_blackBalanced__Node(globals, sys__local__result__120) && (method_Tree_noDBlack__Node(globals, sys__local__result__120) || method_Tree_dblackAtTop__Node(globals, sys__local__result__120)) && ((key in old(method_Tree_toBag__Node(globals, current))) == 0 ? old(method_Tree_toBag__Node(globals, current)) == method_Tree_toBag__Node(globals, sys__local__result__120) : old(method_Tree_toBag__Node(globals, current)) == (method_Tree_toBag__Node(globals, sys__local__result__120) union Multiset(key))) && (!old(method_Tree_getColor__Node(globals, current)) ==> !method_Tree_getColor__Node(globals, sys__local__result__120)) && method_Tree_blackHeight__Node(globals, sys__local__result__120) == old(method_Tree_blackHeight__Node(globals, current))
      goto __return_deleteRec
    }
    fold acc(method_Tree_tree_perm__Node(globals, current.field_Node_left), write)
    fold acc(method_Tree_tree_perm__Node(globals, current), write)
    sys__local__result__120 := current
    // assert
    assert acc(method_Tree_tree_perm__Node(globals, sys__local__result__120), write) && method_Tree_sorted__Node(globals, sys__local__result__120) && method_Tree_noDoubleRed__Node(globals, sys__local__result__120) && method_Tree_blackBalanced__Node(globals, sys__local__result__120) && (method_Tree_noDBlack__Node(globals, sys__local__result__120) || method_Tree_dblackAtTop__Node(globals, sys__local__result__120)) && ((key in old(method_Tree_toBag__Node(globals, current))) == 0 ? old(method_Tree_toBag__Node(globals, current)) == method_Tree_toBag__Node(globals, sys__local__result__120) : old(method_Tree_toBag__Node(globals, current)) == (method_Tree_toBag__Node(globals, sys__local__result__120) union Multiset(key))) && (!old(method_Tree_getColor__Node(globals, current)) ==> !method_Tree_getColor__Node(globals, sys__local__result__120)) && method_Tree_blackHeight__Node(globals, sys__local__result__120) == old(method_Tree_blackHeight__Node(globals, current))
    goto __return_deleteRec
  }
  if (current.field_Node_key < key) {
    if (current.field_Node_right == null) {
      fold acc(method_Tree_tree_perm__Node(globals, current), write)
      sys__local__result__120 := current
      // assert
      assert acc(method_Tree_tree_perm__Node(globals, sys__local__result__120), write) && method_Tree_sorted__Node(globals, sys__local__result__120) && method_Tree_noDoubleRed__Node(globals, sys__local__result__120) && method_Tree_blackBalanced__Node(globals, sys__local__result__120) && (method_Tree_noDBlack__Node(globals, sys__local__result__120) || method_Tree_dblackAtTop__Node(globals, sys__local__result__120)) && ((key in old(method_Tree_toBag__Node(globals, current))) == 0 ? old(method_Tree_toBag__Node(globals, current)) == method_Tree_toBag__Node(globals, sys__local__result__120) : old(method_Tree_toBag__Node(globals, current)) == (method_Tree_toBag__Node(globals, sys__local__result__120) union Multiset(key))) && (!old(method_Tree_getColor__Node(globals, current)) ==> !method_Tree_getColor__Node(globals, sys__local__result__120)) && method_Tree_blackHeight__Node(globals, sys__local__result__120) == old(method_Tree_blackHeight__Node(globals, current))
      goto __return_deleteRec
    }
    rightBefore__139 := method_Tree_toBag__Node(globals, current.field_Node_right)
    __flatten_153__124 := method_Tree_deleteRec__Node__Integer(diz, current_thread_id, globals, current.field_Node_right, key)
    current.field_Node_right := __flatten_153__124
    rightAfter__140 := method_Tree_toBag__Node(globals, current.field_Node_right)
    // assert
    assert method_Tree_subbag__Bag$Integer$__Bag$Integer$(rightAfter__140, rightBefore__139)
    unfold acc(method_Tree_tree_perm__Node(globals, current.field_Node_right), write)
    __flatten_156__125 := current.field_Node_right
    __flatten_157__126 := current.field_Node_right
    if (current.field_Node_left != null && current.field_Node_right != null && __flatten_156__125.field_Node_color == false && __flatten_157__126.field_Node_dblack == true) {
      fold acc(method_Tree_tree_perm__Node(globals, current.field_Node_right), write)
      fold acc(method_Tree_tree_perm__Node(globals, current), write)
      fixed__141 := method_Tree_fixDBlackRight__Node(diz, current_thread_id, globals, current)
      sys__local__result__120 := fixed__141
      // assert
      assert acc(method_Tree_tree_perm__Node(globals, sys__local__result__120), write) && method_Tree_sorted__Node(globals, sys__local__result__120) && method_Tree_noDoubleRed__Node(globals, sys__local__result__120) && method_Tree_blackBalanced__Node(globals, sys__local__result__120) && (method_Tree_noDBlack__Node(globals, sys__local__result__120) || method_Tree_dblackAtTop__Node(globals, sys__local__result__120)) && ((key in old(method_Tree_toBag__Node(globals, current))) == 0 ? old(method_Tree_toBag__Node(globals, current)) == method_Tree_toBag__Node(globals, sys__local__result__120) : old(method_Tree_toBag__Node(globals, current)) == (method_Tree_toBag__Node(globals, sys__local__result__120) union Multiset(key))) && (!old(method_Tree_getColor__Node(globals, current)) ==> !method_Tree_getColor__Node(globals, sys__local__result__120)) && method_Tree_blackHeight__Node(globals, sys__local__result__120) == old(method_Tree_blackHeight__Node(globals, current))
      goto __return_deleteRec
    }
    fold acc(method_Tree_tree_perm__Node(globals, current.field_Node_right), write)
    fold acc(method_Tree_tree_perm__Node(globals, current), write)
    sys__local__result__120 := current
    // assert
    assert acc(method_Tree_tree_perm__Node(globals, sys__local__result__120), write) && method_Tree_sorted__Node(globals, sys__local__result__120) && method_Tree_noDoubleRed__Node(globals, sys__local__result__120) && method_Tree_blackBalanced__Node(globals, sys__local__result__120) && (method_Tree_noDBlack__Node(globals, sys__local__result__120) || method_Tree_dblackAtTop__Node(globals, sys__local__result__120)) && ((key in old(method_Tree_toBag__Node(globals, current))) == 0 ? old(method_Tree_toBag__Node(globals, current)) == method_Tree_toBag__Node(globals, sys__local__result__120) : old(method_Tree_toBag__Node(globals, current)) == (method_Tree_toBag__Node(globals, sys__local__result__120) union Multiset(key))) && (!old(method_Tree_getColor__Node(globals, current)) ==> !method_Tree_getColor__Node(globals, sys__local__result__120)) && method_Tree_blackHeight__Node(globals, sys__local__result__120) == old(method_Tree_blackHeight__Node(globals, current))
    goto __return_deleteRec
  }
  if (current.field_Node_left == null) {
    result__142 := current.field_Node_right
    if (current.field_Node_color == false) {
      if (result__142 == null) {
        current.field_Node_dblack := true
        current.field_Node_dblackNull := true
        fold acc(method_Tree_tree_perm__Node(globals, current), write)
        sys__local__result__120 := current
        // assert
        assert acc(method_Tree_tree_perm__Node(globals, sys__local__result__120), write) && method_Tree_sorted__Node(globals, sys__local__result__120) && method_Tree_noDoubleRed__Node(globals, sys__local__result__120) && method_Tree_blackBalanced__Node(globals, sys__local__result__120) && (method_Tree_noDBlack__Node(globals, sys__local__result__120) || method_Tree_dblackAtTop__Node(globals, sys__local__result__120)) && ((key in old(method_Tree_toBag__Node(globals, current))) == 0 ? old(method_Tree_toBag__Node(globals, current)) == method_Tree_toBag__Node(globals, sys__local__result__120) : old(method_Tree_toBag__Node(globals, current)) == (method_Tree_toBag__Node(globals, sys__local__result__120) union Multiset(key))) && (!old(method_Tree_getColor__Node(globals, current)) ==> !method_Tree_getColor__Node(globals, sys__local__result__120)) && method_Tree_blackHeight__Node(globals, sys__local__result__120) == old(method_Tree_blackHeight__Node(globals, current))
        goto __return_deleteRec
      } else {
        unfold acc(method_Tree_tree_perm__Node(globals, result__142), write)
        if (result__142.field_Node_color == true) {
          result__142.field_Node_color := false
        } else {
          result__142.field_Node_dblack := true
        }
        fold acc(method_Tree_tree_perm__Node(globals, result__142), write)
      }
    }
    sys__local__result__120 := result__142
    // assert
    assert acc(method_Tree_tree_perm__Node(globals, sys__local__result__120), write) && method_Tree_sorted__Node(globals, sys__local__result__120) && method_Tree_noDoubleRed__Node(globals, sys__local__result__120) && method_Tree_blackBalanced__Node(globals, sys__local__result__120) && (method_Tree_noDBlack__Node(globals, sys__local__result__120) || method_Tree_dblackAtTop__Node(globals, sys__local__result__120)) && ((key in old(method_Tree_toBag__Node(globals, current))) == 0 ? old(method_Tree_toBag__Node(globals, current)) == method_Tree_toBag__Node(globals, sys__local__result__120) : old(method_Tree_toBag__Node(globals, current)) == (method_Tree_toBag__Node(globals, sys__local__result__120) union Multiset(key))) && (!old(method_Tree_getColor__Node(globals, current)) ==> !method_Tree_getColor__Node(globals, sys__local__result__120)) && method_Tree_blackHeight__Node(globals, sys__local__result__120) == old(method_Tree_blackHeight__Node(globals, current))
    goto __return_deleteRec
  }
  if (current.field_Node_right == null) {
    result__143 := current.field_Node_left
    unfold acc(method_Tree_tree_perm__Node(globals, result__143), write)
    if (current.field_Node_color == false && result__143 != null) {
      if (result__143.field_Node_color == true) {
        result__143.field_Node_color := false
      } else {
        result__143.field_Node_dblack := true
      }
    }
    fold acc(method_Tree_tree_perm__Node(globals, result__143), write)
    sys__local__result__120 := result__143
    // assert
    assert acc(method_Tree_tree_perm__Node(globals, sys__local__result__120), write) && method_Tree_sorted__Node(globals, sys__local__result__120) && method_Tree_noDoubleRed__Node(globals, sys__local__result__120) && method_Tree_blackBalanced__Node(globals, sys__local__result__120) && (method_Tree_noDBlack__Node(globals, sys__local__result__120) || method_Tree_dblackAtTop__Node(globals, sys__local__result__120)) && ((key in old(method_Tree_toBag__Node(globals, current))) == 0 ? old(method_Tree_toBag__Node(globals, current)) == method_Tree_toBag__Node(globals, sys__local__result__120) : old(method_Tree_toBag__Node(globals, current)) == (method_Tree_toBag__Node(globals, sys__local__result__120) union Multiset(key))) && (!old(method_Tree_getColor__Node(globals, current)) ==> !method_Tree_getColor__Node(globals, sys__local__result__120)) && method_Tree_blackHeight__Node(globals, sys__local__result__120) == old(method_Tree_blackHeight__Node(globals, current))
    goto __return_deleteRec
  }
  rightColor__127 := method_Tree_getColor__Node(globals, current.field_Node_right)
  rightHeight__128 := method_Tree_blackHeight__Node(globals, current.field_Node_right)
  rightBag__129 := method_Tree_toBag__Node(globals, current.field_Node_right)
  successor__130, dummy_yields_1__119, dummy_yields_2__118, dummy_yields_3__117 := method_Tree_getMin__Node(diz, current_thread_id, globals, current.field_Node_right)
  unfold acc(method_Tree_tree_perm__Node(globals, successor__130), write)
  __flatten_163__131 := successor__130.field_Node_key
  current.field_Node_key := __flatten_163__131
  fold acc(method_Tree_tree_perm__Node(globals, successor__130), write)
  exhale acc(Wand_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$_for_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(globals, successor__130, globals, successor__130, globals, successor__130, method_Tree_getColor__Node(globals, successor__130), method_Tree_blackHeight__Node(globals, successor__130), method_Tree_toBag__Node(globals, successor__130), globals, current.field_Node_right, globals, current.field_Node_right, globals, current.field_Node_right, rightColor__127, rightHeight__128, rightBag__129), write)
  exhale acc(method_Tree_tree_perm__Node(globals, successor__130), write) && method_Tree_validSubtree__Node(globals, successor__130) && method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(globals, successor__130, method_Tree_getColor__Node(globals, successor__130), method_Tree_blackHeight__Node(globals, successor__130), method_Tree_toBag__Node(globals, successor__130))
  inhale acc(method_Tree_tree_perm__Node(globals, current.field_Node_right), write) && method_Tree_validSubtree__Node(globals, current.field_Node_right) && method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(globals, current.field_Node_right, rightColor__127, rightHeight__128, rightBag__129)
  __flatten_164__132 := method_Tree_deleteRec__Node__Integer(diz, current_thread_id, globals, current.field_Node_right, current.field_Node_key)
  current.field_Node_right := __flatten_164__132
  rightAfter__133 := method_Tree_toBag__Node(globals, current.field_Node_right)
  // assert
  assert method_Tree_subbag__Bag$Integer$__Bag$Integer$(rightAfter__133, rightBag__129)
  unfold acc(method_Tree_tree_perm__Node(globals, current.field_Node_right), write)
  __flatten_167__134 := current.field_Node_right
  __flatten_168__135 := current.field_Node_right
  if (current.field_Node_right != null && __flatten_167__134.field_Node_color == false && __flatten_168__135.field_Node_dblack == true) {
    fold acc(method_Tree_tree_perm__Node(globals, current.field_Node_right), write)
    fold acc(method_Tree_tree_perm__Node(globals, current), write)
    fixed__144 := method_Tree_fixDBlackRight__Node(diz, current_thread_id, globals, current)
    sys__local__result__120 := fixed__144
    // assert
    assert acc(method_Tree_tree_perm__Node(globals, sys__local__result__120), write) && method_Tree_sorted__Node(globals, sys__local__result__120) && method_Tree_noDoubleRed__Node(globals, sys__local__result__120) && method_Tree_blackBalanced__Node(globals, sys__local__result__120) && (method_Tree_noDBlack__Node(globals, sys__local__result__120) || method_Tree_dblackAtTop__Node(globals, sys__local__result__120)) && ((key in old(method_Tree_toBag__Node(globals, current))) == 0 ? old(method_Tree_toBag__Node(globals, current)) == method_Tree_toBag__Node(globals, sys__local__result__120) : old(method_Tree_toBag__Node(globals, current)) == (method_Tree_toBag__Node(globals, sys__local__result__120) union Multiset(key))) && (!old(method_Tree_getColor__Node(globals, current)) ==> !method_Tree_getColor__Node(globals, sys__local__result__120)) && method_Tree_blackHeight__Node(globals, sys__local__result__120) == old(method_Tree_blackHeight__Node(globals, current))
    goto __return_deleteRec
  }
  fold acc(method_Tree_tree_perm__Node(globals, current.field_Node_right), write)
  fold acc(method_Tree_tree_perm__Node(globals, current), write)
  sys__local__result__120 := current
  // assert
  assert acc(method_Tree_tree_perm__Node(globals, sys__local__result__120), write) && method_Tree_sorted__Node(globals, sys__local__result__120) && method_Tree_noDoubleRed__Node(globals, sys__local__result__120) && method_Tree_blackBalanced__Node(globals, sys__local__result__120) && (method_Tree_noDBlack__Node(globals, sys__local__result__120) || method_Tree_dblackAtTop__Node(globals, sys__local__result__120)) && ((key in old(method_Tree_toBag__Node(globals, current))) == 0 ? old(method_Tree_toBag__Node(globals, current)) == method_Tree_toBag__Node(globals, sys__local__result__120) : old(method_Tree_toBag__Node(globals, current)) == (method_Tree_toBag__Node(globals, sys__local__result__120) union Multiset(key))) && (!old(method_Tree_getColor__Node(globals, current)) ==> !method_Tree_getColor__Node(globals, sys__local__result__120)) && method_Tree_blackHeight__Node(globals, sys__local__result__120) == old(method_Tree_blackHeight__Node(globals, current))
  goto __return_deleteRec
  label __return_deleteRec
  sys__result := sys__local__result__120
  // assert
  assert acc(method_Tree_tree_perm__Node(globals, sys__result), write) && method_Tree_sorted__Node(globals, sys__result) && method_Tree_noDoubleRed__Node(globals, sys__result) && method_Tree_blackBalanced__Node(globals, sys__result) && (method_Tree_noDBlack__Node(globals, sys__result) || method_Tree_dblackAtTop__Node(globals, sys__result)) && ((key in old(method_Tree_toBag__Node(globals, current))) == 0 ? old(method_Tree_toBag__Node(globals, current)) == method_Tree_toBag__Node(globals, sys__result) : old(method_Tree_toBag__Node(globals, current)) == (method_Tree_toBag__Node(globals, sys__result) union Multiset(key))) && (!old(method_Tree_getColor__Node(globals, current)) ==> !method_Tree_getColor__Node(globals, sys__result)) && method_Tree_blackHeight__Node(globals, sys__result) == old(method_Tree_blackHeight__Node(globals, current))
  inhale false
  label method_end_method_Tree_deleteRec__Node__Integer_22
}

method __contract_unsatisfiable__method_Tree_getMin__Node(diz: Ref, current_thread_id: Int, globals: Ref, current: Ref) returns (sys__result: Ref, resColor: Bool, resHeight: Int, resBag: Multiset[Int])
  requires diz != null
  requires 0 <= current_thread_id
{
  inhale true && (acc(method_Tree_tree_perm__Node(globals, current), write) && method_Tree_validSubtree__Node(globals, current))
  // assert
  assert false
  inhale false
  label method_end___contract_unsatisfiable__method_Tree_getMin__Node_23
}

method lemma_2(diz: Ref, current_thread_id: Int, res: Ref, current: Ref, globals: Ref, oldColor: Bool, oldHeight: Int, oldBag: Multiset[Int])
  requires diz != null
  requires 0 <= current_thread_id
  requires res == current
  requires acc(method_Tree_tree_perm__Node(globals, res), write)
  requires method_Tree_validSubtree__Node(globals, res)
  requires method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(globals, res, oldColor, oldHeight, oldBag)
  ensures acc(method_Tree_tree_perm__Node(globals, current), write)
  ensures method_Tree_validSubtree__Node(globals, current)
  ensures method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(globals, current, old(method_Tree_getColor__Node(globals, current)), old(method_Tree_blackHeight__Node(globals, current)), old(method_Tree_toBag__Node(globals, current)))
{
  label method_end_lemma_2_24
}

method method_Tree_getMin__Node(diz: Ref, current_thread_id: Int, globals: Ref, current: Ref) returns (sys__result: Ref, resColor: Bool, resHeight: Int, resBag: Multiset[Int])
  requires diz != null
  requires 0 <= current_thread_id
  requires acc(method_Tree_tree_perm__Node(globals, current), write)
  requires method_Tree_validSubtree__Node(globals, current)
  ensures acc(method_Tree_tree_perm__Node(globals, sys__result), write)
  ensures method_Tree_validSubtree__Node(globals, sys__result)
  ensures acc(Wand_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$_for_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(globals, sys__result, globals, sys__result, globals, sys__result, resColor, resHeight, resBag, globals, current, globals, current, globals, current, old(method_Tree_getColor__Node(globals, current)), old(method_Tree_blackHeight__Node(globals, current)), old(method_Tree_toBag__Node(globals, current))), write)
  ensures current == null ==> sys__result == null
  ensures current != null ==> sys__result != null && (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in sys__result.field_Node_left == null) && method_Tree_larger__Bag$Integer$__Integer(old(method_Tree_toBag__Node(globals, current)), (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in sys__result.field_Node_key)) && 0 < (((unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in sys__result.field_Node_key) in old(method_Tree_toBag__Node(globals, current))))
  ensures resColor == method_Tree_getColor__Node(globals, sys__result)
  ensures resHeight == method_Tree_blackHeight__Node(globals, sys__result)
  ensures resBag == method_Tree_toBag__Node(globals, sys__result)
{
  var leftBag__155: Multiset[Int]
  var leftHeight__154: Int
  var leftColor__153: Bool
  var sys__local__result__145: Ref
  var res__146: Ref
  var oldColor__147: Bool
  var oldHeight__148: Int
  var oldBag__149: Multiset[Int]
  var __flatten_177__150: Bool
  var __flatten_178__151: Int
  var __flatten_179__152: Multiset[Int]
  oldColor__147 := method_Tree_getColor__Node(globals, current)
  oldHeight__148 := method_Tree_blackHeight__Node(globals, current)
  oldBag__149 := method_Tree_toBag__Node(globals, current)
  unfold acc(method_Tree_tree_perm__Node(globals, current), write)
  if (current == null || current.field_Node_left == null) {
    fold acc(method_Tree_tree_perm__Node(globals, current), write)
    res__146 := current
    resColor := oldColor__147
    resHeight := oldHeight__148
    resBag := oldBag__149
    exhale res__146 == current
    inhale acc(Wand_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$_for_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(globals, res__146, globals, res__146, globals, res__146, oldColor__147, oldHeight__148, oldBag__149, globals, current, globals, current, globals, current, old(method_Tree_getColor__Node(globals, current)), old(method_Tree_blackHeight__Node(globals, current)), old(method_Tree_toBag__Node(globals, current))), write)
  } else {
    leftColor__153 := method_Tree_getColor__Node(globals, current.field_Node_left)
    leftHeight__154 := method_Tree_blackHeight__Node(globals, current.field_Node_left)
    leftBag__155 := method_Tree_toBag__Node(globals, current.field_Node_left)
    res__146, resColor, resHeight, resBag := method_Tree_getMin__Node(diz, current_thread_id, globals, current.field_Node_left)
    __flatten_177__150 := method_Tree_getColor__Node(globals, res__146)
    __flatten_178__151 := method_Tree_blackHeight__Node(globals, res__146)
    __flatten_179__152 := method_Tree_toBag__Node(globals, res__146)
    method_Tree_makeWand__Node__Node__Node__Node__Boolean__Integer__Bag$Integer$__Boolean__Integer__Bag$Integer$__Boolean__Integer__Bag$Integer$__Boolean(current_thread_id, globals, res__146, current, current.field_Node_left, current.field_Node_right, oldColor__147, oldHeight__148, oldBag__149, leftColor__153, leftHeight__154, leftBag__155, __flatten_177__150, __flatten_178__151, __flatten_179__152, true)
  }
  sys__local__result__145 := res__146
  // assert
  assert acc(method_Tree_tree_perm__Node(globals, sys__local__result__145), write) && method_Tree_validSubtree__Node(globals, sys__local__result__145) && acc(Wand_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$_for_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(globals, sys__local__result__145, globals, sys__local__result__145, globals, sys__local__result__145, resColor, resHeight, resBag, globals, current, globals, current, globals, current, old(method_Tree_getColor__Node(globals, current)), old(method_Tree_blackHeight__Node(globals, current)), old(method_Tree_toBag__Node(globals, current))), write) && (current == null ==> sys__local__result__145 == null) && (current != null ==> sys__local__result__145 != null && (unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__145), write) in sys__local__result__145.field_Node_left == null) && method_Tree_larger__Bag$Integer$__Integer(old(method_Tree_toBag__Node(globals, current)), (unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__145), write) in sys__local__result__145.field_Node_key)) && 0 < (((unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__145), write) in sys__local__result__145.field_Node_key) in old(method_Tree_toBag__Node(globals, current))))) && resColor == method_Tree_getColor__Node(globals, sys__local__result__145) && resHeight == method_Tree_blackHeight__Node(globals, sys__local__result__145) && resBag == method_Tree_toBag__Node(globals, sys__local__result__145)
  goto __return_getMin
  label __return_getMin
  sys__result := sys__local__result__145
  // assert
  assert acc(method_Tree_tree_perm__Node(globals, sys__result), write) && method_Tree_validSubtree__Node(globals, sys__result) && acc(Wand_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$_for_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(globals, sys__result, globals, sys__result, globals, sys__result, resColor, resHeight, resBag, globals, current, globals, current, globals, current, old(method_Tree_getColor__Node(globals, current)), old(method_Tree_blackHeight__Node(globals, current)), old(method_Tree_toBag__Node(globals, current))), write) && (current == null ==> sys__result == null) && (current != null ==> sys__result != null && (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in sys__result.field_Node_left == null) && method_Tree_larger__Bag$Integer$__Integer(old(method_Tree_toBag__Node(globals, current)), (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in sys__result.field_Node_key)) && 0 < (((unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in sys__result.field_Node_key) in old(method_Tree_toBag__Node(globals, current))))) && resColor == method_Tree_getColor__Node(globals, sys__result) && resHeight == method_Tree_blackHeight__Node(globals, sys__result) && resBag == method_Tree_toBag__Node(globals, sys__result)
  inhale false
  label method_end_method_Tree_getMin__Node_25
}

method __contract_unsatisfiable__method_Tree_search__Node__Integer(diz: Ref, current_thread_id: Int, globals: Ref, current: Ref, key: Int) returns (sys__result: Ref, resColor: Bool, resHeight: Int, resBag: Multiset[Int])
  requires diz != null
  requires 0 <= current_thread_id
{
  inhale true && (acc(method_Tree_tree_perm__Node(globals, current), write) && method_Tree_validSubtree__Node(globals, current))
  // assert
  assert false
  inhale false
  label method_end___contract_unsatisfiable__method_Tree_search__Node__Integer_26
}

method lemma_3(diz: Ref, current_thread_id: Int, res: Ref, current: Ref, globals: Ref, oldColor: Bool, oldHeight: Int, oldBag: Multiset[Int])
  requires diz != null
  requires 0 <= current_thread_id
  requires res == current
  requires acc(method_Tree_tree_perm__Node(globals, res), write)
  requires method_Tree_validSubtree__Node(globals, res)
  requires method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(globals, res, oldColor, oldHeight, oldBag)
  ensures acc(method_Tree_tree_perm__Node(globals, current), write)
  ensures method_Tree_validSubtree__Node(globals, current)
  ensures method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(globals, current, method_Tree_getColor__Node(globals, current), method_Tree_blackHeight__Node(globals, current), method_Tree_toBag__Node(globals, current))
{
  label method_end_lemma_3_27
}

method method_Tree_search__Node__Integer(diz: Ref, current_thread_id: Int, globals: Ref, current: Ref, key: Int) returns (sys__result: Ref, resColor: Bool, resHeight: Int, resBag: Multiset[Int])
  requires diz != null
  requires 0 <= current_thread_id
  requires acc(method_Tree_tree_perm__Node(globals, current), write)
  requires method_Tree_validSubtree__Node(globals, current)
  ensures acc(method_Tree_tree_perm__Node(globals, sys__result), write)
  ensures method_Tree_validSubtree__Node(globals, sys__result)
  ensures current == null ==> sys__result == null
  ensures sys__result != null ==> (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in sys__result.field_Node_key == key)
  ensures acc(Wand_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$_for_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(globals, sys__result, globals, sys__result, globals, sys__result, resColor, resHeight, resBag, globals, current, globals, current, globals, current, old(method_Tree_getColor__Node(globals, current)), old(method_Tree_blackHeight__Node(globals, current)), old(method_Tree_toBag__Node(globals, current))), write)
  ensures resColor == method_Tree_getColor__Node(globals, sys__result)
  ensures resHeight == method_Tree_blackHeight__Node(globals, sys__result)
  ensures resBag == method_Tree_toBag__Node(globals, sys__result)
{
  var rightBag__173: Multiset[Int]
  var rightHeight__172: Int
  var rightColor__171: Bool
  var oldColor__170: Bool
  var leftBag__169: Multiset[Int]
  var leftHeight__168: Int
  var leftColor__167: Bool
  var sys__local__result__156: Ref
  var res__157: Ref
  var oldColor__158: Bool
  var oldHeight__159: Int
  var oldBag__160: Multiset[Int]
  var __flatten_188__161: Bool
  var __flatten_189__162: Int
  var __flatten_190__163: Multiset[Int]
  var __flatten_196__164: Bool
  var __flatten_197__165: Int
  var __flatten_198__166: Multiset[Int]
  oldColor__158 := method_Tree_getColor__Node(globals, current)
  oldHeight__159 := method_Tree_blackHeight__Node(globals, current)
  oldBag__160 := method_Tree_toBag__Node(globals, current)
  unfold acc(method_Tree_tree_perm__Node(globals, current), write)
  if (current == null || current.field_Node_key == key) {
    fold acc(method_Tree_tree_perm__Node(globals, current), write)
    res__157 := current
    resColor := oldColor__158
    resHeight := oldHeight__159
    resBag := oldBag__160
    exhale res__157 == current
    inhale acc(Wand_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$_for_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(globals, res__157, globals, res__157, globals, res__157, oldColor__158, oldHeight__159, oldBag__160, globals, current, globals, current, globals, current, method_Tree_getColor__Node(globals, current), method_Tree_blackHeight__Node(globals, current), method_Tree_toBag__Node(globals, current)), write)
  } elseif (key < current.field_Node_key) {
    leftColor__167 := method_Tree_getColor__Node(globals, current.field_Node_left)
    leftHeight__168 := method_Tree_blackHeight__Node(globals, current.field_Node_left)
    leftBag__169 := method_Tree_toBag__Node(globals, current.field_Node_left)
    res__157, resColor, resHeight, resBag := method_Tree_search__Node__Integer(diz, current_thread_id, globals, current.field_Node_left, key)
    __flatten_188__161 := method_Tree_getColor__Node(globals, res__157)
    __flatten_189__162 := method_Tree_blackHeight__Node(globals, res__157)
    __flatten_190__163 := method_Tree_toBag__Node(globals, res__157)
    method_Tree_makeWand__Node__Node__Node__Node__Boolean__Integer__Bag$Integer$__Boolean__Integer__Bag$Integer$__Boolean__Integer__Bag$Integer$__Boolean(current_thread_id, globals, res__157, current, current.field_Node_left, current.field_Node_right, oldColor__158, oldHeight__159, oldBag__160, leftColor__167, leftHeight__168, leftBag__169, __flatten_188__161, __flatten_189__162, __flatten_190__163, true)
  } else {
    oldColor__170 := current.field_Node_color
    rightColor__171 := method_Tree_getColor__Node(globals, current.field_Node_right)
    rightHeight__172 := method_Tree_blackHeight__Node(globals, current.field_Node_right)
    rightBag__173 := method_Tree_toBag__Node(globals, current.field_Node_right)
    res__157, resColor, resHeight, resBag := method_Tree_search__Node__Integer(diz, current_thread_id, globals, current.field_Node_right, key)
    __flatten_196__164 := method_Tree_getColor__Node(globals, res__157)
    __flatten_197__165 := method_Tree_blackHeight__Node(globals, res__157)
    __flatten_198__166 := method_Tree_toBag__Node(globals, res__157)
    method_Tree_makeWand__Node__Node__Node__Node__Boolean__Integer__Bag$Integer$__Boolean__Integer__Bag$Integer$__Boolean__Integer__Bag$Integer$__Boolean(current_thread_id, globals, res__157, current, current.field_Node_right, current.field_Node_left, oldColor__170, oldHeight__159, oldBag__160, rightColor__171, rightHeight__172, rightBag__173, __flatten_196__164, __flatten_197__165, __flatten_198__166, false)
  }
  sys__local__result__156 := res__157
  // assert
  assert acc(method_Tree_tree_perm__Node(globals, sys__local__result__156), write) && method_Tree_validSubtree__Node(globals, sys__local__result__156) && (current == null ==> sys__local__result__156 == null) && (sys__local__result__156 != null ==> (unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__156), write) in sys__local__result__156.field_Node_key == key)) && acc(Wand_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$_for_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(globals, sys__local__result__156, globals, sys__local__result__156, globals, sys__local__result__156, resColor, resHeight, resBag, globals, current, globals, current, globals, current, old(method_Tree_getColor__Node(globals, current)), old(method_Tree_blackHeight__Node(globals, current)), old(method_Tree_toBag__Node(globals, current))), write) && resColor == method_Tree_getColor__Node(globals, sys__local__result__156) && resHeight == method_Tree_blackHeight__Node(globals, sys__local__result__156) && resBag == method_Tree_toBag__Node(globals, sys__local__result__156)
  goto __return_search
  label __return_search
  sys__result := sys__local__result__156
  // assert
  assert acc(method_Tree_tree_perm__Node(globals, sys__result), write) && method_Tree_validSubtree__Node(globals, sys__result) && (current == null ==> sys__result == null) && (sys__result != null ==> (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in sys__result.field_Node_key == key)) && acc(Wand_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$_for_method_Tree_tree_perm__Node_method_Tree_validSubtree__Node_method_Tree_subtreeFitsHole__Node__Boolean__Integer__Bag$Integer$(globals, sys__result, globals, sys__result, globals, sys__result, resColor, resHeight, resBag, globals, current, globals, current, globals, current, old(method_Tree_getColor__Node(globals, current)), old(method_Tree_blackHeight__Node(globals, current)), old(method_Tree_toBag__Node(globals, current))), write) && resColor == method_Tree_getColor__Node(globals, sys__result) && resHeight == method_Tree_blackHeight__Node(globals, sys__result) && resBag == method_Tree_toBag__Node(globals, sys__result)
  inhale false
  label method_end_method_Tree_search__Node__Integer_28
}

method __contract_unsatisfiable__method_Tree_rotateLeft__Node(diz: Ref, current_thread_id: Int, globals: Ref, node: Ref) returns (sys__result: Ref)
  requires diz != null
  requires 0 <= current_thread_id
{
  inhale true && (node != null && acc(method_Tree_tree_perm__Node(globals, node), write) && method_Tree_sorted__Node(globals, node) && (unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in node.field_Node_right != null) && (!(unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_getColor__Node(globals, node.field_Node_left)) || !(unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_getColor__Node(globals, node.field_Node_right))) && (!method_Tree_getColor__Node(globals, node) || (unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in !(unfolding acc(method_Tree_tree_perm__Node(globals, node.field_Node_right), write) in method_Tree_getColor__Node(globals, node.field_Node_right.field_Node_right)))) && (method_Tree_noDoubleRed__Node(globals, node) || method_Tree_dbRedAtRight__Node(globals, node) || !method_Tree_getColor__Node(globals, node) && (unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_noDoubleRed__Node(globals, node.field_Node_left) && method_Tree_dbRedAtRight__Node(globals, node.field_Node_right))) && (method_Tree_noDBlack__Node(globals, node) || method_Tree_dblackAtLeft__Node(globals, node)) && (unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_blackBalanced__Node(globals, node.field_Node_left) && method_Tree_blackBalanced__Node(globals, node.field_Node_right)) && (unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_blackHeight__Node(globals, node.field_Node_left) == (unfolding acc(method_Tree_tree_perm__Node(globals, node.field_Node_right), write) in method_Tree_blackHeight__Node(globals, node.field_Node_right.field_Node_left))))
  // assert
  assert false
  inhale false
  label method_end___contract_unsatisfiable__method_Tree_rotateLeft__Node_29
}

method method_Tree_rotateLeft__Node(diz: Ref, current_thread_id: Int, globals: Ref, node: Ref) returns (sys__result: Ref)
  requires diz != null
  requires 0 <= current_thread_id
  requires node != null
  requires acc(method_Tree_tree_perm__Node(globals, node), write)
  requires method_Tree_sorted__Node(globals, node)
  requires (unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in node.field_Node_right != null)
  requires !(unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_getColor__Node(globals, node.field_Node_left)) || !(unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_getColor__Node(globals, node.field_Node_right))
  requires !method_Tree_getColor__Node(globals, node) || (unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in !(unfolding acc(method_Tree_tree_perm__Node(globals, node.field_Node_right), write) in method_Tree_getColor__Node(globals, node.field_Node_right.field_Node_right)))
  requires method_Tree_noDoubleRed__Node(globals, node) || method_Tree_dbRedAtRight__Node(globals, node) || !method_Tree_getColor__Node(globals, node) && (unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_noDoubleRed__Node(globals, node.field_Node_left) && method_Tree_dbRedAtRight__Node(globals, node.field_Node_right))
  requires method_Tree_noDBlack__Node(globals, node) || method_Tree_dblackAtLeft__Node(globals, node)
  requires (unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_blackBalanced__Node(globals, node.field_Node_left) && method_Tree_blackBalanced__Node(globals, node.field_Node_right))
  requires (unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_blackHeight__Node(globals, node.field_Node_left) == (unfolding acc(method_Tree_tree_perm__Node(globals, node.field_Node_right), write) in method_Tree_blackHeight__Node(globals, node.field_Node_right.field_Node_left)))
  ensures sys__result != null
  ensures acc(method_Tree_tree_perm__Node(globals, sys__result), write)
  ensures method_Tree_sorted__Node(globals, sys__result)
  ensures (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in sys__result.field_Node_left != null)
  ensures old(method_Tree_toBag__Node(globals, node)) == method_Tree_toBag__Node(globals, sys__result)
  ensures old(method_Tree_getColor__Node(globals, node)) == method_Tree_getColor__Node(globals, sys__result)
  ensures old((unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_getColor__Node(globals, node.field_Node_right))) == (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_getColor__Node(globals, sys__result.field_Node_left))
  ensures old((unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in (unfolding acc(method_Tree_tree_perm__Node(globals, node.field_Node_right), write) in method_Tree_getColor__Node(globals, node.field_Node_right.field_Node_right)))) == (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_getColor__Node(globals, sys__result.field_Node_right))
  ensures old(method_Tree_blackHeight__Node(globals, node)) == method_Tree_blackHeight__Node(globals, sys__result)
  ensures (old(method_Tree_dbRedAtRight__Node(globals, node)) ? method_Tree_dbRedAtLeft__Node(globals, sys__result) : method_Tree_noDoubleRed__Node(globals, sys__result))
  ensures old(method_Tree_noDBlack__Node(globals, node)) ==> method_Tree_noDBlack__Node(globals, sys__result)
  ensures old(method_Tree_dblackAtLeft__Node(globals, node)) ==> method_Tree_dblackAtLeftLeft__Node(globals, sys__result)
  ensures (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_blackBalanced__Node(globals, sys__result.field_Node_left) && method_Tree_blackBalanced__Node(globals, sys__result.field_Node_right))
  ensures (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_blackHeight__Node(globals, sys__result.field_Node_right) == (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result.field_Node_left), write) in method_Tree_blackHeight__Node(globals, sys__result.field_Node_left.field_Node_right)))
{
  var sys__local__result__174: Ref
  var tempNode__175: Ref
  var tempColor__176: Bool
  var tempContent__177: Multiset[Int]
  var tempLeftContent__178: Multiset[Int]
  var __flatten_202__179: Ref
  var __flatten_203__180: Bool
  unfold acc(method_Tree_tree_perm__Node(globals, node), write)
  tempNode__175 := node.field_Node_right
  tempColor__176 := node.field_Node_color
  tempContent__177 := method_Tree_toBag__Node(globals, tempNode__175)
  unfold acc(method_Tree_tree_perm__Node(globals, tempNode__175), write)
  tempLeftContent__178 := method_Tree_toBag__Node(globals, tempNode__175.field_Node_left)
  // assert
  assert method_Tree_subbag__Bag$Integer$__Bag$Integer$(tempLeftContent__178, tempContent__177)
  // assert
  assert (tempNode__175.field_Node_key in tempContent__177) != 0
  __flatten_202__179 := tempNode__175.field_Node_left
  node.field_Node_right := __flatten_202__179
  tempNode__175.field_Node_left := node
  __flatten_203__180 := tempNode__175.field_Node_color
  node.field_Node_color := __flatten_203__180
  tempNode__175.field_Node_color := tempColor__176
  fold acc(method_Tree_tree_perm__Node(globals, node), write)
  fold acc(method_Tree_tree_perm__Node(globals, tempNode__175), write)
  sys__local__result__174 := tempNode__175
  // assert
  assert sys__local__result__174 != null && acc(method_Tree_tree_perm__Node(globals, sys__local__result__174), write) && method_Tree_sorted__Node(globals, sys__local__result__174) && (unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__174), write) in sys__local__result__174.field_Node_left != null) && old(method_Tree_toBag__Node(globals, node)) == method_Tree_toBag__Node(globals, sys__local__result__174) && old(method_Tree_getColor__Node(globals, node)) == method_Tree_getColor__Node(globals, sys__local__result__174) && old((unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_getColor__Node(globals, node.field_Node_right))) == (unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__174), write) in method_Tree_getColor__Node(globals, sys__local__result__174.field_Node_left)) && old((unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in (unfolding acc(method_Tree_tree_perm__Node(globals, node.field_Node_right), write) in method_Tree_getColor__Node(globals, node.field_Node_right.field_Node_right)))) == (unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__174), write) in method_Tree_getColor__Node(globals, sys__local__result__174.field_Node_right)) && old(method_Tree_blackHeight__Node(globals, node)) == method_Tree_blackHeight__Node(globals, sys__local__result__174) && (old(method_Tree_dbRedAtRight__Node(globals, node)) ? method_Tree_dbRedAtLeft__Node(globals, sys__local__result__174) : method_Tree_noDoubleRed__Node(globals, sys__local__result__174)) && (old(method_Tree_noDBlack__Node(globals, node)) ==> method_Tree_noDBlack__Node(globals, sys__local__result__174)) && (old(method_Tree_dblackAtLeft__Node(globals, node)) ==> method_Tree_dblackAtLeftLeft__Node(globals, sys__local__result__174)) && (unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__174), write) in method_Tree_blackBalanced__Node(globals, sys__local__result__174.field_Node_left) && method_Tree_blackBalanced__Node(globals, sys__local__result__174.field_Node_right)) && (unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__174), write) in method_Tree_blackHeight__Node(globals, sys__local__result__174.field_Node_right) == (unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__174.field_Node_left), write) in method_Tree_blackHeight__Node(globals, sys__local__result__174.field_Node_left.field_Node_right)))
  goto __return_rotateLeft
  label __return_rotateLeft
  sys__result := sys__local__result__174
  // assert
  assert sys__result != null && acc(method_Tree_tree_perm__Node(globals, sys__result), write) && method_Tree_sorted__Node(globals, sys__result) && (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in sys__result.field_Node_left != null) && old(method_Tree_toBag__Node(globals, node)) == method_Tree_toBag__Node(globals, sys__result) && old(method_Tree_getColor__Node(globals, node)) == method_Tree_getColor__Node(globals, sys__result) && old((unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_getColor__Node(globals, node.field_Node_right))) == (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_getColor__Node(globals, sys__result.field_Node_left)) && old((unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in (unfolding acc(method_Tree_tree_perm__Node(globals, node.field_Node_right), write) in method_Tree_getColor__Node(globals, node.field_Node_right.field_Node_right)))) == (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_getColor__Node(globals, sys__result.field_Node_right)) && old(method_Tree_blackHeight__Node(globals, node)) == method_Tree_blackHeight__Node(globals, sys__result) && (old(method_Tree_dbRedAtRight__Node(globals, node)) ? method_Tree_dbRedAtLeft__Node(globals, sys__result) : method_Tree_noDoubleRed__Node(globals, sys__result)) && (old(method_Tree_noDBlack__Node(globals, node)) ==> method_Tree_noDBlack__Node(globals, sys__result)) && (old(method_Tree_dblackAtLeft__Node(globals, node)) ==> method_Tree_dblackAtLeftLeft__Node(globals, sys__result)) && (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_blackBalanced__Node(globals, sys__result.field_Node_left) && method_Tree_blackBalanced__Node(globals, sys__result.field_Node_right)) && (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_blackHeight__Node(globals, sys__result.field_Node_right) == (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result.field_Node_left), write) in method_Tree_blackHeight__Node(globals, sys__result.field_Node_left.field_Node_right)))
  inhale false
  label method_end_method_Tree_rotateLeft__Node_30
}

method __contract_unsatisfiable__method_Tree_rotateRight__Node(diz: Ref, current_thread_id: Int, globals: Ref, node: Ref) returns (sys__result: Ref)
  requires diz != null
  requires 0 <= current_thread_id
{
  inhale true && (node != null && acc(method_Tree_tree_perm__Node(globals, node), write) && method_Tree_sorted__Node(globals, node) && (unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in node.field_Node_left != null) && (!(unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_getColor__Node(globals, node.field_Node_left)) || !(unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_getColor__Node(globals, node.field_Node_right))) && (!method_Tree_getColor__Node(globals, node) || (unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in !(unfolding acc(method_Tree_tree_perm__Node(globals, node.field_Node_left), write) in method_Tree_getColor__Node(globals, node.field_Node_left.field_Node_left)))) && (method_Tree_noDoubleRed__Node(globals, node) || method_Tree_dbRedAtLeft__Node(globals, node) || !method_Tree_getColor__Node(globals, node) && (unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_noDoubleRed__Node(globals, node.field_Node_right) && method_Tree_dbRedAtLeft__Node(globals, node.field_Node_left))) && (method_Tree_noDBlack__Node(globals, node) || method_Tree_dblackAtRight__Node(globals, node)) && (unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_blackBalanced__Node(globals, node.field_Node_left) && method_Tree_blackBalanced__Node(globals, node.field_Node_right)) && (unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_blackHeight__Node(globals, node.field_Node_right) == (unfolding acc(method_Tree_tree_perm__Node(globals, node.field_Node_left), write) in method_Tree_blackHeight__Node(globals, node.field_Node_left.field_Node_right))))
  // assert
  assert false
  inhale false
  label method_end___contract_unsatisfiable__method_Tree_rotateRight__Node_31
}

method method_Tree_rotateRight__Node(diz: Ref, current_thread_id: Int, globals: Ref, node: Ref) returns (sys__result: Ref)
  requires diz != null
  requires 0 <= current_thread_id
  requires node != null
  requires acc(method_Tree_tree_perm__Node(globals, node), write)
  requires method_Tree_sorted__Node(globals, node)
  requires (unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in node.field_Node_left != null)
  requires !(unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_getColor__Node(globals, node.field_Node_left)) || !(unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_getColor__Node(globals, node.field_Node_right))
  requires !method_Tree_getColor__Node(globals, node) || (unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in !(unfolding acc(method_Tree_tree_perm__Node(globals, node.field_Node_left), write) in method_Tree_getColor__Node(globals, node.field_Node_left.field_Node_left)))
  requires method_Tree_noDoubleRed__Node(globals, node) || method_Tree_dbRedAtLeft__Node(globals, node) || !method_Tree_getColor__Node(globals, node) && (unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_noDoubleRed__Node(globals, node.field_Node_right) && method_Tree_dbRedAtLeft__Node(globals, node.field_Node_left))
  requires method_Tree_noDBlack__Node(globals, node) || method_Tree_dblackAtRight__Node(globals, node)
  requires (unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_blackBalanced__Node(globals, node.field_Node_left) && method_Tree_blackBalanced__Node(globals, node.field_Node_right))
  requires (unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_blackHeight__Node(globals, node.field_Node_right) == (unfolding acc(method_Tree_tree_perm__Node(globals, node.field_Node_left), write) in method_Tree_blackHeight__Node(globals, node.field_Node_left.field_Node_right)))
  ensures sys__result != null
  ensures acc(method_Tree_tree_perm__Node(globals, sys__result), write)
  ensures method_Tree_sorted__Node(globals, sys__result)
  ensures (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in sys__result.field_Node_right != null)
  ensures old(method_Tree_toBag__Node(globals, node)) == method_Tree_toBag__Node(globals, sys__result)
  ensures old(method_Tree_getColor__Node(globals, node)) == method_Tree_getColor__Node(globals, sys__result)
  ensures old((unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_getColor__Node(globals, node.field_Node_left))) == (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_getColor__Node(globals, sys__result.field_Node_right))
  ensures old((unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in (unfolding acc(method_Tree_tree_perm__Node(globals, node.field_Node_left), write) in method_Tree_getColor__Node(globals, node.field_Node_left.field_Node_left)))) == (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_getColor__Node(globals, sys__result.field_Node_left))
  ensures old(method_Tree_blackHeight__Node(globals, node)) == method_Tree_blackHeight__Node(globals, sys__result)
  ensures (old(method_Tree_dbRedAtLeft__Node(globals, node)) ? method_Tree_dbRedAtRight__Node(globals, sys__result) : method_Tree_noDoubleRed__Node(globals, sys__result))
  ensures old(method_Tree_noDBlack__Node(globals, node)) ==> method_Tree_noDBlack__Node(globals, sys__result)
  ensures old(method_Tree_dblackAtRight__Node(globals, node)) ==> method_Tree_dblackAtRightRight__Node(globals, sys__result)
  ensures (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_blackBalanced__Node(globals, sys__result.field_Node_left) && method_Tree_blackBalanced__Node(globals, sys__result.field_Node_right))
  ensures (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_blackHeight__Node(globals, sys__result.field_Node_left) == (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result.field_Node_right), write) in method_Tree_blackHeight__Node(globals, sys__result.field_Node_right.field_Node_left)))
{
  var sys__local__result__181: Ref
  var tempNode__182: Ref
  var tempColor__183: Bool
  var tempContent__184: Multiset[Int]
  var tempRightContent__185: Multiset[Int]
  var __flatten_206__186: Ref
  var __flatten_207__187: Bool
  unfold acc(method_Tree_tree_perm__Node(globals, node), write)
  tempNode__182 := node.field_Node_left
  tempColor__183 := node.field_Node_color
  tempContent__184 := method_Tree_toBag__Node(globals, tempNode__182)
  unfold acc(method_Tree_tree_perm__Node(globals, tempNode__182), write)
  tempRightContent__185 := method_Tree_toBag__Node(globals, tempNode__182.field_Node_right)
  // assert
  assert method_Tree_subbag__Bag$Integer$__Bag$Integer$(tempRightContent__185, tempContent__184)
  // assert
  assert (tempNode__182.field_Node_key in tempContent__184) != 0
  __flatten_206__186 := tempNode__182.field_Node_right
  node.field_Node_left := __flatten_206__186
  tempNode__182.field_Node_right := node
  __flatten_207__187 := tempNode__182.field_Node_color
  node.field_Node_color := __flatten_207__187
  tempNode__182.field_Node_color := tempColor__183
  fold acc(method_Tree_tree_perm__Node(globals, node), write)
  fold acc(method_Tree_tree_perm__Node(globals, tempNode__182), write)
  sys__local__result__181 := tempNode__182
  // assert
  assert sys__local__result__181 != null && acc(method_Tree_tree_perm__Node(globals, sys__local__result__181), write) && method_Tree_sorted__Node(globals, sys__local__result__181) && (unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__181), write) in sys__local__result__181.field_Node_right != null) && old(method_Tree_toBag__Node(globals, node)) == method_Tree_toBag__Node(globals, sys__local__result__181) && old(method_Tree_getColor__Node(globals, node)) == method_Tree_getColor__Node(globals, sys__local__result__181) && old((unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_getColor__Node(globals, node.field_Node_left))) == (unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__181), write) in method_Tree_getColor__Node(globals, sys__local__result__181.field_Node_right)) && old((unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in (unfolding acc(method_Tree_tree_perm__Node(globals, node.field_Node_left), write) in method_Tree_getColor__Node(globals, node.field_Node_left.field_Node_left)))) == (unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__181), write) in method_Tree_getColor__Node(globals, sys__local__result__181.field_Node_left)) && old(method_Tree_blackHeight__Node(globals, node)) == method_Tree_blackHeight__Node(globals, sys__local__result__181) && (old(method_Tree_dbRedAtLeft__Node(globals, node)) ? method_Tree_dbRedAtRight__Node(globals, sys__local__result__181) : method_Tree_noDoubleRed__Node(globals, sys__local__result__181)) && (old(method_Tree_noDBlack__Node(globals, node)) ==> method_Tree_noDBlack__Node(globals, sys__local__result__181)) && (old(method_Tree_dblackAtRight__Node(globals, node)) ==> method_Tree_dblackAtRightRight__Node(globals, sys__local__result__181)) && (unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__181), write) in method_Tree_blackBalanced__Node(globals, sys__local__result__181.field_Node_left) && method_Tree_blackBalanced__Node(globals, sys__local__result__181.field_Node_right)) && (unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__181), write) in method_Tree_blackHeight__Node(globals, sys__local__result__181.field_Node_left) == (unfolding acc(method_Tree_tree_perm__Node(globals, sys__local__result__181.field_Node_right), write) in method_Tree_blackHeight__Node(globals, sys__local__result__181.field_Node_right.field_Node_left)))
  goto __return_rotateRight
  label __return_rotateRight
  sys__result := sys__local__result__181
  // assert
  assert sys__result != null && acc(method_Tree_tree_perm__Node(globals, sys__result), write) && method_Tree_sorted__Node(globals, sys__result) && (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in sys__result.field_Node_right != null) && old(method_Tree_toBag__Node(globals, node)) == method_Tree_toBag__Node(globals, sys__result) && old(method_Tree_getColor__Node(globals, node)) == method_Tree_getColor__Node(globals, sys__result) && old((unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in method_Tree_getColor__Node(globals, node.field_Node_left))) == (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_getColor__Node(globals, sys__result.field_Node_right)) && old((unfolding acc(method_Tree_tree_perm__Node(globals, node), write) in (unfolding acc(method_Tree_tree_perm__Node(globals, node.field_Node_left), write) in method_Tree_getColor__Node(globals, node.field_Node_left.field_Node_left)))) == (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_getColor__Node(globals, sys__result.field_Node_left)) && old(method_Tree_blackHeight__Node(globals, node)) == method_Tree_blackHeight__Node(globals, sys__result) && (old(method_Tree_dbRedAtLeft__Node(globals, node)) ? method_Tree_dbRedAtRight__Node(globals, sys__result) : method_Tree_noDoubleRed__Node(globals, sys__result)) && (old(method_Tree_noDBlack__Node(globals, node)) ==> method_Tree_noDBlack__Node(globals, sys__result)) && (old(method_Tree_dblackAtRight__Node(globals, node)) ==> method_Tree_dblackAtRightRight__Node(globals, sys__result)) && (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_blackBalanced__Node(globals, sys__result.field_Node_left) && method_Tree_blackBalanced__Node(globals, sys__result.field_Node_right)) && (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result), write) in method_Tree_blackHeight__Node(globals, sys__result.field_Node_left) == (unfolding acc(method_Tree_tree_perm__Node(globals, sys__result.field_Node_right), write) in method_Tree_blackHeight__Node(globals, sys__result.field_Node_right.field_Node_left)))
  inhale false
  label method_end_method_Tree_rotateRight__Node_32
}

method __contract_unsatisfiable__constructor_Tree_Tree(current_thread_id: Int, globals: Ref) returns (sys__result: Ref)
  requires 0 <= current_thread_id
  ensures sys__result != null
  ensures type_of(sys__result) == class_Tree()
{
  var diz__188: Ref
  diz__188 := new(field_Tree_root)
  inhale type_of(diz__188) == class_Tree()
  inhale true && true
  // assert
  assert false
  inhale false
  label method_end___contract_unsatisfiable__constructor_Tree_Tree_33
  sys__result := diz__188
  // assert
  assert sys__result != null && type_of(sys__result) == class_Tree()
  inhale false
}

method constructor_Tree_Tree(current_thread_id: Int, globals: Ref) returns (sys__result: Ref)
  requires 0 <= current_thread_id
  ensures sys__result != null
  ensures type_of(sys__result) == class_Tree()
  ensures acc(sys__result.field_Tree_root, write) && sys__result.field_Tree_root == null
{
  var diz__189: Ref
  diz__189 := new(field_Tree_root)
  inhale type_of(diz__189) == class_Tree()
  diz__189.field_Tree_root := null
  label method_end_constructor_Tree_Tree_34
  sys__result := diz__189
  // assert
  assert sys__result != null && type_of(sys__result) == class_Tree() && (acc(sys__result.field_Tree_root, write) && sys__result.field_Tree_root == null)
  inhale false
}

method constructor_Node_Node__Integer(current_thread_id: Int, globals: Ref, item: Int) returns (sys__result: Ref)
  requires 0 <= current_thread_id
  requires acc(globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE, wildcard)
  requires globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE <= item
  ensures sys__result != null
  ensures type_of(sys__result) == class_Node()
  ensures acc(sys__result.field_Node_key, write)
  ensures acc(sys__result.field_Node_left, write)
  ensures acc(sys__result.field_Node_right, write)
  ensures acc(sys__result.field_Node_color, write)
  ensures acc(sys__result.field_Node_dblack, write)
  ensures acc(sys__result.field_Node_dblackNull, write)
  ensures acc(globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE, wildcard)
  ensures globals.field_java_DOT_lang_DOT_Integer_MIN_VALUE <= sys__result.field_Node_key
  ensures sys__result.field_Node_key == item
  ensures sys__result.field_Node_left == null
  ensures sys__result.field_Node_right == null
  ensures sys__result.field_Node_color == true
  ensures sys__result.field_Node_dblack == false
  ensures sys__result.field_Node_dblackNull == false
{
  inhale false
}

method array_new_Bag_Integer_(size0: Int) returns (sys__result: Multiset[Int])
  ensures 0 < size0 ==> sys__result == Multiset[Int]()
{
  inhale false
}

method array_new_Sequence_Integer_(size0: Int) returns (sys__result: Seq[Int])
  ensures 0 < size0 ==> sys__result == Seq[Int]()
{
  inhale false
}

method array_new_Sequence_Node_(size0: Int) returns (sys__result: Seq[Ref])
  ensures 0 < size0 ==> sys__result == Seq[Ref]()
{
  inhale false
}